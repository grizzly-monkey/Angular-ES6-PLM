{"version":3,"sources":["../../../scripts/models/Picklist.js"],"names":[],"mappings":"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","file":"Picklist.js","sourcesContent":["'use strict';\n\n/**\n * @ngdoc object\n * @name Models.Picklist\n *\n * @description This class wraps a picklist data into an object\n *\n * ##Dependencies\n *\n */\nvar Picklist = function () {};\n\nPicklist.prototype = {\n\t/**\n\t * @ngdoc method\n\t * @name Models.Picklist#fetch\n\t * @methodOf Models.Ownership\n\t * @description Make a call to fetch raw data\n\t *\n\t * @param {String} link The URL to use for fetching the data\n\t *\n\t * @returns {Object} An object representation of the formatted data\n\t */\n\tfetchOptions: function (link, requestParams) {\n\t\tvar that = this;\n\t\tvar promises = [];\n\t\tvar totalCount = null;\n\n\t\tthat.json = {items: []};\n\n\t\tfunction makeRequest(link, requestParams) {\n\t\t\treturn that.RESTWrapperService.get(link, null, requestParams, {skipCache: true}).then(function (payload) {\n\n\t\t\t\tthat.json.items = payload.items ? that.json.items.concat(payload.items) : that.json.items;\n\n\t\t\t\t// Manual pagination\n\t\t\t\tif (totalCount === null) {\n\t\t\t\t\ttotalCount = payload.totalCount;\n\t\t\t\t}\n\t\t\t\trequestParams.offset = payload.offset + 10;\n\t\t\t\tif (requestParams.offset < totalCount) {\n\t\t\t\t\treturn makeRequest(link, requestParams);\n\t\t\t\t} else {\n\t\t\t\t\treturn that;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn makeRequest(link, requestParams).then(function () {\n\t\t\treturn that.Q.all(promises).then(function () {\n\t\t\t\treturn that;\n\t\t\t});\n\t\t});\n\t},\n\n\tfetchSelection: function (link, requestParams) {\n\t\tvar that = this;\n\t\treturn that.RESTWrapperService.get(link, null, requestParams, {skipCache: true}).then(function (payload) {\n\t\t\tthat.json = payload;\n\t\t\treturn that;\n\t\t});\n\t}\n};\n\nangular.module('plm360.models').factory('Picklist', [\n\t'RESTWrapperService',\n\t'EventService',\n\t'$q',\n\tfunction (RESTWrapperService, EventService, $q) {\n\t\tvar models = {};\n\n        Picklist.prototype.RESTWrapperService = RESTWrapperService;\n        Picklist.prototype.Q = $q;\n\n        EventService.listen('picklistWorkspaceOptions:*:get', function (event, params, requestParams) {\n            var model = models[params] || new Picklist();\n            models[params] = model;\n            model.fetchOptions(params, requestParams).then(function (obj) {\n                EventService.send('picklistWorkspaceOptions:' + event.split(':')[1] + ':done', obj);\n            });\n        });\n\n        EventService.listen('picklistWorkspaceSelection:*:get', function (event, params, requestParams) {\n            var model = models[params] || new Picklist();\n            models[params] = model;\n            model.fetchSelection(params, requestParams).then(function (obj) {\n                EventService.send('picklistWorkspaceSelection:' + event.split(':')[1] + ':done', obj);\n            });\n        });\n\n        EventService.listen('picklistoptions:*:get', function (event, params, requestParams) {\n            var model = models[params] || new Picklist();\n            models[params] = model;\n            model.fetchOptions(params, requestParams).then(function (obj) {\n                EventService.send('picklistoptions:' + event.split(':')[1] + ':done', obj);\n            });\n        });\n\n        EventService.listen('picklistselection:*:get', function (event, params, requestParams) {\n            var model = models[params] || new Picklist();\n            models[params] = model;\n            model.fetchSelection(params, requestParams).then(function (obj) {\n                EventService.send('picklistselection:' + event.split(':')[1] + ':done', obj);\n            });\n        });\n\n\t\treturn Picklist;\n\t}\n]);\n"]}