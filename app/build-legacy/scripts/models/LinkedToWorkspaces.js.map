{"version":3,"sources":["../../../scripts/models/LinkedToWorkspaces.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;AAWb,IAAI,kBAAkB,GAAG,SAArB,kBAAkB,GAAe,EAAE,CAAC;AACxC,IAAI,eAAe,CAAC;;AAEpB,kBAAkB,CAAC,SAAS,GAAG;;;;;;;;;;;AAW9B,MAAK,EAAE,eAAU,IAAI,EAAE;AACtB,MAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,SAAO,IAAI,CAAC,kBAAkB,CAC5B,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC,CACxC,IAAI,CAAC,UAAU,OAAO,EAAE;AACxB,OAAI,CAAC,IAAI,GAAG,OAAO,CAAC,UAAU,CAAC;AAC/B,UAAO,IAAI,CAAC;GACZ,CAAC,CAAC;EACJ;;;;;;;;;;AAUD,YAAW,EAAE,uBAAY;AACxB,SAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC/B;;;;;;;;;;;AAWD,yBAAwB,EAAE,oCAAY;AACrC,SAAO,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,iBAAiB,EAAE;AACvD,UAAO,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,KACvD,eAAe,CAAC,qBAAqB,CAAC;GACvC,CAAC,CAAC;EACH;CACD,CAAC;;AAEF,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,oBAAoB,EAAE,CAC7D,oBAAoB,EACpB,cAAc,EACd,gBAAgB,EAChB,UAAU,kBAAkB,EAAE,YAAY,EAAE,cAAc,EAAE;AAC3D,KAAI,MAAM,GAAG,EAAE,CAAC;AAChB,gBAAe,GAAG,cAAc,CAAC;;AAEjC,mBAAkB,CAAC,SAAS,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;;;AAGrE,aAAY,CAAC,MAAM,CAAC,0BAA0B,EAAE,UAAU,KAAK,EAAE,GAAG,EAAE;AACrE,MAAI,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,IAAI,kBAAkB,EAAE,CAAC;AACpD,QAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACpB,OAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE;AACpC,eAAY,CAAC,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,EAAE,GAAG,CAAC,CAAC;GAC9E,CAAC,CAAC;EACH,CAAC,CAAC;;AAEH,QAAO,kBAAkB,CAAC;CAC1B,CACD,CAAC,CAAC","file":"LinkedToWorkspaces.js","sourcesContent":["'use strict';\n\n/**\n * @ngdoc object\n * @name Models.LinkedToWorkspaces\n *\n * @description This class wraps the Linked To Workspaces payload into an object\n *\n * ##Dependencies\n *\n */\nvar LinkedToWorkspaces = function () {};\nvar WORKSPACE_TYPES;\n\nLinkedToWorkspaces.prototype = {\n\t/**\n\t * @ngdoc method\n\t * @name Models.LinkedToWorkspaces#fetch\n\t * @methodOf Models.LinkedToWorkspaces\n\t * @description Make a call to fetch raw data\n\t *\n\t * @param {String} link The URL to use for fetching the data\n\t *\n\t * @returns {Object} An object representation of the formatted data\n\t */\n\tfetch: function (link) {\n\t\tvar that = this;\n\n\t\treturn this.RESTWrapperService\n\t\t\t.get(link, null, null, {skipCache: true})\n\t\t\t.then(function (payload) {\n\t\t\t\tthat.json = payload.workspaces;\n\t\t\t\treturn that;\n\t\t\t});\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.LinkedToWorkspaces#getFullList\n\t * @methodOf Models.LinkedToWorkspaces\n\t * @description Returns a copy of the object's JSON\n\t *\n\t * @returns {Object} The item object\n\t */\n\tgetFullList: function () {\n\t\treturn angular.copy(this.json);\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.LinkedToWorkspaces#getRevisioningWorkspaces\n\t * @methodOf Models.LinkedToWorkspaces\n\t * @description Filters the object's JSON to contain only revisioning\n\t * workspaces\n\t *\n\t * @returns {Object} The filtered object\n\t */\n\tgetRevisioningWorkspaces: function () {\n\t\treturn _.filter(this.json, function (linkedToWorkspace) {\n\t\t\treturn parseInt(linkedToWorkspace.type.split('/').pop()) ===\n\t\t\t\tWORKSPACE_TYPES.REVISIONING_WORKSPACE;\n\t\t});\n\t}\n};\n\nangular.module('plm360.models').factory('LinkedToWorkspaces', [\n\t'RESTWrapperService',\n\t'EventService',\n\t'WorkspaceTypes',\n\tfunction (RESTWrapperService, EventService, WorkspaceTypes) {\n\t\tvar models = {};\n\t\tWORKSPACE_TYPES = WorkspaceTypes;\n\n\t\tLinkedToWorkspaces.prototype.RESTWrapperService = RESTWrapperService;\n\n\t\t// Get\n\t\tEventService.listen('linkedToWorkspaces:*:get', function (event, url) {\n\t\t\tvar model = models[url] || new LinkedToWorkspaces();\n\t\t\tmodels[url] = model;\n\t\t\tmodel.fetch(url).then(function (obj) {\n\t\t\t\tEventService.send('linkedToWorkspaces:' + event.split(':')[1] + ':done', obj);\n\t\t\t});\n\t\t});\n\n\t\treturn LinkedToWorkspaces;\n\t}\n]);\n"]}