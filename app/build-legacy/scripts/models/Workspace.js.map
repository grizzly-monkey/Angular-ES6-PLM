{"version":3,"sources":["../../../scripts/models/Workspace.js"],"names":[],"mappings":"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","file":"Workspace.js","sourcesContent":["'use strict';\n\n/**\n * @ngdoc object\n * @name Models.Workspace\n *\n * @description This class wraps a workspace payload into an object\n *\n * ##Dependencies\n *\n */\n\n// Define the constructor\nvar Workspace = function () {\n\tthis.section = null;\n\tthis.workspace = null;\n};\n\nWorkspace.prototype = {\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#fetch\n\t * @methodOf Models.Workspace\n\t * @description Make a call to fetch raw data\n\t *\n\t * @param {String} link The URL to use for fetching the data\n\t * @param {Object} workspacesObj The data model of workspaces\n\t *\n\t * @returns {Object} An object representation of the formatted data\n\t */\n\tfetch: function (link, workspaceId, workspacesObj) {\n\t\tvar that = this;\n\n\t\treturn this.RESTWrapperService.get(link, null, null, {}).then(function (payload) {\n\t\t\tthat.json = payload;\n\t\t\tthat.json.id = (workspaceId.indexOf('/') ?\n\t\t\t\tworkspaceId.substring(workspaceId.lastIndexOf('/') + 1) : workspaceId);\n\n\t\t\tthat.views = {\n\t\t\t\tlink: 'api/v3/workspaces/' + that.json.id + '/slices'\n\t\t\t};\n\t\t\tthat.viewDefs = {\n\t\t\t\tlink: 'api/v3/workspaces/' + that.json.id + '/views/5'\n\t\t\t};\n\t\t\tthat.fieldsDefs = {\n\t\t\t\tlink: 'api/v3/workspaces/' + that.json.id + '/fields'\n\t\t\t};\n\t\t\tthat.item = {\n\t\t\t\tlink: 'api/v3/workspaces/' + that.json.id + '/items/[dmsId]'\n\t\t\t};\n\t\t\tthat.tabs = {\n\t\t\t\tlink: 'api/v3/workspaces/' + that.json.id + '/tabs'\n\t\t\t};\n\t\t\tthat.userPermissions = {\n\t\t\t\tlink: 'api/v3/workspaces/' + that.json.id + '/users/[userId]/permissions'\n\t\t\t};\n\t\t\tthat.affectedItemRelatedWorkspaces = {\n\t\t\t\tlink: 'api/v3/workspaces/' + that.json.id + '/views/100/related-workspaces'\n\t\t\t};\n\t\t\tthat.relationshipRelatedWorkspaces = {\n\t\t\t\tlink: 'api/v3/workspaces/' + that.json.id + '/views/10/related-workspaces'\n\t\t\t};\n\t\t\tthat.bomRelatedWorkspaces = {\n\t\t\t\tlink: 'api/v3/workspaces/' + that.json.id + '/views/200/related-workspaces'\n\t\t\t};\n\t\t\tthat.namedRelationshipRelatedWorkspaces = {\n\t\t\t\tlink: 'api/v3/workspaces/' + that.json.id + '/relationships/[namedRelationshipId]/range'\n\t\t\t};\n\t\t\tthat.affectedItemLinkedToWorkspaces = {\n\t\t\t\tlink: 'api/v3/workspaces/' + that.json.id + '/views/11/linkedto-workspaces'\n\t\t\t};\n\t\t\tthat.workflowStates = {\n\t\t\t\tlink: 'api/v3/workspaces/' + that.json.id + '/workflows/1/states'\n\t\t\t};\n\t\t\tthat.lifecycleWorkflowStates = {\n\t\t\t\tlink: 'api/v3/workspaces/' + that.json.id + '/workflows/9223372036854775807/states'\n\t\t\t};\n\t\t\tthat.lifecycleWorkflowState = {\n\t\t\t\tlink: 'api/v3/workspaces/' + that.json.id + '/workflows/9223372036854775807/states/[stateId]'\n\t\t\t};\n\t\t\tthat.workflowTransitions = {\n\t\t\t\tlink: 'api/v3/workspaces/' + that.json.id + '/workflows/0/transitions'\n\t\t\t};\n\t\t\tthat.lifecycleWorkflowStateTransitions = {\n\t\t\t\tlink: 'api/v3/workspaces/' + that.json.id + '/workflows/9223372036854775807/states/[stateId]/transitions'\n\t\t\t};\n\n\t\t\tvar data = workspacesObj.getFullList();\n\n\t\t\tthat._.each(data.sections, function (section) {\n\t\t\t\tif (!that.getWorkspace()) {\n\t\t\t\t\tthat.setWorkspace(_.find(section.workspaces, function (workspace) {\n\t\t\t\t\t\tif (workspace.id === parseInt(that.json.id)) {\n\t\t\t\t\t\t\tthat.setSection(section);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn that;\n\t\t});\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getFullList\n\t * @methodOf Models.Workspace\n\t * @description Returns the full list of data\n\t *\n\t * @returns {Array} The full list of data\n\t */\n\tgetFullList: function () {\n\t\treturn angular.copy(this.json);\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getWorkspace\n\t * @methodOf Models.Workspace\n\t * @description Returns this workspace\n\t *\n\t * @returns {Object} The workspace object\n\t */\n\tgetWorkspace: function () {\n\t\treturn angular.copy(this.workspace);\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#setWorkspace\n\t * @methodOf Models.Workspace\n\t * @description Sets this workspace\n\t *\n\t * @param {Object} workspace The workspace to set to\n\t */\n\tsetWorkspace: function (workspace) {\n\t\tthis.workspace = workspace;\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#addValidationRules\n\t * @methodOf Models.Workspace\n\t * @description Add the validations rules to each field containing validators\n\t *\n\t * @param {Object} fieldObj The object which validationRules objects are added to\n\t *\n\t * @return {Object} promise that resolves when fetching is done or a fake promise in-case field has not validators\n\t */\n\taddValidationRules: function (fieldObj) {\n\t\tif (fieldObj.fieldMetadata.validators) {\n\t\t\treturn this.RESTWrapperService\n\t\t\t\t.get(fieldObj.fieldMetadata.validators.substring(1), null, null, {})\n\t\t\t\t.then(function (validationRules) {\n\t\t\t\t\tfieldObj.fieldMetadata.validationRules = {};\n\n\t\t\t\t\tvalidationRules.forEach(rule => {\n\t\t\t\t\t\tfieldObj.fieldMetadata.validationRules[rule.validatorName] = rule;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t} else {\n\t\t\treturn this.$q.when('');\n\t\t}\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getSections\n\t * @methodOf Models.Workspace\n\t * @description Returns the sections of this workspace meta\n\t *\n\t * @param {Boolean} isEdit Flag indicating whether we're currently in edit mode\n\t *\n\t * @returns {Object} A promise that resolves after fetchings are done\n\t */\n\tgetSectionsMeta: function (isEdit) {\n\t\tif (angular.isDefined(this.json.sectionsMeta)) {\n\t\t\treturn this.$q.when('');\n\t\t}\n\n\t\tvar that = this;\n\t\tvar deferred = this.$q.defer();\n\n\t\tthis.RESTWrapperService.get(this.json.sections.substring(1), null, null, {}, {Accept: that.WORKSPACE_HTTP_META_VALUES.BULK_SECTION}).then(function (payload) {\n\t\t\tvar promises = []; // Holds the promises for each section\n\t\t\tthat.json.sectionsMeta = [];\n\n\t\t\tthat._.each(payload, function (section) {\n\t\t\t\t// backward compatibility\n\t\t\t\tsection = {\n\t\t\t\t\tlink: section.__self__,\n\t\t\t\t\ttitle: section.name,\n\t\t\t\t\turn: section.urn,\n\t\t\t\t\tdefinition: section\n\t\t\t\t};\n\t\t\t\tthat.json.sectionsMeta.push(section);\n\n\t\t\t\tvar localDeferred = that.$q.defer();\n\t\t\t\tpromises.push(localDeferred.promise);\n\n\t\t\t\tthat.RESTWrapperService.get(that.fieldsDefs.link, null, null, {}).then(function (fieldsDefsPayload) {\n\t\t\t\t\tvar sectionFieldsPromises = []; // Holds the promises for all fields in this section\n\n\t\t\t\t\tthat._.each(section.definition.fields, function (field) {\n\t\t\t\t\t\tvar sectionFieldsDeferred = that.$q.defer();\n\t\t\t\t\t\tsectionFieldsPromises.push(sectionFieldsDeferred.promise); // Add a promise for each field in inside the section to the array\n\n\t\t\t\t\t\tif (field.type === 'MATRIX') {\n\t\t\t\t\t\t\tthat.RESTWrapperService.get(field.link.substring(1), null, null, {}).then(function (matrixPayload) {\n\t\t\t\t\t\t\t\tvar matrixFieldsPromises = []; // Holds the promises for the fields inside this matrix\n\t\t\t\t\t\t\t\tfield.definition = matrixPayload;\n\n\t\t\t\t\t\t\t\t// Fetches metadata for the fields in the matrix\n\t\t\t\t\t\t\t\tthat._.each(field.definition.fields, function (row) {\n\t\t\t\t\t\t\t\t\tthat._.each(row, function (col) {\n\t\t\t\t\t\t\t\t\t\t// Pushes a promise to the array for each field in this matrix\n\t\t\t\t\t\t\t\t\t\tvar matrixFieldsDeferred = that.$q.defer();\n\t\t\t\t\t\t\t\t\t\tmatrixFieldsPromises.push(matrixFieldsDeferred.promise);\n\n\t\t\t\t\t\t\t\t\t\t// Cells that are empty (i.e. don't have fields in them) are nulls\n\t\t\t\t\t\t\t\t\t\tif (col !== null) {\n\t\t\t\t\t\t\t\t\t\t\tcol.fieldMetadata = _.find(fieldsDefsPayload.fields, function (fieldMeta) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn col.link === fieldMeta.__self__;\n\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t\tthat.addValidationRules(col).then(function () {\n\t\t\t\t\t\t\t\t\t\t\t\tif (col.fieldMetadata.picklist !== 'null' && col.fieldMetadata.picklist !== null) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat.setPicklistHook(col).then(function () {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmatrixFieldsDeferred.resolve();\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// Resolve the promise for this field of type FIELD\n\t\t\t\t\t\t\t\t\t\t\t\t\tmatrixFieldsDeferred.resolve();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tmatrixFieldsDeferred.resolve(); // Empty cell in the matrix, resolve the promise immediately\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t// Once the metadata for all fields inside the matrix has been retrieved, this \"field\" (which is actually a matrix)\n\t\t\t\t\t\t\t\t// has been completed, so now resolve the field promise\n\t\t\t\t\t\t\t\tthat.$q.all(matrixFieldsPromises).then(function () {\n\t\t\t\t\t\t\t\t\tsectionFieldsDeferred.resolve();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfield.fieldMetadata = _.find(fieldsDefsPayload.fields, function (fieldMeta) {\n\t\t\t\t\t\t\t\treturn field.link === fieldMeta.__self__;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tthat.addValidationRules(field).then(function () {\n\t\t\t\t\t\t\t\tif (field.fieldMetadata.picklist !== 'null' && field.fieldMetadata.picklist !== null) {\n\t\t\t\t\t\t\t\t\tthat.setPicklistHook(field).then(function () {\n\t\t\t\t\t\t\t\t\t\tsectionFieldsDeferred.resolve();\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// Resolve the promise for this field of type FIELD\n\t\t\t\t\t\t\t\t\tsectionFieldsDeferred.resolve();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t// All promises for the fields in this section have been resolved, resolve the section promise\n\t\t\t\t\t// Note: this will also resolve if the section is empty, because no promises will be added to this array\n\t\t\t\t\tthat.$q.all(sectionFieldsPromises).then(function () {\n\t\t\t\t\t\tlocalDeferred.resolve();\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// All promises for all sections have been resolved\n\t\t\tthat.$q.all(promises).then(function () {\n\t\t\t\tdeferred.resolve();\n\t\t\t});\n\t\t});\n\n\t\treturn deferred.promise;\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#setPicklistHook\n\t * @methodOf Models.Workspace\n\t * @description Sets the correct hooks for loading options of picklists, augmenting the original field object\n\t *\n\t * @params {Object} field The field object containing all necessary metadata and other info\n\t *\n\t * @returns {Promise} The promise will resolved when the data for the picklist has been loaded\n\t *\n\t */\n\tsetPicklistHook: function (field) {\n\t\tvar that = this;\n\t\tvar deferred = that.$q.defer();\n\t\tvar picklistEndpoint = field.fieldMetadata.picklist.substring(1).replace('picklists', 'lookups');\n\t\tvar fieldType = parseInt(field.fieldMetadata.type.link.substring(field.fieldMetadata.type.link.lastIndexOf('/') + 1));\n\n\t\t// NOTE: This is temporary until we migrate all picklist types\n\t\t// Checks for which picklists should use the new widget, therefore not needing to fetch the\n\t\t// first page of options by default (since the first page is going to be loaded upon clicking the PL)\n\t\tvar enabledPls = [that.FieldTypes.UOM, that.FieldTypes.PICKLIST, that.FieldTypes.PICKLIST_DEFAULT, that.FieldTypes.PICKLIST_DEFAULT_LINKED, that.FieldTypes.PICKLIST_LATEST, that.FieldTypes.PICKLIST_LINKED, that.FieldTypes.PICKLIST_LRL, that.FieldTypes.PICKLIST_WITH_FILTER, that.FieldTypes.PICKLIST_FILTER_LINKED];\n\t\tvar isEnabledPl = _.find(enabledPls, function (val) {\n\t\t\treturn val === fieldType;\n\t\t});\n\n\t\tif (angular.isDefined(isEnabledPl)) {\n\t\t\t// Method that performs a fetch containing a query string to retrieve results that match it (by \"contains\")\n\t\t\tfield.fieldMetadata.picklistLoaderWithFiltering = function (query) {\n\t\t\t\treturn that.getPicklistValuesWithFiltering(picklistEndpoint, query);\n\t\t\t};\n\t\t\tfield.fieldMetadata.picklistPivotLoader = function (itemLink) {\n\t\t\t\tvar itemId = null;\n\n\t\t\t\tif (angular.isDefined(itemLink)) {\n\t\t\t\t\titemId = itemLink.substring(itemLink.lastIndexOf('/') + 1);\n\t\t\t\t}\n\n\t\t\t\treturn that.getPicklistPivotValues(field.fieldMetadata.pivotLink, itemId);\n\t\t\t};\n\n\t\t\tdeferred.resolve();\n\t\t} else { // All other picklists, load first batch of values\n\t\t\tthat.getPicklistValues(picklistEndpoint, field).then(function (ret) {\n\t\t\t\tdeferred.resolve();\n\t\t\t});\n\t\t}\n\n\t\treturn deferred.promise;\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getPicklistValues\n\t * @methodOf Models.Workspace\n\t * @description Lazy-loads the first chunk of values of picklists on page load\n\t *\n\t * @params {String} picklistEndpoint The endpoint to hit\n\t * @params {Object} field The field object\n\t *\n\t * @returns {Promise} The promise will resolved when the data for the picklist has been loaded\n\t *\n\t */\n\tgetPicklistValues: function (picklistEndpoint, field) {\n\t\tvar that = this;\n\t\tvar deferred = that.$q.defer();\n\n\t\t// Note that the UI cache will always be skipped when fetching picklist data\n\t\tthat.RESTWrapperService.get(picklistEndpoint, null, null, {\n\t\t\tskipCache: true\n\t\t}).then(function (picklistPayload) {\n\t\t\tif (picklistPayload.totalCount > 10) {\n\t\t\t\tvar fieldType = parseInt(field.fieldMetadata.type.link.substring(field.fieldMetadata.type.link.lastIndexOf('/') + 1));\n\t\t\t\tfield.fieldMetadata.picklistPayload = picklistPayload;\n\n\t\t\t\t// if radio button picklists\n\t\t\t\tif (fieldType === that.FieldTypes.RADIO || fieldType === that.FieldTypes.RADIO_LINKED) {\n\t\t\t\t\tthat.getPicklistValuesRecursively(picklistEndpoint)\n\t\t\t\t\t\t.then(function (allItems) {\n\t\t\t\t\t\t\t// TODO: If allItems is returned empty this should be shown to the user\n\t\t\t\t\t\t\t// as an error in the field\n\t\t\t\t\t\t\tfield.fieldMetadata.picklistPayload.items = allItems;\n\t\t\t\t\t\t\tdeferred.resolve(field);\n\t\t\t\t\t\t});\n\t\t\t\t// otherwise\n\t\t\t\t} else {\n\t\t\t\t\tfield.fieldMetadata.picklistLoader = function (callback) {\n\t\t\t\t\t\tthat.getPicklistValuesRecursively(picklistEndpoint)\n\t\t\t\t\t\t\t.then(function (allItems) {\n\t\t\t\t\t\t\t\tcallback(allItems);\n\t\t\t\t\t\t\t}, function () {\n\t\t\t\t\t\t\t\tcallback([]);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\tdeferred.resolve(field);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfield.fieldMetadata.picklistPayload = picklistPayload;\n\t\t\t\t// Resolve the promise for this field of type FIELD\n\t\t\t\tdeferred.resolve(field);\n\t\t\t}\n\t\t}, function () {\n\t\t\t// Resolve the promise for this field of type FIELD\n\t\t\tdeferred.resolve(field);\n\t\t});\n\t\treturn deferred.promise;\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getPicklistValuesWithFiltering\n\t * @methodOf Models.Workspace\n\t * @description Make a call to the backend containing a query, limited by a certain amount\n\t *\n\t * @params {String} picklistEndpoint\tThe endpoint to hit\n\t * @params {String} query \t\t\t\t\tThe string to query for\n\t *\n\t * @returns {Promise} The promise will resolved when all calls finish or any of them returns without proper data\n\t *\n\t */\n\tgetPicklistValuesWithFiltering: function (picklistEndpoint, query) {\n\t\tvar that = this;\n\t\tvar deferred = that.$q.defer();\n\t\tvar items = [];\n\n\t\tthat.RESTWrapperService.get(picklistEndpoint, null, {\n\t\t\tlimit: 25, // Move to global settings\n\t\t\tfilter: query\n\t\t}, {\n\t\t\tskipCache: true\n\t\t}).then(function (payload) {\n\t\t\tif (angular.isDefined(payload.items)) {\n\t\t\t\tdeferred.resolve(payload);\n\t\t\t} else { // This handles 204s - when no results are found (should be handled more gracefully, though)\n\t\t\t\tdeferred.resolve({\n\t\t\t\t\titems: [],\n\t\t\t\t\ttotalCount: 0\n\t\t\t\t});\n\t\t\t}\n\t\t}, function () { // Treat errors more gracefully so the picklist can display something\n\t\t\tdeferred.resolve({\n\t\t\t\titems: [],\n\t\t\t\ttotalCount: 0\n\t\t\t});\n\t\t});\n\n\t\treturn deferred.promise;\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getPicklistPivotValues\n\t * @methodOf Models.Workspace\n\t * @description Fetch values for the derived fields based on the selection in the pivot\n\t *\n\t * @params {String} pivotLink\tThe endpoint to retrieve the values for the derived fields\n\t * @params {String} itemId\t\tThe id for the item selected in the pivot\n\t *\n\t * @returns {Promise} The promise will be resolved when all the calls finish or any of them returns without proper data\n\t *\n\t */\n\tgetPicklistPivotValues: function (pivotLink, itemId) {\n\t\tvar that = this;\n\t\tvar deferred = that.$q.defer();\n\t\tvar queryParams = null;\n\n\t\tif (angular.isDefined(itemId)) {\n\t\t\tqueryParams = {pivotItemId: itemId};\n\t\t}\n\n\t\tthat.RESTWrapperService.get(pivotLink, null, queryParams, {\n\t\t\tskipCache: true\n\t\t}).then(function (payload) {\n\t\t\tif (angular.isDefined(payload)) {\n\t\t\t\tdeferred.resolve(payload);\n\t\t\t} else { // This handles 204s - when no results are found (should be handled more gracefully, though)\n\t\t\t\tdeferred.resolve();\n\t\t\t}\n\t\t}, function () { // Treat errors more gracefully so the picklist can display something\n\t\t\tdeferred.resolve();\n\t\t});\n\n\t\treturn deferred.promise;\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getPicklistValuesRecursively\n\t * @methodOf Models.Workspace\n\t * @description Make all necessary calls to retrieve the entire values list\n\t *\n\t * @params {String} The endpoint to hit\n\t *\n\t * @returns {Promise} The promise will resolved when all calls finish or any of them returns without proper data\n\t */\n\tgetPicklistValuesRecursively: function (picklistEndpoint) {\n\t\tvar that = this;\n\t\tvar deferred = that.$q.defer();\n\t\tvar items = [];\n\n\t\t/**\n\t\t * The recursion is made by chaining one request with the next one,\n\t\t * using the link retrieved by the previous one. This can be done\n\t\t * differently by using several promises and waiting for all to resolve,\n\t\t * using the totalCount value and requesting all pages until reaching\n\t\t * the items total.\n\t\t */\n\t\tvar recursiveHit = function () {\n\t\t\tthat.RESTWrapperService.get(picklistEndpoint, null, null, {\n\t\t\t\tskipCache: true\n\t\t\t}).then(function (payload) {\n\t\t\t\tif (payload && payload.items) {\n\t\t\t\t\titems = items.concat(payload.items);\n\t\t\t\t\tif (payload.next && payload.next.link) {\n\t\t\t\t\t\tpicklistEndpoint = payload.next.link.substring(1);\n\t\t\t\t\t\trecursiveHit();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdeferred.resolve(_.uniq(items));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// At this moment this is failing because the endpoint\n\t\t\t\t\t// fails when offset > 12. So return whatever that has\n\t\t\t\t\t// been fetched to be coherent with the approach\n\t\t\t\t\tdeferred.resolve(_.uniq(items));\n\t\t\t\t}\n\t\t\t}, function () {\n\t\t\t\t// TODO Handle the empty array when any request fail\n\t\t\t\tdeferred.resolve([]);\n\t\t\t});\n\t\t};\n\n\t\trecursiveHit();\n\t\treturn deferred.promise;\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getSectionsMetadata\n\t * @methodOf Models.Workspace\n\t * @description Returns this sections of this workspace\n\t *\n\t * @returns {Object} The sections object\n\t */\n\tgetSectionsMetadata: function () {\n\t\treturn this.json.sectionsMeta;\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @ngdoc method\n\t * @name Models.Workspace#getSection\n\t * @methodOf Models.Workspace\n\t * @description Returns this section\n\t *\n\t * @returns {Object} The section object\n\t */\n\tgetSection: function () {\n\t\treturn angular.copy(this.section);\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#setSection\n\t * @methodOf Models.Workspace\n\t * @description Sets this section\n\t *\n\t * @param {Object} section The section to set to\n\t */\n\tsetSection: function (section) {\n\t\tthis.section = section;\n\t\t// Just remove the workspace array from the section to avoid confusion\n\t\tdelete this.section.workspaces;\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getDisplayName\n\t * @methodOf Models.Workspace\n\t * @description Returns the display name of this workspace\n\t *\n\t * @returns {String} The display name of the workspace\n\t */\n\tgetDisplayName: function () {\n\t\treturn (angular.isDefined(this.json) ? this.json.name : '');\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getId\n\t * @methodOf Models.Workspace\n\t * @description Returns the id of this workspace\n\t *\n\t * @returns {String} The id of the workspace\n\t */\n\tgetId: function () {\n\t\treturn (angular.isDefined(this.json) ? this.json.id : '');\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getTypeId\n\t * @methodOf Models.Workspace\n\t * @description Returns the type id of this workspace\n\t *\n\t * @returns {String} The type id of the workspace\n\t */\n\tgetTypeId: function () {\n\t\treturn this.json.type.substring(this.json.type.lastIndexOf('/') + 1);\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getViewsLink\n\t * @methodOf Models.Workspace\n\t * @description Returns the REST api link for the workspace views\n\t *\n\t * @returns {String} The string representation of the REST link\n\t */\n\tgetViewsLink: function () {\n\t\treturn this.views.link;\n\t},\n\n\t\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getViewsLink\n\t * @methodOf Models.Workspace\n\t * @description Returns the REST api link for the workspace views\n\t *\n\t * @returns {String} The string representation of the REST link\n\t */\n\tgetViewDefsLink: function () {\n\t\treturn this.viewDefs.link;\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getTabsLink\n\t * @methodOf Models.Workspace\n\t * @description Returns the REST api link for the workspace tabs\n\t *\n\t * @returns {String} The string representation of the REST link\n\t */\n\tgetTabsLink: function () {\n\t\treturn this.tabs.link;\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getUserPermissionsLink\n\t * @methodOf Models.Workspace\n\t * @description Returns the REST api link for the user permissions given the id\n\t *\n\t * @param {Number} userId The ID of the user whose permissions to be retrieved\n\t *\n\t * @returns {String} The string representation of the REST link\n\t */\n\tgetUserPermissionsLink: function (userId) {\n\t\treturn this.userPermissions.link.replace('[userId]', userId);\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getItemLink\n\t * @methodOf Models.Workspace\n\t * @description Returns the REST api link for the item given the id\n\t *\n\t * @param {Number} dmsId The ID of the item to be retrieved\n\t *\n\t * @returns {String} The string representation of the REST link\n\t */\n\tgetItemLink: function (dmsId) {\n\t\treturn this.item.link.replace('[dmsId]', dmsId);\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getItemsLink\n\t * @methodOf Models.Workspace\n\t * @description Returns the REST api link for the workspace items given the id\n\t *\n\t * @param {Object} viewsObj The object model for views where the link is defined\n\t * @param {Number} viewId The view ID whose items to be retrieved\n\t *\n\t * @returns {String} The string representation of the REST link\n\t */\n\tgetItemsLink: function (viewsObj, viewId) {\n\t\treturn viewsObj.getViewLink(viewId).replace('[workspaceId]', this.json.id);\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getAffectedItemRelatedWorkspacesLink\n\t * @methodOf Models.Workspace\n\t * @description Returns the REST api link for the affected items related workspaces\n\t *\n\t * @returns {String} The string representation of the REST link\n\t */\n\tgetAffectedItemRelatedWorkspacesLink: function () {\n\t\treturn this.affectedItemRelatedWorkspaces.link;\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getRelationshipRelatedWorkspacesLink\n\t * @methodOf Models.Workspace\n\t * @description Returns the REST api link for the relationships items related workspaces\n\t *\n\t * @returns {String} The string representation of the REST link\n\t */\n\tgetRelationshipRelatedWorkspacesLink: function () {\n\t\treturn this.relationshipRelatedWorkspaces.link;\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getBomRelatedWorkspacesLink\n\t * @methodOf Models.Workspace\n\t * @description Returns the REST api link for the bom items related workspaces\n\t *\n\t * @returns {String} The string representation of the REST link\n\t */\n\tgetBomRelatedWorkspacesLink: function () {\n\t\treturn this.bomRelatedWorkspaces.link;\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getRelationshipRelatedWorkspacesLink\n\t * @methodOf Models.Workspace\n\t * @description Returns the REST api link for the relationships items related workspaces\n\n\t * @param {String} namedRelationshipId The id of the named relationship\n\t *\n\t * @returns {String} The string representation of the REST link\n\t */\n\tgetNamedRelationshipRelatedWorkspacesLink: function (namedRelationshipId) {\n\t\treturn this.namedRelationshipRelatedWorkspaces.link\n\t\t\t.replace('[namedRelationshipId]', namedRelationshipId);\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getLinkedToWorkspacesLink\n\t * @methodOf Models.Workspace\n\t * @description Returns the REST api link for the linked-to workspaces\n\t * for an affected item\n\t *\n\t * @returns {String} The string representation of the REST link\n\t *\n\t */\n\tgetLinkedToWorkspacesLink: function () {\n\t\treturn this.affectedItemLinkedToWorkspaces.link;\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getWorkflowStatesLink\n\t * @methodOf Models.Workspace\n\t * @description Returns the REST api link for the workflow states\n\t *\n\t * @returns {String} The string representation of the REST link\n\t */\n\tgetWorkflowStatesLink: function () {\n\t\treturn this.workflowStates.link;\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getWorkflowTransitionsLink\n\t * @methodOf Models.Workspace\n\t * @description Returns the REST api link for the workflow transitions\n\t *\n\t * @returns {String} The string representation of the REST link\n\t */\n\tgetWorkflowTransitionsLink: function () {\n\t\treturn this.workflowTransitions.link;\n\t},\n\n\t/**\n \t * @ngdoc method\n\t * @name Models.Workspace#getLifecycleWorkflowStatesLink\n\t * @methodOf Models.Workspace\n\t * @description Returns the REST api link for the lifecycle workflow states\n\t *\n\t * @returns {String} The string representation of the REST link\n\t */\n\tgetLifecycleWorkflowStatesLink: function () {\n\t\treturn this.lifecycleWorkflowStates.link;\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getLifecycleWorkflowStateLink\n\t * @methodOf Models.Workspace\n\t * @description Returns the REST api link for the lifecycle workflow state\n\t *\n\t * @param {String} stateId the id of the state\n\t *\n\t * @returns {String} The string representation of the REST link\n\t */\n\tgetLifecycleWorkflowStateLink: function (stateId) {\n\t\treturn this.lifecycleWorkflowState.link.replace('[stateId]', stateId);\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getLifecycleWorkflowStateTransitionsLink\n\t * @methodOf Models.Workspace\n\t * @description Returns the REST api link for the lifecycle workflow state's transitions\n\t *\n\t * @param {String} stateId the id of the state\n\t *\n\t * @returns {String} The string representation of the REST link\n\t */\n\tgetLifecycleWorkflowStateTransitionsLink: function (stateId) {\n\t\treturn this.lifecycleWorkflowStateTransitions.link.replace('[stateId]', stateId);\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getViewDetailsFieldsData\n\t * @methodOf Models.Workspace\n\t * @description This method can be used to fetch the field details in item\n\t * details view. This method traverses all the sections of the workspace and\n\t * then each field of the section to fetch the necessary metadata, and\n\t * validation information.\n\t *\n\t * @param {Function} filter An optional filter function that can be used to\n\t * filter the list of fields. This can be useful in case of quick create.\n\t *\n\t * @returns {Array} A promise, and when resolved, an array containing the\n\t * sections and, inside each one of them, the field types and their values\n\t *\n\t */\n\tgetViewDetailsFieldsData: function (filter) {\n\t\tvar that = this;\n\t\tvar itemDetailsFieldValuesArr = []; // The array to return\n\t\tvar deferredObj = this.$q.defer();\n\t\tvar fieldMetaDataPromises = [];\n\t\tvar fieldTypeOrValidatorPromises = [];\n\t\tvar matrixMetaDataPromises = [];\n\n\t\t/**\n\t\t * Helper function to get field meta data.\n\t\t * @param {Object} field Object representing the field\n\t\t * @param {Array} fieldMetaDataPromises The list of promises for field meta data\n\t\t * @param {Array} fieldTypeOrValidatorPromises The list of promises for field type and validators meta data\n\t\t *\n\t\t * @private\n\t\t */\n\t\tvar getFieldMetaData = function (field, fieldMetaDataPromises, fieldTypeOrValidatorPromises) {\n\t\t\tfieldMetaDataPromises.push(that.RESTWrapperService.get(field.link.substring(1), null, null, null, {\n\t\t\t\tACCEPT: 'application/vnd.autodesk.plm.meta+json'\n\t\t\t}).then(function (payload) {\n\t\t\t\tthat._.extend(field, payload);\n\n\t\t\t\tif (!angular.isDefined(field.metadata)) {\n\t\t\t\t\tfieldTypeOrValidatorPromises.push(\n\t\t\t\t\t\tthat.RESTWrapperService\n\t\t\t\t\t\t\t.get(field.type.link.substring(1), null, null, {})\n\t\t\t\t\t\t\t.then(function (metadata) {\n\t\t\t\t\t\t\t\tfield.metadata = metadata;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (field.validators && !angular.isDefined(field.validatorsMeta)) {\n\t\t\t\t\tfieldTypeOrValidatorPromises.push(\n\t\t\t\t\t\tthat.RESTWrapperService\n\t\t\t\t\t\t\t.get(field.validators.substring(1), null, null, {})\n\t\t\t\t\t\t\t.then(function (validatorsMeta) {\n\t\t\t\t\t\t\t\t// TODO Change name. Hate it.\n\t\t\t\t\t\t\t\tfield.validatorsMeta = validatorsMeta;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}));\n\t\t};\n\n\t\t/**\n\t\t * Helper function to get matrix meta data.\n\t\t * @param {Object} field Object representing the field\n\t\t * @param {Array} matrixMetaDataPromises The list of promises for matrix meta data\n\t\t * @param {Array} fieldMetaDataPromises The list of promises for field meta data\n\t\t * @param {Array} fieldTypeOrValidatorPromises The list of promises for field type and validators meta data\n\t\t *\n\t\t * @private\n\t\t */\n\t\tvar getMatrixMetaData = function (field, matrixMetaDataPromises, fieldMetaDataPromises, fieldTypeOrValidatorPromises) {\n\t\t\tmatrixMetaDataPromises.push(that.RESTWrapperService.get(field.link.substring(1), null, null, null, {\n\t\t\t\tACCEPT: 'application/vnd.autodesk.plm.meta+json'\n\t\t\t}).then(function (payload) {\n\t\t\t\tthat._.extend(field, payload);\n\n\t\t\t\tthat._.times(field.height, function (rowIndex) {\n\t\t\t\t\tthat._.times(field.width, function (colIndex) {\n\t\t\t\t\t\tif (field.fields[rowIndex][colIndex]) {\n\t\t\t\t\t\t\tfield.fields[rowIndex][colIndex].fieldType = field.fields[rowIndex][colIndex].type;\n\n\t\t\t\t\t\t\tif (field.fields[rowIndex][colIndex].fieldType === 'MATRIX') {\n\t\t\t\t\t\t\t\tgetMatrixMetaData(field.fields[rowIndex][colIndex], matrixMetaDataPromises, fieldMetaDataPromises, fieldTypeOrValidatorPromises);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tgetFieldMetaData(field.fields[rowIndex][colIndex], fieldMetaDataPromises, fieldTypeOrValidatorPromises);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}));\n\t\t};\n\n\t\t/**\n\t\t * Helper function to get classification fields\n\t\t *\n\t\t * @return {Promise} THe promise of classification fields Object\n\t\t * @private\n\t\t */\n\t\tvar getClassificationFields = function (urn) {\n\t\t\tvar deferred = that.$q.defer();\n\t\t\tthat.ClassificationService.getClassificationFields(urn, urn, null, true).then(function (response) {\n\t\t\t\tdeferred.resolve(response);\n\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tvar cwsPromises = [];\n\t\tthis.getSectionsMeta().then(function () {\n\t\t\tthat._.each(that.getSectionsMetadata(), function (section) {\n\t\t\t\tif (section.definition.type === that.SECTION_TYPES.CLASSIFICATION) {\n\t\t\t\t\tcwsPromises.push(getClassificationFields(that.getWorkspaceUrn()));\n\t\t\t\t}\n\t\t\t\tthat._.each(section.definition.fields, function (field) {\n\t\t\t\t\tif (angular.isUndefined(field.fieldType)) {\n\t\t\t\t\t\t// Keep reference of the type field, as it will be\n\t\t\t\t\t\t// replaced with the type link when field payload is loaded.\n\t\t\t\t\t\tfield.fieldType = field.type;\n\n\t\t\t\t\t\tif (field.fieldType === 'MATRIX') {\n\t\t\t\t\t\t\tgetMatrixMetaData(field, matrixMetaDataPromises, fieldMetaDataPromises, fieldTypeOrValidatorPromises);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgetFieldMetaData(field, fieldMetaDataPromises, fieldTypeOrValidatorPromises);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tthat.$q.all(matrixMetaDataPromises).then(function () {\n\t\t\t\tthat.$q.all(fieldMetaDataPromises).then(function () {\n\t\t\t\t\tthat.$q.all(fieldTypeOrValidatorPromises).then(function () {\n\t\t\t\t\t\tthat.$q.all(cwsPromises).then(function (cwsResult) {\n\n\t\t\t\t\t\t\tthat._.each(that.getSectionsMetadata(), function (section) {\n\t\t\t\t\t\t\t\tvar sectionObj = {};\n\t\t\t\t\t\t\t\tsectionObj.id = section.link;\n\t\t\t\t\t\t\t\tsectionObj.displayName = section.definition.name;\n\t\t\t\t\t\t\t\tsectionObj.description = section.definition.description;\n\t\t\t\t\t\t\t\tsectionObj.collapsable = section.definition.collapsable;\n\t\t\t\t\t\t\t\tsectionObj.type = section.definition.type;\n\t\t\t\t\t\t\t\tsectionObj.sectionLocked = section.definition.sectionLocked;\n\t\t\t\t\t\t\t\tsectionObj.fields = []; // Initializes the array\n\n\t\t\t\t\t\t\t\tthat._.each(section.definition.fields, function (field) {\n\t\t\t\t\t\t\t\t\t// Adds the field to the section, if it's not null\n\t\t\t\t\t\t\t\t\t// (will be null in cases where it shouldn't be visible)\n\t\t\t\t\t\t\t\t\tif (field.fieldType === 'FIELD') {\n\t\t\t\t\t\t\t\t\t\tif (!filter || (filter && filter(field))) {\n\t\t\t\t\t\t\t\t\t\t\tsectionObj.fields.push(field);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else if (field.fieldType === 'MATRIX') {\n\t\t\t\t\t\t\t\t\t\t// If filter is there, just add all matrix fields\n\t\t\t\t\t\t\t\t\t\tif (filter) {\n\t\t\t\t\t\t\t\t\t\t\tthat._.times(field.height, function (rowIndex) {\n\t\t\t\t\t\t\t\t\t\t\t\tthat._.times(field.width, function (colIndex) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (field.definition.fields[rowIndex][colIndex] && filter(field.definition.fields[rowIndex][colIndex])) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsectionObj.fields.push(field.definition.fields[rowIndex][colIndex]);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tsectionObj.fields.push(field);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tif (sectionObj.type === that.SECTION_TYPES.CLASSIFICATION) {\n\t\t\t\t\t\t\t\t\tlet cwsResolved = cwsResult.shift();\n\t\t\t\t\t\t\t\t\tif (cwsResolved.classificationId) {\n\t\t\t\t\t\t\t\t\t\tsectionObj.fields = cwsResolved.properties;\n\t\t\t\t\t\t\t\t\t\tsectionObj.initialClassificationId = cwsResolved.classificationId;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Adds the section with the fields to the array\n\t\t\t\t\t\t\t\t// that's going to be returned\n\t\t\t\t\t\t\t\titemDetailsFieldValuesArr.push(sectionObj);\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tdeferredObj.resolve(itemDetailsFieldValuesArr);\n\t\t\t\t\t\t}, function () {\n\t\t\t\t\t\t\tdeferredObj.reject();\n\t\t\t\t\t\t});\n\t\t\t\t\t}, function () {\n\t\t\t\t\t\tdeferredObj.reject();\n\t\t\t\t\t});\n\t\t\t\t}, function () {\n\t\t\t\t\tdeferredObj.reject();\n\t\t\t\t});\n\t\t\t}, function () {\n\t\t\t\tdeferredObj.reject();\n\t\t\t});\n\t\t}, function () {\n\t\t\tdeferredObj.reject();\n\t\t});\n\n\t\treturn deferredObj.promise;\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Workspace#getWorkspaceUrn\n\t * @methodOf Models.Workspace\n\t * @description Returns the urn of the current workspace\n\t *\n\t * @returns {String} The string representation of the urn\n\t */\n\tgetWorkspaceUrn: function () {\n\t\treturn this.json.urn;\n\t}\n};\n\nangular.module('plm360.models').factory('Workspace', [\n\t'RESTWrapperService',\n\t'EventService',\n\t'FieldTypes',\n\t'$q',\n\t'_',\n\t'SECTION_TYPES',\n\t'ClassificationUtil',\n\t'ClassificationService',\n\t'WORKSPACE_HTTP_META_VALUES',\n\tfunction (RESTWrapperService, EventService, FieldTypes, $q, _, SECTION_TYPES, ClassificationUtil, ClassificationService, WORKSPACE_HTTP_META_VALUES) {\n\t\tvar models = {};\n\t\tWorkspace.prototype.RESTWrapperService = RESTWrapperService;\n\t\tWorkspace.prototype.FieldTypes = FieldTypes;\n\t\tWorkspace.prototype.$q = $q;\n\t\tWorkspace.prototype._ = _;\n\t\tWorkspace.prototype.SECTION_TYPES = SECTION_TYPES;\n\t\tWorkspace.prototype.ClassificationUtil = ClassificationUtil;\n\t\tWorkspace.prototype.ClassificationService = ClassificationService;\n\t\tWorkspace.prototype.WORKSPACE_HTTP_META_VALUES = WORKSPACE_HTTP_META_VALUES;\n\n\t\tEventService.listen('workspaceInstance:*:get', function (event, params, workspaceId, workspacesObj) {\n\t\t\tvar model = models[params] || new Workspace();\n\t\t\tmodels[params] = model;\n\t\t\tmodel.fetch(params, workspaceId, workspacesObj).then(function (obj) {\n\t\t\t\tEventService.send('workspaceInstance:' + event.split(':')[1] + ':done', obj);\n\t\t\t});\n\t\t});\n\t\treturn Workspace;\n\t}\n])\n// Constants for Workspace Types\n.constant('WorkspaceTypes', {\n\tBASIC_WORKSPACE: 1,\n\tBASIC_WORKSPACE_WITH_WORKFLOW: 2,\n\tSUPPLIER: 3,\n\tREVISION_CONTROLLED_WORKSPACE: 6,\n\tREVISIONING_WORKSPACE: 7,\n\tSUPPLIER_WITH_WORKFLOW: 8\n})\n.constant('SECTION_TYPES', {FIELD_CONTAINER: 'FIELDCONTAINER', CLASSIFICATION: 'CLASSIFICATION'})\n.constant('WORKSPACE_HTTP_META_VALUES', {\n\tBULK_SECTION: 'application/vnd.autodesk.plm.sections.bulk+json'\n});"]}