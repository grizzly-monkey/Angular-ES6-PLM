{"version":3,"sources":["../../../scripts/models/LinkedItemTransitions.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;;AAab,IAAI,qBAAqB,GAAG,SAAxB,qBAAqB,GAAe,EACvC,CAAC;;AAEF,qBAAqB,CAAC,SAAS,GAAG;;;;;;;;;;;AAWjC,MAAK,EAAE,eAAU,IAAI,EAAE;AACtB,MAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,SAAO,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC,IAAI,CAAC,UAAU,OAAO,EAAE;AAC/F,OAAI,CAAC,IAAI,GAAG,OAAO,CAAC;AACpB,UAAO,IAAI,CAAC;GACZ,CAAC,CAAC;EACH;;;;;;;;;;AAUD,YAAW,EAAE,uBAAY;AACxB,SAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC/B;;;;;;;;;;;AAWD,2BAA0B,EAAE,oCAAU,EAAE,EAAE,MAAM,EAAE;AACjD,SAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,UAAU,EAAE;AAChD,OAAI,UAAU,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE,EAAE;AACjC,cAAU,CAAC,GAAG,GAAG,MAAM,CAAC;IACxB;GACD,CAAC,CAAC;EACH;CACD,CAAC;;AAEF,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,uBAAuB,EAAE,CAChE,oBAAoB,EACpB,cAAc,EACd,UAAU,kBAAkB,EAAE,YAAY,EAAE;AAC3C,KAAI,MAAM,GAAG,EAAE,CAAC;AAChB,sBAAqB,CAAC,SAAS,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;AACxE,aAAY,CAAC,MAAM,CAAC,+BAA+B,EAAE,UAAU,KAAK,EAAE,MAAM,EAAE;AAC7E,MAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,qBAAqB,EAAE,CAAC;AAC1D,QAAM,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;AACvB,OAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE;AACvC,eAAY,CAAC,IAAI,CAAC,0BAA0B,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,EAAE,GAAG,CAAC,CAAC;GACnF,CAAC,CAAC;EACH,CAAC,CAAC;AACH,QAAO,qBAAqB,CAAC;CAC7B,CACD,CAAC,CAAC","file":"LinkedItemTransitions.js","sourcesContent":["'use strict';\n\n/**\n * @ngdoc object\n * @name Models.LinkedItemTransitions\n *\n * @description This class wraps a list of LinkedItemTransitions payload into an object\n *\n * ##Dependencies\n *\n */\n\n// Define the constructor\nvar LinkedItemTransitions = function () {\n};\n\nLinkedItemTransitions.prototype = {\n\t/**\n\t * @ngdoc method\n\t * @name Models.LinkedItemTransitions#fetch\n\t * @methodOf Models.LinkedItemTransitions\n\t * @description Make a call to fetch raw data\n\t *\n\t * @param {String} link The URL to use for fetching the data\n\t *\n\t * @returns {Object} An object representation of the formatted data\n\t */\n\tfetch: function (link) {\n\t\tvar that = this;\n\n\t\treturn this.RESTWrapperService.get(link, null, null, {skipCache: true}).then(function (payload) {\n\t\t\tthat.json = payload;\n\t\t\treturn that;\n\t\t});\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.LinkedItemTransitions#getFullList\n\t * @methodOf Models.LinkedItemTransitions\n\t * @description Returns the full list of data\n\t *\n\t * @returns {Array} The full list of data\n\t */\n\tgetFullList: function () {\n\t\treturn angular.copy(this.json);\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.LinkedItemTransitions#setLinkedItemTransitionObj\n\t * @methodOf Models.LinkedItemTransitions\n\t * @description Sets the object\n\t *\n\t * @param {String} id The title of the item used as an id\n\t * @param {Object} object The linked item transition object\n\t */\n\tsetLinkedItemTransitionObj: function (id, object) {\n\t\tangular.forEach(this.json, function (linkedItem) {\n\t\t\tif (linkedItem.item.title === id) {\n\t\t\t\tlinkedItem.obj = object;\n\t\t\t}\n\t\t});\n\t}\n};\n\nangular.module('plm360.models').factory('LinkedItemTransitions', [\n\t'RESTWrapperService',\n\t'EventService',\n\tfunction (RESTWrapperService, EventService) {\n\t\tvar models = {};\n\t\tLinkedItemTransitions.prototype.RESTWrapperService = RESTWrapperService;\n\t\tEventService.listen('affectedItemTransitions:*:get', function (event, params) {\n\t\t\tvar model = models[params] || new LinkedItemTransitions();\n\t\t\tmodels[params] = model;\n\t\t\tmodel.fetch(params).then(function (obj) {\n\t\t\t\tEventService.send('affectedItemTransitions:' + event.split(':')[1] + ':done', obj);\n\t\t\t});\n\t\t});\n\t\treturn LinkedItemTransitions;\n\t}\n]);\n"]}