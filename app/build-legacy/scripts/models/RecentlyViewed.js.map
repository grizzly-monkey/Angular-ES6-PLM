{"version":3,"sources":["../../../scripts/models/RecentlyViewed.js"],"names":[],"mappings":"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","file":"RecentlyViewed.js","sourcesContent":["'use strict';\n\n/**\n * @ngdoc object\n * @name Models.RecentlyViewed\n *\n * @description This class wraps an outstanding work payload into an object\n *\n * ##Dependencies\n *\n */\n\n// Define the constructor\nvar RecentlyViewed = function (json) {\n\tthis.json = json;\n};\n\nRecentlyViewed.prototype = {\n\t/**\n\t * @ngdoc method\n\t * @name Models.RecentlyViewed#fetch\n\t * @methodOf Models.RecentlyViewed\n\t * @description Make a call to fetch raw data\n\t *\n\t * @param {String} link The URL to use for fetching the data\n\t *\n\t * @returns {Object} An object representation of the formatted data\n\t */\n\tfetch: function (link) {\n\t\tvar that = this;\n\t\treturn this.RESTWrapperService.get(link, null, null, {}).then(function (payload) {\n\t\t\tthat.json = payload.recentlyViewedItems;\n\t\t\tangular.forEach(that.json, function (item) {\n\t\t\t\titem.workspace.id = item.workspace.link.substring(item.workspace.link.lastIndexOf('/') + 1);\n\t\t\t\t// for backwards compatibility, we call \"title\" label, so we copy value\n\t\t\t\titem.workspace.label = item.workspace.title;\n\t\t\t});\n\t\t\treturn that;\n\t\t});\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.RecentlyViewed#getDisplayableData\n\t * @methodOf Models.RecentlyViewed\n\t * @description Returns formatted data of the recently viewed items to be displayed in a tabular widget\n\t *\n\t * @returns {Object} An object representation of the formatted data\n\t */\n\tgetDisplayableData: function () {\n\t\tvar ret = {};\n\t\tvar that = this;\n\n\t\tif ((angular.isDefined(this.json)) && (this.json !== null)) {\n\t\t\tret = angular.copy(this.json);\n\n\t\t\tvar toBeSpliced = [];\n\t\t\tangular.forEach(ret, function (value, datalistkey) {\n\t\t\t\tif (!value.item) {\n\t\t\t\t\ttoBeSpliced.push(datalistkey);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tret[datalistkey].itemdescription = {\n\t\t\t\t\tval: value.item.title,\n\t\t\t\t\thref: that.$state.href('details', {\n\t\t\t\t\t\tworkspaceId: value.workspace.id,\n\t\t\t\t\t\ttab: 'details',\n\t\t\t\t\t\tview: 'full',\n\t\t\t\t\t\tmode: 'view',\n\t\t\t\t\t\titemId: that.UrnParser.encode(value.item.urn)\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tret[datalistkey].workspace = {\n\t\t\t\t\tval: value.workspace.label,\n\t\t\t\t\thref: that.$state.href('workspace-items-list', {workspaceId: value.workspace.id})\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tvar decrementCounter = 0;\n\t\t\tangular.forEach(toBeSpliced, function (value) {\n\t\t\t\tret.splice(value - decrementCounter, 1);\n\t\t\t\tdecrementCounter++;\n\t\t\t});\n\t\t}\n\n\t\treturn {data: ret};\n\t}\n};\n\nangular.module('plm360.models').factory('RecentlyViewed', [\n\t'RESTWrapperService',\n\t'$state',\n\t'$q',\n\t'UrnParser',\n\t'EventService',\n\tfunction (RESTWrapperService, $state, $q, UrnParser, EventService) {\n\t\tvar models = {};\n\t\tRecentlyViewed.prototype.RESTWrapperService = RESTWrapperService;\n\t\tRecentlyViewed.prototype.$state = $state;\n\t\tRecentlyViewed.prototype.$q = $q;\n\t\tRecentlyViewed.prototype.UrnParser = UrnParser;\n\t\tEventService.listen('recentlyViewed:*:get', function (event, params) {\n\t\t\tvar model = models[params] || new RecentlyViewed();\n\t\t\tmodels[params] = model;\n\t\t\tmodel.fetch(params).then(function (obj) {\n\t\t\t\tEventService.send('recentlyViewed:' + event.split(':')[1] + ':done', obj);\n\t\t\t});\n\t\t});\n\t\treturn RecentlyViewed;\n\t}\n]);\n"]}