{"version":3,"sources":["../../../scripts/models/ProjectItems.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;AAWb,IAAI,YAAY,GAAG,SAAf,YAAY,GAAe,EAC9B,CAAC;;AAEF,YAAY,CAAC,SAAS,GAAG;;;;;;;;;;;;;AAaxB,MAAK,EAAE,eAAU,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE;AACvC,MAAI,IAAI,GAAG,IAAI,CAAC;AAChB,SAAO,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,OAAO,EAAE;AAC3F,OAAI,CAAC,IAAI,GAAG,OAAO,CAAC;AACpB,UAAO,IAAI,CAAC;GACZ,CAAC,CAAC;EACH;;;;;;;;;;AAUD,YAAW,EAAE,uBAAY;AACxB,SAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC/B;CACD,CAAC;;AAEF,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,CACvD,oBAAoB,EACpB,cAAc,EACd,UAAU,kBAAkB,EAAE,YAAY,EAAE;AAC3C,KAAI,MAAM,GAAG,EAAE,CAAC;AAChB,aAAY,CAAC,SAAS,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;AAC/D,aAAY,CAAC,MAAM,CAAC,oBAAoB,EAAE,UAAU,KAAK,EAAE,MAAM,EAAE,aAAa,EAAE;AACjF,MAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,YAAY,EAAE,CAAC;AACjD,QAAM,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;AACvB,OAAK,CAAC,KAAK,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE;AACtD,eAAY,CAAC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,EAAE,GAAG,CAAC,CAAC;GACxE,CAAC,CAAC;EACH,CAAC,CAAC;AACH,aAAY,CAAC,MAAM,CAAC,6BAA6B,EAAE,UAAU,KAAK,EAAE,MAAM,EAAE,aAAa,EAAE;AAC1F,MAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,YAAY,EAAE,CAAC;AACjD,MAAI,OAAO,GAAG;AACb,SAAM,EAAE,2CAA2C;GACnD,CAAC;;AAEF,QAAM,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;;AAEvB,OAAK,CAAC,KAAK,CAAC,MAAM,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE;AAC/D,eAAY,CAAC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,EAAE,GAAG,CAAC,CAAC;GACxE,CAAC,CAAC;EACH,CAAC,CAAC;AACH,QAAO,YAAY,CAAC;CACpB,CACD,CAAC,CAAC","file":"ProjectItems.js","sourcesContent":["'use strict';\n\n/**\n * @ngdoc object\n * @name Models.ProjectItems\n *\n * @description This class wraps the items for the Project Management tab\n *\n * ##Dependencies\n *\n */\nvar ProjectItems = function () {\n};\n\nProjectItems.prototype = {\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.ProjectItems#fetch\n\t * @methodOf Models.ProjectItems\n\t * @description Make a call to fetch raw data\n\t *\n\t * @param {String} link The URL to use for fetching the data\n\t * @param {Object} params The parameters used for fetching (ex. page, page size, etc.)\n\t *\n\t * @returns {Object} An object representation of the formatted data\n\t */\n\tfetch: function (link, params, headers) {\n\t\tvar that = this;\n\t\treturn this.RESTWrapperService.get(link, null, params, {}, headers).then(function (payload) {\n\t\t\tthat.json = payload;\n\t\t\treturn that;\n\t\t});\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.ProjectItems#getFullList\n\t * @methodOf Models.ProjectItems\n\t * @description Returns the full list of data\n\t *\n\t * @returns {Array} The full list of data\n\t */\n\tgetFullList: function () {\n\t\treturn angular.copy(this.json);\n\t}\n};\n\nangular.module('plm360.models').factory('ProjectItems', [\n\t'RESTWrapperService',\n\t'EventService',\n\tfunction (RESTWrapperService, EventService) {\n\t\tvar models = {};\n\t\tProjectItems.prototype.RESTWrapperService = RESTWrapperService;\n\t\tEventService.listen('projectItems:*:get', function (event, params, requestParams) {\n\t\t\tvar model = models[params] || new ProjectItems();\n\t\t\tmodels[params] = model;\n\t\t\tmodel.fetch(params, requestParams).then(function (obj) {\n\t\t\t\tEventService.send('projectItems:' + event.split(':')[1] + ':done', obj);\n\t\t\t});\n\t\t});\n\t\tEventService.listen('milestoneProjectItems:*:get', function (event, params, requestParams) {\n\t\t\tvar model = models[params] || new ProjectItems();\n\t\t\tvar headers = {\n\t\t\t\tAccept: 'application/vnd.autodesk.plm.project.item'\n\t\t\t};\n\n\t\t\tmodels[params] = model;\n\n\t\t\tmodel.fetch(params, requestParams, headers).then(function (obj) {\n\t\t\t\tEventService.send('projectItems:' + event.split(':')[1] + ':done', obj);\n\t\t\t});\n\t\t});\n\t\treturn ProjectItems;\n\t}\n]);\n"]}