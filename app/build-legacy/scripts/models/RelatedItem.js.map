{"version":3,"sources":["../../../scripts/models/RelatedItem.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;;AAab,IAAI,WAAW,GAAG,SAAd,WAAW,CAAa,IAAI,EAAE;AACjC,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;CACjB,CAAC;;AAEF,WAAW,CAAC,SAAS,GAAG;;;;;;;;;;;AAWvB,MAAK,EAAE,eAAU,IAAI,EAAE;AACtB,MAAI,IAAI,GAAG,IAAI,CAAC;AAChB,SAAO,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC,IAAI,CAAC,UAAU,OAAO,EAAE;AAC/F,OAAI,CAAC,IAAI,GAAG,OAAO,CAAC;AACpB,UAAO,IAAI,CAAC;GACZ,CAAC,CAAC;EACH;;;;;;;;;AASD,YAAW,EAAE,uBAAY;;AAExB,SAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;EACxC;;;;;;;;;;AAUD,mBAAkB,EAAE,4BAAU,QAAQ,EAAE;AACvC,MAAI,IAAI,GAAG,IAAI,CAAC;AAChB,MAAI,OAAO,GAAG,EAAE,CAAC;AACjB,SAAO,IAAI,CAAC,kBAAkB,UAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;EACrF;CACD,CAAC;;AAEF,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,aAAa,EAAE,CACtD,oBAAoB,EACpB,cAAc,EACd,UAAU,kBAAkB,EAAE,YAAY,EAAE;AAC3C,KAAI,MAAM,GAAG,EAAE,CAAC;AAChB,YAAW,CAAC,SAAS,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;;AAE9D,aAAY,CAAC,MAAM,CAAC,mBAAmB,EAAE,UAAU,KAAK,EAAE,MAAM,EAAE;AACjE,MAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,WAAW,EAAE,CAAC;AAChD,QAAM,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;AACvB,OAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE;AACvC,eAAY,CAAC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,EAAE,GAAG,CAAC,CAAC;GACvE,CAAC,CAAC;EACH,CAAC,CAAC;;AAEH,aAAY,CAAC,MAAM,CAAC,0BAA0B,EAAE,UAAU,KAAK,EAAE,QAAQ,EAAE;AAC1E,MAAI,KAAK,GAAG,IAAI,WAAW,EAAE,CAAC;AAC9B,OAAK,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE;AACtD,eAAY,CAAC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,aAAa,EAAE,IAAI,CAAC,CAAC;GAC9E,EAAE,YAAY;AACd,eAAY,CAAC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,aAAa,EAAE,KAAK,CAAC,CAAC;GAC/E,CAAC,CAAC;EACH,CAAC,CAAC;AACH,QAAO,WAAW,CAAC;CACnB,CACD,CAAC,CAAC","file":"RelatedItem.js","sourcesContent":["'use strict';\n\n/**\n * @ngdoc object\n * @name Models.RelatedItem\n *\n * @description This class wraps a list of RelatedItem payload into an object\n *\n * ##Dependencies\n *\n */\n\n// Define the constructor\nvar RelatedItem = function (json) {\n\tthis.json = json;\n};\n\nRelatedItem.prototype = {\n\t/**\n\t * @ngdoc method\n\t * @name Models.RelatedItem#fetch\n\t * @methodOf Models.RelatedItem\n\t * @description Make a call to fetch raw data\n\t *\n\t * @param {String} link The URL to use for fetching the data\n\t *\n\t * @returns {Object} An object representation of the formatted data\n\t */\n\tfetch: function (link) {\n\t\tvar that = this;\n\t\treturn this.RESTWrapperService.get(link, null, null, {skipCache: true}).then(function (payload) {\n\t\t\tthat.json = payload;\n\t\t\treturn that;\n\t\t});\n\t},\n\t/**\n\t * @ngdoc method\n\t * @name Models.RelatedItem#getSelfLink\n\t * @methodOf Models.RelatedItem\n\t * @description Returns the api link for this item\n\t *\n\t * @returns {Object} Link to object's api endpoint\n\t */\n\tgetSelfLink: function () {\n\t\t// TODO: Change 'uri' to '_self_' after rest V3 implementation\n\t\treturn this.json.uri.replace(/^\\//, '');\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.RelatedItem#deleteRelatedItems\n\t * @methodOf Models.RelatedItem\n\t * @description deletes the specific related item\n\t *\n\t * @returns {Promise} The delete request promise\n\t */\n\tdeleteRelatedItems: function (selfLink) {\n\t\tvar that = this;\n\t\tvar options = {};\n\t\treturn this.RESTWrapperService.delete(selfLink.substr(1), null, null, null, options);\n\t}\n};\n\nangular.module('plm360.models').factory('RelatedItem', [\n\t'RESTWrapperService',\n\t'EventService',\n\tfunction (RESTWrapperService, EventService) {\n\t\tvar models = {};\n\t\tRelatedItem.prototype.RESTWrapperService = RESTWrapperService;\n\t\t// get\n\t\tEventService.listen('relatedItem:*:get', function (event, params) {\n\t\t\tvar model = models[params] || new RelatedItem();\n\t\t\tmodels[params] = model;\n\t\t\tmodel.fetch(params).then(function (obj) {\n\t\t\t\tEventService.send('relatedItem:' + event.split(':')[1] + ':done', obj);\n\t\t\t});\n\t\t});\n\t\t// delete\n\t\tEventService.listen('relatedItem:*:deleteItem', function (event, selfLink) {\n\t\t\tvar model = new RelatedItem();\n\t\t\tmodel.deleteRelatedItems(selfLink).then(function (obj) {\n\t\t\t\tEventService.send('relatedItem:' + event.split(':')[1] + ':deleteDone', true);\n\t\t\t}, function () {\n\t\t\t\tEventService.send('relatedItem:' + event.split(':')[1] + ':deleteDone', false);\n\t\t\t});\n\t\t});\n\t\treturn RelatedItem;\n\t}\n]);\n"]}