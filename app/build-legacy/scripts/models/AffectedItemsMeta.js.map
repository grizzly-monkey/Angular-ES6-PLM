{"version":3,"sources":["../../../scripts/models/AffectedItemsMeta.js"],"names":[],"mappings":"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","file":"AffectedItemsMeta.js","sourcesContent":["'use strict';\n\n/**\n * @ngdoc object\n * @name Models.AffectedItemsMeta\n *\n * @description This class wraps a list of AffectedItemsMeta payload into an object\n *\n * ##Dependencies\n *\n */\n\n// Define the constructor\nvar AffectedItemsMeta = function () {};\n\nAffectedItemsMeta.prototype = {\n\t/**\n\t * @ngdoc method\n\t * @name Models.AffectedItemsMeta#fetch\n\t * @methodOf Models.AffectedItemsMeta\n\t * @description Make a call to fetch raw data\n\t *\n\t * @param {String} link The URL to use for fetching the data\n\t *\n\t * @returns {Object} A promise for affected items fields\n\t */\n\tfetch: function (link) {\n\t\tvar that = this;\n\n\t\treturn this.RESTWrapperService.get(link, null, null, null, {\n\t\t\tACCEPT: 'application/vnd.autodesk.plm.meta+json'\n\t\t}).then(function (payload) {\n\t\t\tthat.json = payload;\n\n\t\t\tvar promises = [];\n\n\t\t\tif (angular.isDefined(that.json.fields)) {\n\t\t\t\tthat._.each(that.json.fields, function (field) {\n\t\t\t\t\tif (field.validators && !angular.isDefined(field.validatorsMeta)) {\n\t\t\t\t\t\tpromises.push(that.RESTWrapperService\n\t\t\t\t\t\t\t.get(field.validators.substring(1), null, null, {})\n\t\t\t\t\t\t\t.then(function (validatorsMeta) {\n\t\t\t\t\t\t\t\tfield.validatorsMeta = validatorsMeta;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn that.RESTWrapperService.allSettled(promises).then(function () {\n\t\t\t\treturn that;\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.AffectedItemsMeta#getFullList\n\t * @methodOf Models.AffectedItemsMeta\n\t * @description Returns the full list of data\n\t *\n\t * @returns {Array} The full list of data\n\t */\n\tgetFullList: function () {\n\t\treturn angular.copy(this.json.fields);\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.AffectedItemsMeta#getFieldId\n\t * @methodOf Models.AffectedItemsMeta\n\t * @description Returns the field id of the field (e.g. 'DISPOSITION')\n\t *\n\t * @param {Object} field The field whose ID is to be retrieved\n\t *\n\t * @returns {String} The ID of the field\n\t */\n\tgetFieldId: function (field) {\n\t\tvar matches = field.__self__.match(/fields\\/(.+)$/);\n\t\treturn matches && matches[1];\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.AffectedItemsMeta#getDataTypeId\n\t * @methodOf Models.AffectedItemsMeta\n\t * @description Returns the data type id of the field\n\t *\n\t * @param {Object} field The field whose ID is to be retrieved\n\t *\n\t * @returns {String} The ID of the data type\n\t */\n\tgetDataTypeId: function (field) {\n\t\tvar matches = field.type.link.match(/field-types\\/(.+)$/);\n\t\treturn matches && matches[1];\n\t}\n};\n\nangular.module('plm360.models').factory('AffectedItemsMeta', [\n\t'RESTWrapperService',\n\t'EventService',\n\t'$q',\n\t'_',\n\tfunction (RESTWrapperService, EventService, $q, _) {\n\t\tvar models = {};\n\t\tAffectedItemsMeta.prototype.RESTWrapperService = RESTWrapperService;\n\t\tAffectedItemsMeta.prototype.$q = $q;\n\t\tAffectedItemsMeta.prototype._ = _;\n\n\t\tEventService.listen('affectedItemsMeta:*:get', function (event, params) {\n\t\t\tvar model = models[params] || new AffectedItemsMeta();\n\t\t\tmodels[params] = model;\n\t\t\tmodel.fetch(params).then(function (obj) {\n\t\t\t\tEventService.send('affectedItemsMeta:' + event.split(':')[1] + ':done', obj);\n\t\t\t});\n\t\t});\n\n\t\treturn AffectedItemsMeta;\n\t}\n]);\n"]}