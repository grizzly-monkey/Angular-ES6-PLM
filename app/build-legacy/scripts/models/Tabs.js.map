{"version":3,"sources":["../../../scripts/models/Tabs.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;;AAab,IAAI,IAAI,GAAG,SAAP,IAAI,GAAe,EACtB,CAAC;;AAEF,IAAI,CAAC,SAAS,GAAG;;;;;;;;;;;AAWhB,MAAK,EAAE,eAAU,IAAI,EAAE;AACtB,MAAI,IAAI,GAAG,IAAI,CAAC;AAChB,SAAO,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,OAAO,EAAE;AAChF,OAAI,CAAC,IAAI,GAAG,OAAO,CAAC;AACpB,UAAO,IAAI,CAAC;GACZ,CAAC,CAAC;EACH;;;;;;;;;;AAUD,YAAW,EAAE,uBAAY;AACxB,SAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC/B;CACD,CAAC;;AAEF,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,CAC/C,oBAAoB,EACpB,cAAc,EACd,UAAU,kBAAkB,EAAE,YAAY,EAAE;AAC3C,KAAI,MAAM,GAAG,EAAE,CAAC;AAChB,KAAI,CAAC,SAAS,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;AACvD,aAAY,CAAC,MAAM,CAAC,gBAAgB,EAAE,UAAU,KAAK,EAAE,MAAM,EAAE;AAC9D,MAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC;AACzC,QAAM,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;AACvB,OAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE;AACvC,eAAY,CAAC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,EAAE,GAAG,CAAC,CAAC;GACpE,CAAC,CAAC;EACH,CAAC,CAAC;AACH,QAAO,IAAI,CAAC;CACZ,CACD,CAAC;;CAED,QAAQ,CAAC,oBAAoB,EAAE;AAC/B,aAAY,EAAE,aAAa;AAC3B,aAAY,EAAE,aAAa;AAC3B,mBAAkB,EAAE,mBAAmB;AACvC,cAAa,EAAE,eAAe;AAC9B,iBAAgB,EAAE,gBAAgB;AAClC,iBAAgB,EAAE,iBAAiB;AACnC,aAAY,EAAE,aAAa;AAC3B,oBAAmB,EAAE,uBAAuB;CAC5C,CAAC,CAAC","file":"Tabs.js","sourcesContent":["'use strict';\n\n/**\n * @ngdoc object\n * @name Models.Tabs\n *\n * @description This class wraps a list of Tabs payload into an object\n *\n * ##Dependencies\n *\n */\n\n// Define the constructor\nvar Tabs = function () {\n};\n\nTabs.prototype = {\n\t/**\n\t * @ngdoc method\n\t * @name Models.Tabs#fetch\n\t * @methodOf Models.Tabs\n\t * @description Make a call to fetch raw data\n\t *\n\t * @param {String} link The URL to use for fetching the data\n\t *\n\t * @returns {Object} An object representation of the formatted data\n\t */\n\tfetch: function (link) {\n\t\tvar that = this;\n\t\treturn this.RESTWrapperService.get(link, null, null, {}).then(function (payload) {\n\t\t\tthat.json = payload;\n\t\t\treturn that;\n\t\t});\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.Tabs#getFullList\n\t * @methodOf Models.Tabs\n\t * @description Returns the full list of data\n\t *\n\t * @returns {Array} The full list of data\n\t */\n\tgetFullList: function () {\n\t\treturn angular.copy(this.json);\n\t}\n};\n\nangular.module('plm360.models').factory('Tabs', [\n\t'RESTWrapperService',\n\t'EventService',\n\tfunction (RESTWrapperService, EventService) {\n\t\tvar models = {};\n\t\tTabs.prototype.RESTWrapperService = RESTWrapperService;\n\t\tEventService.listen('itemTabs:*:get', function (event, params) {\n\t\t\tvar model = models[params] || new Tabs();\n\t\t\tmodels[params] = model;\n\t\t\tmodel.fetch(params).then(function (obj) {\n\t\t\t\tEventService.send('itemTabs:' + event.split(':')[1] + ':done', obj);\n\t\t\t});\n\t\t});\n\t\treturn Tabs;\n\t}\n])\n// These constants maps to the actionName of the tabs payload.\n.constant('TabActionNameTypes', {\n\tITEM_DETAILS: 'itemDetails',\n\tLINKED_ITEMS: 'linkedItems',\n\tPROJECT_MANAGEMENT: 'projectManagement',\n\tRELATIONSHIPS: 'relationships',\n\tPART_ATTACHMENTS: 'partAttachment',\n\tWORKFLOW_ACTIONS: 'workflowActions',\n\tPART_HISTORY: 'partHistory',\n\tNAMED_RELATIONSHIPS: 'namedRelationshipsTab'\n});\n"]}