{"version":3,"sources":["../../../scripts/models/RelatedBomItems.js"],"names":[],"mappings":"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","file":"RelatedBomItems.js","sourcesContent":["'use strict';\n\n/**\n * @ngdoc object\n * @name Models.RelatedBomItems\n *\n * @description This class wraps a list of RelatedBomItems payload into an object\n *\n * ##Dependencies\n *\n */\n\nvar RelatedBomItems = function () {\n\tvar that = this;\n};\n\nRelatedBomItems.prototype = {\n\t/**\n\t * @ngdoc method\n\t * @name Models.RelatedBomItems#fetch\n\t * @methodOf Models.RelatedBomItems\n\t * @description Make a call to fetch raw data\n\t *\n\t * @param {String} link The URL to use for fetching the data\n\t *\n\t * @returns {Object} An object representation of the formatted data\n\t */\n\tfetch: function (link) {\n\t\tvar that = this;\n\t\treturn that.RESTWrapperService.get(link, null, null, {skipCache: true}).then(function (bomItemsPayload) { // Need to pass Option 'Skip cache' as the data may frquently change\n\t\t\tthat.json = bomItemsPayload[0].items;\n\t\t\tvar promises = _.map(that.json, function (bomitem, index) {\n\t\t\t\tvar workspaceId = bomitem.item.link.split('/workspaces/')[1].split('/items/')[0];\n\t\t\t\treturn this.PermissionService.hasPermissions([this.PLMPermissions.VIEW_ITEMS], workspaceId).then(function (hasPermission) {\n\t\t\t\t\tif (hasPermission) {\n\t\t\t\t\t\treturn that.RESTWrapperService.get(bomitem.item.link.substring(1), null, null, {skipCache: true}).then(function (itemDetailsPayload) {\n\t\t\t\t\t\t\tthat.itemDetail = itemDetailsPayload;\n\t\t\t\t\t\t\treturn new RelatedBomItem(itemDetailsPayload);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, that);\n\t\t\treturn that.$q.all(promises).then(function (results) {\n\t\t\t\treturn _.filter(results);\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.RelatedBomItems#getAllChildren\n\t * @methodOf Models.RelatedBomItems\n\t * @description Make a call to get all bom-items recursively untill the items becomes empty\n\t *\n\t * @param {String} link The URL to use for fetching the data\n\t * @param {Array} bomItems The array to store the link of all children\n\t *\n\t * @returns {Object} An object representation of the formatted data\n\t */\n\tgetAllChildren: function (link, bomItems, isRootBOM) {\n\t\tvar that = this;\n\t\tvar workspaceId = link.split('/workspaces/')[1].split('/items/')[0];\n\t\treturn this.PermissionService.hasPermissions([this.PLMPermissions.VIEW_ITEMS, this.PLMPermissions.VIEW_BOM], workspaceId).then(function (hasPermission) {\n\t\t\tif (hasPermission) {\n\t\t\t\treturn that.RESTWrapperService.get(link, null, null, {}).then(function (bomItemsPayload) {\n\t\t\t\t\tif (!isRootBOM) {\n\t\t\t\t\t\tbomItems.push(bomItemsPayload[0].__self__);\n\t\t\t\t\t}\n\t\t\t\t\tvar items = bomItemsPayload[0].items;\n\t\t\t\t\tif (!items.length) {\n\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t}\n\t\t\t\t\treturn Promise.all(_.map(items, function (bomitem, index) {\n\t\t\t\t\t\treturn that.getAllChildren(bomitem.item.link.substring(1) + '/bom-items?limit=999&revisionBias=working', bomItems, false);\n\t\t\t\t\t}));\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.RelatedBomItems#getItemDetails\n\t * @methodOf Models.RelatedBomItems\n\t * @description Make a call to get item details\n\t *\n\t * @param {Array} The Array of url\n\t *\n\t * @returns {Object} An object representation of the formatted data\n\t */\n\tgetItemDetails: function (itemLinkArr) {\n\t\tvar that = this;\n\t\tvar promises = _.map(itemLinkArr, function (itemLink, index) {\n\t\t\tvar workspaceId = itemLink.split('/workspaces/')[1].split('/items/')[0];\n\t\t\treturn this.PermissionService.hasPermissions([this.PLMPermissions.VIEW_ITEMS], workspaceId).then(function (hasPermission) {\n\t\t\t\tif (hasPermission) {\n\t\t\t\t\treturn that.RESTWrapperService.get(itemLink.split('/bom-items?')[0].substring(1), null, null, {skipCache: true}).then(function (itemDetailsPayload) {\n\t\t\t\t\t\tthat.itemDetail = itemDetailsPayload;\n\t\t\t\t\t\treturn new RelatedBomItem(itemDetailsPayload);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t});\n\t\t}, that);\n\t\treturn that.$q.all(promises).then(function (results) {\n\t\t\treturn _.filter(results);\n\t\t});\n\t},\n\n\t/**\n\t * @ngdoc method\n\t * @name Models.RelatedBomItems#getFullList\n\t * @methodOf Models.RelatedBomItems\n\t * @description Returns the full list of data\n\t *\n\t * @returns {Array} The full list of data\n\t */\n\tgetFullList: function () {\n\t\treturn angular.copy(this.json);\n\t}\n};\n\nangular.module('plm360.models').factory('RelatedBomItems', [\n\t'RESTWrapperService',\n\t'EventService',\n\t'PermissionService',\n\t'PLMPermissions',\n\t'$q',\n\tfunction (RESTWrapperService, EventService, PermissionService, PLMPermissions, $q) {\n\t\tvar models = {};\n\t\tRelatedBomItems.prototype.RESTWrapperService = RESTWrapperService;\n\t\tRelatedBomItems.prototype.PermissionService = PermissionService;\n\t\tRelatedBomItems.prototype.PLMPermissions = PLMPermissions;\n\t\tRelatedBomItems.prototype.$q = $q;\n\n\t\tEventService.listen('relatedBomItemsAllChildren:*:get', function (event, params) {\n\t\t\tvar model = models[params] || new RelatedBomItems();\n\t\t\tvar bomItems = [];\n\t\t\tmodels[params] = model;\n\t\t\tmodel.getAllChildren(params, bomItems, true).then(function () {\n\t\t\t\tmodel.getItemDetails(bomItems).then(function (obj) {\n\t\t\t\t\tEventService.send('relatedBomItems:' + event.split(':')[1] + ':done', obj);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tEventService.listen('relatedBomItems:*:get', function (event, params) {\n\t\t\tvar model = models[params] || new RelatedBomItems();\n\t\t\tvar bomItems = [];\n\t\t\tmodels[params] = model;\n\t\t\tmodel.fetch(params).then(function (obj) {\n\t\t\t\tEventService.send('relatedBomItems:' + event.split(':')[1] + ':done', obj);\n\t\t\t});\n\t\t});\n\t\treturn RelatedBomItems;\n\t}\n]);\n"]}