{"version":3,"sources":["../../../scripts/services/CommentsService.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;AAYb,IAAI,eAAe,GAAG,MAAM,CAAC,OAAO,CAAC,iBAAiB,EAAE,CACvD,OAAO,EACP,IAAI,EACJ,sBAAsB,EACtB,GAAG,EACH,UAAU,KAAK,EAAE,EAAE,EAAE,eAAe,EAAE,CAAC,EAAE;;;;;;;;AAQxC,KAAI,qBAAqB,GAAG,+DAA+D,CAAC;;;;;;AAM5F,QAAO;;;;;;;;;;;;;AAaN,KAAG,EAAE,aAAU,GAAG,EAAE;AACnB,OAAI,QAAQ,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;AAC1B,kBAAe,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,KAAK,EAAE;AAC3C,SAAK,CAAC;AACL,WAAM,EAAE,KAAK;AACb,QAAG,EAAE,qBAAqB,GAAG,GAAG;AAChC,YAAO,EAAE;AACR,oBAAc,EAAE,kBAAkB;AAClC,mBAAa,EAAE,SAAS,GAAG,KAAK;MAChC;KACD,CAAC,CAAC,IAAI,CAAC,UAAU,QAAQ,EAAE;AAC3B,aAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;KAC3B,CAAC,CAAC;IACH,CAAC,CAAC;AACH,UAAO,QAAQ,CAAC,OAAO,CAAC;GACxB;;;;;;;;;;;;;;;AAeD,WAAS,EAAE,mBAAU,OAAO,EAAE,IAAI,EAAE;AACnC,OAAI,QAAQ,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;AAC1B,kBAAe,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,KAAK,EAAE;AAC3C,SAAK,CAAC;AACL,WAAM,EAAE,MAAM;AACd,QAAG,EAAE,qBAAqB,GAAG,OAAO,CAAC,SAAS;AAC9C,SAAI,EAAE;AACL,UAAI,EAAE,OAAO,CAAC,SAAS;AACvB,UAAI,EAAE,IAAI;MACV;AACD,YAAO,EAAE;AACR,oBAAc,EAAE,kBAAkB;AAClC,mBAAa,EAAE,SAAS,GAAG,KAAK;MAChC;KACD,CAAC,CAAC,IAAI,CAAC,UAAU,OAAO,EAAE;AAC1B,aAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;KAC1B,CAAC,CAAC;IACH,CAAC,CAAC;AACH,UAAO,QAAQ,CAAC,OAAO,CAAC;GACxB;;;;;;;;;;;;;;;;AAgBD,aAAW,EAAE,qBAAU,GAAG,EAAE,WAAW,EAAE,IAAI,EAAE;AAC9C,OAAI,QAAQ,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;AAC1B,kBAAe,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,KAAK,EAAE;AAC3C,SAAK,CAAC;AACL,WAAM,EAAE,MAAM;AACd,QAAG,EAAE,qBAAqB,GAAG,GAAG;AAChC,SAAI,EAAE;AACL,UAAI,EAAE,WAAW;AACjB,UAAI,EAAE,IAAI;MACV;AACD,YAAO,EAAE;AACR,oBAAc,EAAE,kBAAkB;AAClC,mBAAa,EAAE,SAAS,GAAG,KAAK;MAChC;KACD,CAAC,CAAC,IAAI,CAAC,UAAU,OAAO,EAAE;AAC1B,aAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;KAC1B,CAAC,CAAC;IACH,CAAC,CAAC;AACH,UAAO,QAAQ,CAAC,OAAO,CAAC;GACxB;EACD,CAAC;CACF,CACD,CAAC,CAAC","file":"CommentsService.js","sourcesContent":["'use strict';\n\n/**\n * @ngdoc object\n * @name Services.CommentsService\n *\n * @description Handles communication with A360 Commenting Service\n *\n * ##Dependencies\n *\n */\n/* global plm360 */\nvar CommentsService = plm360.factory('CommentsService', [\n\t'$http',\n\t'$q',\n\t'PLM360.Token.service',\n\t'_',\n\tfunction ($http, $q, PLMTokenService, _) {\n\n\t\t/**\n\t\t * @ngdoc property\n\t\t * @name Services.CommentsService#commentingServiceBase\n\t\t * @propertyOf Services.CommentsService\n\t\t * @description `private` The base URL for the commenting service\n\t\t */\n\t\tvar commentingServiceBase = 'https://developer-stg.api.autodesk.com/comments/v2/resources/';\n\n\t\t/*\n\t\t * CommentsService object to expose the public methods\n\t\t *\n\t\t */\n\t\treturn {\n\n\t\t\t/*\n\t\t\t * @ngdoc method\n\t\t\t * @name Services.CommentsService#get\n\t\t\t * @methodOf Services.CommentsService\n\t\t\t * @description Retrieves from comments service given urn\n\t\t\t *\n\t\t\t * @param \t{String} \turn\t\t\tThe urn of the item\n\t\t\t *\n\t\t\t * @returns {Object} \t\t\t\t\t\tThe Promise of the ajax call\n\t\t\t *\n\t\t\t */\n\t\t\tget: function (urn) {\n\t\t\t\tvar deferred = $q.defer();\n\t\t\t\tPLMTokenService.get().then(function (token) {\n\t\t\t\t\t$http({\n\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\turl: commentingServiceBase + urn,\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t\tAuthorization: 'Bearer ' + token\n\t\t\t\t\t\t}\n\t\t\t\t\t}).then(function (comments) {\n\t\t\t\t\t\tdeferred.resolve(comments);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn deferred.promise;\n\t\t\t},\n\n\t\t\t/*\n\t\t\t * @ngdoc method\n\t\t\t * @name Services.CommentsService#postReply\n\t\t\t * @methodOf Services.CommentsService\n\t\t\t * @description Post replies to comment to comments service\n\t\t\t *\n\t\t\t * @param \t{Object} \tcomment\t\t\tThe comment object\n\t\t\t * @param\t{Array} \ttags\t\t\tThe tags to be added to the comment (ex. used for tagging revision in item), in the format of array\n\t\t\t *\t\t\t\t\t\t\t\t\t\t[{name:\"name\",value:\"value\"}]\n\t\t\t *\n\t\t\t * @returns {Object} \t\t\t\t\t\tThe Promise of the ajax call\n\t\t\t *\n\t\t\t */\n\t\t\tpostReply: function (comment, tags) {\n\t\t\t\tvar deferred = $q.defer();\n\t\t\t\tPLMTokenService.get().then(function (token) {\n\t\t\t\t\t$http({\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\turl: commentingServiceBase + comment.encodedId,\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tbody: comment.replyText,\n\t\t\t\t\t\t\ttags: tags\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t\tAuthorization: 'Bearer ' + token\n\t\t\t\t\t\t}\n\t\t\t\t\t}).then(function (postRet) {\n\t\t\t\t\t\tdeferred.resolve(postRet);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn deferred.promise;\n\t\t\t},\n\n\t\t\t/*\n\t\t\t * @ngdoc method\n\t\t\t * @name Services.CommentsService#postReply\n\t\t\t * @methodOf Services.CommentsService\n\t\t\t * @description Post replies to comment to comments service\n\t\t\t *\n\t\t\t * @param \t{String} \turn\t\t\tThe urn of the item\n\t\t\t * @param \t{String} \tcommentText\t\t\tThe comment string to be posted\n\t\t\t * @param\t{Array} \ttags\t\t\tThe tags to be added to the comment (ex. used for tagging revision in item), in the format of array\n\t\t\t *\t\t\t\t\t\t\t\t\t\t[{name:\"name\",value:\"value\"}]\n\t\t\t *\n\t\t\t * @returns {Object} \t\t\t\t\t\tThe Promise of the ajax call\n\t\t\t *\n\t\t\t */\n\t\t\tpostComment: function (urn, commentText, tags) {\n\t\t\t\tvar deferred = $q.defer();\n\t\t\t\tPLMTokenService.get().then(function (token) {\n\t\t\t\t\t$http({\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\turl: commentingServiceBase + urn,\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tbody: commentText,\n\t\t\t\t\t\t\ttags: tags\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t\tAuthorization: 'Bearer ' + token\n\t\t\t\t\t\t}\n\t\t\t\t\t}).then(function (postRet) {\n\t\t\t\t\t\tdeferred.resolve(postRet);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn deferred.promise;\n\t\t\t}\n\t\t};\n\t}\n]);\n"]}