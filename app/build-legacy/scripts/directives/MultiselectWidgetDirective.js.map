{"version":3,"sources":["../../../scripts/directives/MultiselectWidgetDirective.js"],"names":[],"mappings":"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","file":"MultiselectWidgetDirective.js","sourcesContent":["'use strict';\n\n/**\n * @ngdoc directive\n * @name Directives.multiselectWidget\n * @restrict E\n *\n * @description This directive is the multiselect widget\n * ####- categories: Array containing objects listing the categories (optional)\n * [{\n *\t\tdisplayName: 'some String',\n *\t\tid: 'some id as integer or String'\n *\t}, ...]\n *\n * ####- data: The data itself for the widget\n * [{\n * \tcategory: 'some id matching the category's id above',\n * \tdisplayName: 'some String',\n * \tid: 'some String or, preferably, id',\n * \tselected: 'true/false'\n * }, ...]\n *\n * ####- maxDisplayed: maximum quantity of options that should be displayed before cutting off and showing the warning (optional, default 10)\n * ####- type: String - accepts \"checkbox\" or \"radio\"\n * ####- wrapperDisplay: A boolean value that's going to be updated whenever the user clicks CANCEL or DONE (optional)\n *\n * ##Dependencies\n *\n * @example\n * <doc:example>\n *   <doc:source>\n * \t\t<multiselect-widget categories=\"Array\" data=\"Array\" max-displayed=\"Integer\" type=\"String\" wrapper-display=\"Boolean\" ><multiselect-widget />\n *   </doc:source>\n * </doc:example>\n */\n/* global plm360 */\nvar multiselectWidget = plm360.directive('multiselectWidget', [\n\t'$compile',\n\t'LocalizationService',\n\t'$rootScope',\n\tfunction ($compile, LocalizationService, $rootScope) {\n\t\treturn {\n\t\t\treplace: true,\n\t\t\trestrict: 'E',\n\t\t\tscope: {\n\t\t\t\tcategories: '=',\n\t\t\t\tdata: '=',\n\t\t\t\tmaxDisplayed: '@',\n\t\t\t\ttype: '@',\n\t\t\t\twrapperDisplay: '='\n\t\t\t},\n\t\t\ttemplateUrl: 'partials/multiselectWidget.html',\n\t\t\tlink: function (scope, element, attributes) {\n\t\t\t\t/**\n\t\t\t\t * @ngdoc property\n\t\t\t\t * @name Directives.multiselectWidget#scopedData\n\t\t\t\t * @propertyOf Directives.multiselectWidget\n\t\t\t\t * @description Stores the internal list of selected items (to bypass two-way data binding)\n\t\t\t\t */\n\t\t\t\tscope.scopedData = [];\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc property\n\t\t\t\t * @name Directives.multiselectWidget#typedVal\n\t\t\t\t * @propertyOf Directives.multiselectWidget\n\t\t\t\t * @description The initial typed value for the typeahead widget\n\t\t\t\t */\n\t\t\t\tscope.typedVal = '';\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc property\n\t\t\t\t * @name Directives.multiselectWidget#scopedDataFiltered\n\t\t\t\t * @propertyOf Directives.multiselectWidget\n\t\t\t\t * @description The filtered data from the scoped widget, based on the scopedData\n\t\t\t\t */\n\t\t\t\tscope.scopedDataFiltered = [];\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc property\n\t\t\t\t * @name Directives.multiselectWidget#displayWarning\n\t\t\t\t * @propertyOf Directives.multiselectWidget\n\t\t\t\t * @description Displays the warning at the footer (messages for no matches found/too many matches)\n\t\t\t\t */\n\t\t\t\tscope.displayWarning = true;\n\n\t\t\t\t// check in case maxDisplayed wasn't passed along\n\t\t\t\tif (angular.isUndefined(scope.maxDisplayed)) {\n\t\t\t\t\tscope.maxDisplayed = 10;\n\t\t\t\t}\n\n\t\t\t\t// localized messages initialization\n\t\t\t\tLocalizationService.init().then(function () {\n\t\t\t\t\tscope.clearSelectMessage = $rootScope.bundle.text.clearSelectedItems;\n\t\t\t\t\tscope.nomatchesMessage = $rootScope.bundle.text.noMatches;\n\t\t\t\t\tscope.moreResultsMessage = $rootScope.bundle.widget.moreResults;\n\t\t\t\t});\n\n\t\t\t\t// keeps the internal data in sync with changes made to the external binded data source\n\t\t\t\tscope.$watch('wrapperDisplay', function (newVal, oldVal) {\n\t\t\t\t\tscope.scopedData = [];\n\t\t\t\t\tscope.scopedDataFiltered = [];\n\t\t\t\t\tscope.typedVal = '';\n\n\t\t\t\t\t// scroll the div again to the top if it's constrained by CSS\n\t\t\t\t\telement[0].querySelector('#multiselect-content').scrollTop = 0;\n\n\t\t\t\t\t// re-builds scoped data\n\t\t\t\t\tscope.scopedData = _.map(scope.data, _.clone);\n\t\t\t\t\t_.each(scope.scopedData, function (value, key, list) {\n\t\t\t\t\t\tvalue.__selected = value.selected;\n\t\t\t\t\t});\n\n\t\t\t\t\t// too many results?\n\t\t\t\t\tif (scope.scopedData.length > parseInt(scope.maxDisplayed)) {\n\t\t\t\t\t\tdisplayTooManyResultsWarning(scope.scopedData.length);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc method\n\t\t\t\t * @name Directives.multiselectWidget#clearAllSelected\n\t\t\t\t * @methodOf Directives.multiselectWidget\n\t\t\t\t * @description Removes the selection status of all items\n\t\t\t\t *\n\t\t\t\t */\n\t\t\t\t// scope.clearAllSelected = function () {\n\t\t\t\t// \t_.each(scope.scopedData, function (value, key, list) {\n\t\t\t\t// \t\tvalue.__selected = false;\n\t\t\t\t// \t\tvalue.selected = false;\n\t\t\t\t// \t});\n\t\t\t\t// };\n\n\t\t\t\t// watched for filtering of data, displaying the proper messages\n\t\t\t\tscope.$watchCollection('scopedDataFiltered', function (newObj, oldObj) {\n\t\t\t\t\thandleFiltering(scope.scopedDataFiltered.length);\n\t\t\t\t});\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc method\n\t\t\t\t * @name Directives.multiselectWidget#handleFiltering\n\t\t\t\t * @methodOf Directives.multiselectWidget\n\t\t\t\t * @description Handle filtering of data, showing the necessary messages\n\t\t\t\t */\n\t\t\t\tvar handleFiltering = function (quantity) {\n\t\t\t\t\tif (quantity > parseInt(scope.maxDisplayed)) {\n\t\t\t\t\t\tdisplayTooManyResultsWarning(quantity);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscope.displayWarning = false; // hides by default\n\n\t\t\t\t\t\tif ((quantity === 0) && (scope.typedVal !== '')) {\n\t\t\t\t\t\t\tscope.displayWarning = true;\n\n\t\t\t\t\t\t\tangular.element(element[0].querySelector('#multiselect-warning')).text(scope.nomatchesMessage);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// else {\n\t\t\t\t\t// \tif (quantity > parseInt(scope.maxDisplayed)) {\n\t\t\t\t\t// \t\tscope.displayWarning = true;\n\t\t\t\t\t// \t\tangular.element(element[0].querySelector('#multiselect-warning')).text((quantity - scope.maxDisplayed) + ' ' + scope.moreResultsMessage);\n\t\t\t\t\t// \t} else {\n\t\t\t\t\t// \t\tscope.displayWarning = false;\n\t\t\t\t\t// \t}\n\t\t\t\t\t// }\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc method\n\t\t\t\t * @name Directives.multiselectWidget#displayTooManyResultsWarning\n\t\t\t\t * @methodOf Directives.multiselectWidget\n\t\t\t\t * @description Displays a warning about having too many results in the list\n\t\t\t\t */\n\t\t\t\tvar displayTooManyResultsWarning = function (quantity) {\n\t\t\t\t\tscope.displayWarning = true;\n\n\t\t\t\t\tangular.element(element[0].querySelector('#multiselect-warning')).text((quantity - scope.maxDisplayed) + ' ' + scope.moreResultsMessage);\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc method\n\t\t\t\t * @name Directives.multiselectWidget#cancelSelection\n\t\t\t\t * @methodOf Directives.multiselectWidget\n\t\t\t\t * @description Reverts the values of the selected items, and closes the widget\n\t\t\t\t */\n\t\t\t\tscope.cancelSelection = function () {\n\t\t\t\t\t// there's a wrapper for this directive, therefore control the flag\n\t\t\t\t\tif (angular.isDefined(scope.wrapperDisplay)) {\n\t\t\t\t\t\tscope.wrapperDisplay = false;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc method\n\t\t\t\t * @name Directives.multiselectWidget#submitSelection\n\t\t\t\t * @methodOf Directives.multiselectWidget\n\t\t\t\t * @description Submit the selection, syncing the scoped object with the binded object\n\t\t\t\t */\n\t\t\t\tscope.submitSelection = function () {\n\t\t\t\t\tscope.data = [];\n\n\t\t\t\t\tscope.data = _.map(scope.scopedData, _.clone);\n\t\t\t\t\t_.each(scope.data, function (value, key, list) {\n\t\t\t\t\t\tdelete value.__selected; // this attribute is not needed anymore\n\t\t\t\t\t});\n\n\t\t\t\t\t// there's a wrapper for this directive, therefore control the flag\n\t\t\t\t\tif (angular.isDefined(scope.wrapperDisplay)) {\n\t\t\t\t\t\tscope.wrapperDisplay = false;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}\n]);\n"]}