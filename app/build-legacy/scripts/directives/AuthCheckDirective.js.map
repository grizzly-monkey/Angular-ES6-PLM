{"version":3,"sources":["../../../scripts/directives/AuthCheckDirective.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;AAsBb,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE,CAC7B,YAAY,EACZ,uBAAuB,EACvB,cAAc,EACd,UAAU,UAAU,EAAE,qBAAqB,EAAE,YAAY,EAAE;AAC1D,QAAO;AACN,UAAQ,EAAE,GAAG;AACb,SAAO,EAAE,IAAI;AACb,OAAK,EAAE,IAAI;;AAEX,UAAQ,EAAE,aAAa;AACvB,MAAI,EAAE,cAAU,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE;;;AAG5C,aAAU,CAAC,GAAG,CAAC,qBAAqB,EAAE,UAAU,KAAK,EAAE,OAAO,EAAE;AAC/D,QAAI,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACpC,SAAI,MAAM,GAAG,OAAO,CAAC;;AAErB,SAAI,CAAC,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAA,IAAK,CAAC,qBAAqB,CAAC,QAAQ,EAAE,EAAE;AACzF,kBAAY,CAAC,KAAK,EAAE,CAAC;AACrB,2BAAqB,CAAC,cAAc,EAAE,CAAC;MACvC;KACD;IACD,CAAC,CAAC;GACH;EACD,CAAC;CACF,CACD,CAAC,CAAC","file":"AuthCheckDirective.js","sourcesContent":["'use strict';\n\n/**\n * @ngdoc directive\n * @name Directives.authCheck\n * @restrict E\n *\n * @description This directive is dump on the page for checking authentication status.\n * It registers a global listener for $stateChangeStart event, and fires for relogin if user is not authenticated\n *\n * ##Dependencies\n * - Requires {@link Services/Services.AuthenticationService}\n * - Requires {@link Services/Services.TokenService}\n *\n * @example\n * <doc:example>\n *\t<doc:source>\n *\t\t<authCheck></authCheck>\n *\t</doc:source>\n * </doc:example>\n */\n/* global plm360 */\nplm360.directive('authCheck', [\n\t'$rootScope',\n\t'AuthenticationService',\n\t'TokenService',\n\tfunction ($rootScope, AuthenticationService, TokenService) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\treplace: true,\n\t\t\tscope: true,\n\t\t\t// DO NOT DO THIS, THIS IS SPECIAL CASE\n\t\t\ttemplate: '<div></div>',\n\t\t\tlink: function (scope, element, attrs, ctrl) {\n\n\t\t\t\t// register the listener\n\t\t\t\t$rootScope.$on('$stateChangeSuccess', function (event, toState) {\n\t\t\t\t\tif (angular.isDefined(toState.name)) {\n\t\t\t\t\t\tvar params = toState;\n\t\t\t\t\t\t// if the state config has access parameter, and the parameter is not 'unrestricted', and user is not authenticated, we ask for relogin\n\t\t\t\t\t\tif ((!params.access || !params.access.unrestricted) && !AuthenticationService.isLogged()) {\n\t\t\t\t\t\t\tTokenService.unset();\n\t\t\t\t\t\t\tAuthenticationService.requestRelogin();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n]);\n"]}