{"version":3,"sources":["../../../components/fieldTypes/FieldViewDirective.js"],"names":[],"mappings":"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","file":"FieldViewDirective.js","sourcesContent":["/**\n * FIELDView WILL BE DEPRECATED.\n * If you are modifying it, please do so in the new FieldSelector component.\n */\n'use strict';\n\n/**\n * @ngdoc directive\n * @name Directives.fieldView\n * @restrict A\n *\n * @description This directive is used anytime you have to display a item's field in the application, in VIEW (i.e., non-editable) mode, printing the value and necessary elements\n * ####- useTruncation {Boolean} If the truncation should happen\n * ####- isEditable {Boolean} If the field is editable\n * ####- fieldData: {Object} contains the data, properly parsed by the WorkspaceItemDetailsService.getItemDetailsFields method\n *\n * ##Dependencies\n *\n * @example\n * <doc:example>\n *   <doc:source>\n * \t\t<field-view field-data=\"Object\" use-truncation=\"Boolean\" />\n *   </doc:source>\n * </doc:example>\n */\n\nangular.module('plm360.fieldTypes').directive('fieldView', [\n\t'$compile',\n\t'$rootScope',\n\t'$location', \n\t'$state',\n\t'ModelsManager',\n\t'EventService',\n\t'LocalizationService',\n\t'$stateParams',\n\t'$mdDialog',\n\t'_',\n\tfunction ($compile, $rootScope, $location, $state, ModelsManager, EventService, LocalizationService, $stateParams, $mdDialog, _) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\treplace: true,\n\t\t\tscope: {\n\t\t\t\tfieldData: '=',\n\t\t\t\tisEditable: '=',\n\t\t\t\tplaceholder: '@'\n\t\t\t},\n\t\t\ttemplateUrl: 'components/fieldTypes/fieldView.html',\n\t\t\tlink: function (scope, element, attrs) {\n\t\t\t\tif ((angular.isDefined(scope.fieldData)) && (scope.fieldData.value === null)) { // check if scope.fieldData is undefined\n\t\t\t\t\tscope.fieldData.value = scope.placeholder || '';\n\t\t\t\t}\n\n\t\t\t\t// Check the value of field and apply placeholder if necessary. This is important, if value changes after\n\t\t\t\t// this directive is linked.\n\t\t\t\tscope.$watch('fieldData.value', function (value) {\n\t\t\t\t\tif (value === null) {\n\t\t\t\t\t\tscope.fieldData.value = scope.placeholder || '';\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Initializes LocalizationService\n\t\t\t\tLocalizationService.init().then(function () {\n\t\t\t\t\tscope.bundle = $rootScope.bundle;\n\t\t\t\t});\n\n\t\t\t\t// if useTruncation wasn't supplied, set it as false\n\t\t\t\t// if (angular.isDefined(scope.useTruncation) && ((scope.useTruncation) || (scope.useTruncation === 'true'))) {\n\t\t\t\t// \tscope.useTruncation = true;\n\t\t\t\t// } else {\n\t\t\t\t// \tscope.useTruncation = false;\n\t\t\t\t// }\n\n\t\t\t\t// append UOM if it's one of the supported field types, and if there's a value present\n\t\t\t\tif (angular.isDefined(scope.fieldData) \n\t\t\t\t\t\t&& angular.isDefined(scope.fieldData.fieldMetadata)\n\t\t\t\t\t\t&& angular.isDefined(scope.fieldData.fieldMetadata.unitOfMeasure) \n\t\t\t\t\t\t&& (scope.fieldData.fieldMetadata.unitOfMeasure !== null) && (scope.fieldData.value !== '')\n\t\t\t\t\t\t&& angular.isDefined(scope.fieldData.metadata)) {\n\t\t\t\t\tswitch (scope.fieldData.metadata.dataTypeId) {\n\t\t\t\t\t\tcase 4: // single line text\n\t\t\t\t\t\tcase 8: // paragraph\n\t\t\t\t\t\tcase 17: // paragraph without line breaks\n\t\t\t\t\t\tcase 2: // float\n\t\t\t\t\t\tcase 30: // long\n\t\t\t\t\t\tcase 31: // money extended\n\t\t\t\t\t\tcase 19: // CSV\n\t\t\t\t\t\tcase 11: // auto number\n\t\t\t\t\t\t\tscope.fieldData.value = scope.fieldData.value + ' (' + scope.fieldData.fieldMetadata.unitOfMeasure + ')';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc property\n\t\t\t\t * @name Directives.fieldView#hrefValue\n\t\t\t\t * @propertyOf Directives.fieldView\n\t\t\t\t * @description The value for the href attribute in the link when field is an URL\n\t\t\t\t *\n\t\t\t\t */\n\t\t\t\tscope.hrefValue = null;\n\n\t\t\t\t// if URL, use a RegExp to check if the user filled http or https in the value\n\t\t\t\tvar httpRegExp = new RegExp(/^(http|https):\\/\\//gm);\n\n\t\t\t\tif (angular.isDefined(scope.fieldData) &&\n\t\t\t\t\tangular.isDefined(scope.fieldData.metadata) &&\n\t\t\t\t\t(scope.fieldData.metadata.dataTypeId === 16)) {\n\t\t\t\t\tif (scope.fieldData.value.match(httpRegExp) === null) {\n\t\t\t\t\t\tscope.hrefValue = 'http://' + scope.fieldData.value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscope.hrefValue = scope.fieldData.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc method\n\t\t\t\t * @name Directives.fieldView#isArray\n\t\t\t\t * @methodOf Directives.fieldView\n\t\t\t\t * @description Checks if a certain value is an array\n\t\t\t\t *\n\t\t\t\t * @param {Array/String} value \tThe value to check for\n\t\t\t\t *\n\t\t\t\t */\n\t\t\t\tscope.isArray = function (value) {\n\t\t\t\t\treturn angular.isArray(value);\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc property\n\t\t\t\t * @name Directives.fieldView#dateFormat\n\t\t\t\t * @propertyOf Directives.fieldView\n\t\t\t\t * @description The current user's selected date format\n\t\t\t\t *\n\t\t\t\t */\n\t\t\t\tscope.dateFormat = null;\n\n\t\t\t\t// Retrieves the date format for the current logged in user (only when this field is a date)\n\t\t\t\tif (angular.isDefined(scope.fieldData) &&\n\t\t\t\t\tangular.isDefined(scope.fieldData.metadata) &&\n\t\t\t\t\t(scope.fieldData.metadata.dataTypeId === 3)) {\n\t\t\t\t\tvar currentUserListenerId = EventService.listen('currentUser:currentUser:done', function (event, userObj) {\n\t\t\t\t\t\tEventService.unlisten(currentUserListenerId);\n\t\t\t\t\t\tscope.dateFormat = userObj.getDateFormat();\n\t\t\t\t\t}, true);\n\n\t\t\t\t\tModelsManager.getCurrentUser();\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc property\n\t\t\t\t * @name Directives.fieldView#formatToPrecision\n\t\t\t\t * @propertyOf Directives.fieldView\n\t\t\t\t * @description Format a float or money value for displaying purposes from the backend according to precision rules from the field's metadata\n\t\t\t\t * This is strictly for VIEWING purposes - it doesn't change the value in the payload in any way\n\t\t\t\t *\n\t\t\t\t * @param {String} floatVal The value that should be formatted\n\t\t\t\t * @param {Integer} precisionLength The amount of digits after the decimal point\n\t\t\t\t *\n\t\t\t\t * @returns {Number} The formatted float or money value according to precision rules\n\t\t\t\t */\n\t\t\t\tscope.formatToPrecision = function (floatVal, precisionLength) {\n\t\t\t\t\tif (isNaN(floatVal)) {\n\t\t\t\t\t\treturn floatVal;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (angular.isUndefined(precisionLength) || precisionLength === null) {\n\t\t\t\t\t\treturn floatVal; // Return the value, don't do any prepending/appending/rounding (edge case)\n\t\t\t\t\t} else if (((floatVal + '').indexOf('.') > -1 && precisionLength > ((floatVal + '').split('.')[1]).length) || (floatVal + '').indexOf('.') === -1) {\n\t\t\t\t\t\treturn Number(floatVal).toFixed(precisionLength); // This is rounding the value up/down in case precision is lowered (desired behaviour)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn floatVal;\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc property\n\t\t\t\t * @name Directives.fieldView#formatToMoney\n\t\t\t\t * @propertyOf Directives.fieldView\n\t\t\t\t * @description Format a money value for displaying purposes from the backend according to precision rules from the field's metadata\n\t\t\t\t * This is strictly for VIEWING purposes - it doesn't change the value in the payload in any way\n\t\t\t\t *\n\t\t\t\t * @param {String} moneyVal The value that should be formatted\n\t\t\t\t *\n\t\t\t\t * @returns {String} The formatted money value according to precision rules\n\t\t\t\t */\n\t\t\t\tscope.formatToMoney = function (moneyVal) {\n\t\t\t\t\tif (isNaN(moneyVal)) {\n\t\t\t\t\t\treturn moneyVal;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar parsedMoneyArr = moneyVal.split('.');\n\t\t\t\t\t\n\t\t\t\t\treturn parsedMoneyArr.join('.');\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc method\n\t\t\t\t * @name Directives.fieldView#isPlainText\n\t\t\t\t * @methodOf Directives.fieldView\n\t\t\t\t * @description Checks if a certain value is plain text (in the context of PLM)\n\t\t\t\t * Comment out the fields that should be rendered as a simple string, without special treatment\n\t\t\t\t *\n\t\t\t\t * @param {String/Array} value \tThe value to test\n\t\t\t\t *\n\t\t\t\t */\n\t\t\t\tscope.isPlainText = function (value) {\n\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\tcase 9: // boolean\n\t\t\t\t\t\tcase 15: // image\n\t\t\t\t\t\tcase 3: // date\n\t\t\t\t\t\tcase 31: // money\n\t\t\t\t\t\t// case 19: // CSV\n\t\t\t\t\t\tcase 2: // float\n\t\t\t\t\t\t// case 30: // long (integer)\n\t\t\t\t\t\t// case 11: // auto number\n\t\t\t\t\t\t// case 4: // single line text.  this is a special case, because SLTs can have truncation (i.e. they're not \"plain\")\n\t\t\t\t\t\tcase 8: // paragraph\n\t\t\t\t\t\t// case 17: // paragraph without line breaks\n\t\t\t\t\t\tcase 16: // url\n\t\t\t\t\t\tcase 18: // email\n\t\t\t\t\t\tcase 10: // radio\n\t\t\t\t\t\tcase 14: // customer picklist with search filter\n\t\t\t\t\t\tcase 25: // radio linked\n\t\t\t\t\t\tcase 6: // picklist first default\n\t\t\t\t\t\tcase 7: // picklist linked first default\n\t\t\t\t\t\tcase 13: // multi select\n\t\t\t\t\t\tcase 20: // picklist\n\t\t\t\t\t\tcase 22: // picklist latest version\n\t\t\t\t\t\tcase 23: // picklist linked\n\t\t\t\t\t\tcase 24: // picklist lrl\n\t\t\t\t\t\tcase 26: // picklist filter\n\t\t\t\t\t\tcase 27: // multi select linked picklists\n\t\t\t\t\t\tcase 28: // uom\n\t\t\t\t\t\tcase 29: // filtered picklists\n\t\t\t\t\t\tcase 21: // flash\n\t\t\t\t\t\tcase -999: // dropdown\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc method\n\t\t\t\t * @name Directives.fieldView#openImage\n\t\t\t\t * @methodOf Directives.fieldView\n\t\t\t\t * @description Opens the image in a modal\n\t\t\t\t *\n\t\t\t\t * @param {String} imagePath \tThe path to the image\n\t\t\t\t *\n\t\t\t\t */\n\t\t\t\tscope.openImage = function (imagePath) {\n\t\t\t\t\t$mdDialog.show({\n\t\t\t\t\t\tcontroller: function ($scope, $mdDialog) {\n\t\t\t\t\t\t\t$scope.imagePath = imagePath;\n\t\t\t\t\t\t\t$scope.closeDialog = function () {\n\t\t\t\t\t\t\t\t$mdDialog.hide();\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttemplateUrl: 'components/fieldTypes/imageModal.html'\n\t\t\t\t\t}).finally(function () {\n\t\t\t\t\t\tisPermissionDeniedShown = false;\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc method\n\t\t\t\t * @name Directives.fieldView#goToItem\n\t\t\t\t * @methodOf Directives.fieldView\n\t\t\t\t * @description Navigate to an item\n\t\t\t\t *\n\t\t\t\t * @param {String} resourceId \tThe urn of the item to navigate to\n\t\t\t\t *\n\t\t\t\t */\n\t\t\t\tscope.goToItem = function (resourceId) {\n\t\t\t\t\t// $state.current.reloadOnSearch = true;\n\t\t\t\t\t$location.search({\n\t\t\t\t\t\ttab: 'workspace-item-details',\n\t\t\t\t\t\tview: 'full',\n\t\t\t\t\t\tmode: 'view',\n\t\t\t\t\t\titemId: resourceId\n\t\t\t\t\t});\n\t\t\t\t\t// $timeout(function () {\n\t\t\t\t\t// \t$state.current.reloadOnSearch = false;\n\t\t\t\t\t// }, 2000);\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}\n]);\n"]}