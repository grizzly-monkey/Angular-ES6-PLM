{"version":3,"sources":["../../../components/fieldTypes/FieldEditDirective.js"],"names":[],"mappings":";;;;AAIA,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;AAwBb,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,SAAS,CAAC,WAAW,EAAE,CAC1D,YAAY,EACZ,UAAU,EACV,MAAM,EACN,UAAU,EACV,SAAS,EACT,qBAAqB,EACrB,eAAe,EACf,oBAAoB,EACpB,cAAc,EACd,GAAG,EACH,UAAU,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,mBAAmB,EAAE,aAAa,EAAE,kBAAkB,EAAE,YAAY,EAAE,CAAC,EAAE;AACjI,QAAO;AACN,UAAQ,EAAE,GAAG;AACb,OAAK,EAAE;AACN,YAAS,EAAE,GAAG;AACd,WAAQ,EAAE,GAAG;AACb,OAAI,EAAE,GAAG;AACT,UAAO,EAAE,GAAG;AACZ,cAAW,EAAE,GAAG;GAChB;AACD,SAAO,EAAE,IAAI;AACb,aAAW,EAAE,sCAAsC;AACnD,MAAI,EAAE,cAAU,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE;;;;;;;;;AAStC,QAAK,CAAC,MAAM,GAAG,EAAE,CAAC;;;AAGlB,OAAI,qBAAqB,CAAC;;;AAG1B,OAAI,UAAU,CAAC;;;AAGf,sBAAmB,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,YAAY;AAC3C,SAAK,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;IACjC,CAAC,CAAC;;;AAGH,OAAI,KAAK,CAAC,SAAS,CAAC,KAAK,KAAK,IAAI,EAAE;AACnC,SAAK,CAAC,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC;IAC3B;;;AAGD,OAAI,AAAC,KAAK,CAAC,SAAS,CAAC,YAAY,KAAK,IAAI,IAAM,KAAK,CAAC,IAAI,KAAK,QAAQ,AAAC,EAAE;AACzE,SAAK,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC;IACrD;;;;;AAKD,OAAI,AAAC,KAAK,CAAC,SAAS,CAAC,WAAW,KAAK,WAAW,IAAM,KAAK,CAAC,SAAS,CAAC,WAAW,KAAK,yBAAyB,AAAC,EAAE;AACjH,SAAK,CAAC,cAAc,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,CACzD,IAAI,CAAC,UAAU,UAAU,EAAE;AAC3B,YAAQ,UAAU,CAAC,IAAI,KAAK,YAAY,CAAE;KAC1C,CAAC,CACD,IAAI,CAAC,UAAU,CAAC,CAChB,KAAK,CAAC,WAAW,CAAC,CAClB,KAAK,EAAE,CACP,KAAK,EAAE,CAAC;IACV,MAAM;;AACN,SAAK,CAAC,cAAc,GAAG,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC;IACnD;;;AAGD,OAAI,KAAK,CAAC,SAAS,CAAC,WAAW,KAAK,MAAM,EAAE;;;;;;;;;AAS3C,SAAK,CAAC,UAAU,GAAG,IAAI,CAAC;;;;;;;;;;;AAWxB,SAAK,CAAC,aAAa,GAAG;AACrB,UAAK,EAAE,IAAI;KACX,CAAC;;;;;;;;;;AAUF,iBAAa,CAAC,cAAc,EAAE,CAAC;AAC/B,yBAAqB,GAAG,YAAY,CAAC,MAAM,CAAC,8BAA8B,EAAE,UAAU,KAAK,EAAE,IAAI,EAAE;AAClG,UAAK,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;;;;AAIxC,SAAI,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAK,KAAK,CAAC,SAAS,CAAC,KAAK,KAAK,EAAE,AAAC,IAAK,KAAK,CAAC,SAAS,CAAC,KAAK,KAAK,IAAI,AAAC,EAAE;;;AAGnH,UAAI,AAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,KAAK,IAAI,IAAM,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,AAAC,EAAE;AACjG,YAAK,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;OACjG;;AAED,WAAK,CAAC,aAAa,CAAC,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;MACrF;KACD,CAAC,CAAC;;;;AAIH,SAAK,CAAC,MAAM,CAAC,iBAAiB,EAAE,UAAU,MAAM,EAAE,MAAM,EAAE;AACzD,UAAK,CAAC,aAAa,CAAC,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;KACtE,CAAC,CAAC;;;;;;;;;AASH,SAAK,CAAC,gBAAgB,GAAG;AACxB,SAAI,EAAE,KAAK;KACX,CAAC;;;;;;;;AAQF,SAAK,CAAC,WAAW,GAAG;AACnB,eAAU,EAAE,IAAI;AAChB,gBAAW,EAAE,CAAC;AACd,cAAS,EAAE,KAAK;AAChB,oBAAe,EAAE,KAAK;KACtB,CAAC;;;;;;;;;;;;;;AAcF,SAAK,CAAC,gBAAgB,GAAG,UAAU,KAAK,EAAE;;AAEzC,SAAI,CAAC,KAAK,CAAC,OAAO,EAAE;;AAEnB,UAAI,AAAC,AAAC,KAAK,CAAC,IAAI,KAAK,OAAO,IAAK,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,IAAM,KAAK,CAAC,UAAU,CAAC,QAAQ,KAAK,OAAO,AAAC,IAAK,KAAK,CAAC,IAAI,KAAK,OAAO,AAAC,EAAE;;;;AAItI,eAAQ,CAAC,YAAY;AACpB,aAAK,CAAC,gBAAgB,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC;QAC3D,EAAE,GAAG,CAAC,CAAC;OACR;MACD;AACD,YAAO,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;KACtC,CAAC;;;;;;;;;AASF,SAAK,CAAC,cAAc,GAAG,UAAU,MAAM,EAAE;AACxC,SAAI,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,IAAK,MAAM,KAAK,IAAI,AAAC,EAAE;;AAEnD,UAAI,AAAC,MAAM,CAAC,WAAW,KAAK,IAAI,IAAM,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,AAAC,IAAK,MAAM,KAAK,EAAE,AAAC,EAAE;;AACrF,WAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3D,WAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AAC7D,WAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;;AAE9D,YAAK,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,EAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,EAAG,GAAG,CAAC,CAAC;OACjE,MAAM;;AACN,YAAK,CAAC,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC;OAC/B;MACD,MAAM;AACN,WAAK,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC;MAC7B;KACD,CAAC;AACF,WAAO,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;IACzC;;;;;;;;;;;AAWD,QAAK,CAAC,OAAO,GAAG,UAAU,KAAK,EAAE;AAChC,WAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;;;;;;;;;AASF,QAAK,CAAC,UAAU,GAAG,YAAY;AAC9B,QAAI,KAAK,CAAC,IAAI,KAAK,MAAM,EAAE;AAC1B,aAAQ,KAAK,CAAC,SAAS,CAAC,WAAW;AAClC,WAAK,OAAO,CAAC;AACb,WAAK,aAAa;AACjB,cAAO,KAAK,CAAC;AAAA,AACd;AACC,cAAO,IAAI,CAAC;AAAA,MACb;KACD,MAAM,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,EAAE;AACnC,aAAQ,KAAK,CAAC,SAAS,CAAC,WAAW;AAClC,WAAK,QAAQ,CAAC;AACd,WAAK,aAAa;AACjB,cAAO,IAAI,CAAC;AAAA,AACb;AACC,cAAO,KAAK,CAAC;AAAA,MACd;KACD,MAAM;AACN,SAAI,CAAC,KAAK,CAAC,yDAAyD,CAAC,CAAC;KACtE;IACD,CAAC;;;;;;;;;;;;AAYF,QAAK,CAAC,wBAAwB,GAAG,UAAU,KAAK,EAAE;AACjD,YAAQ,KAAK;AACZ,UAAK,aAAa;AACjB,aAAO,IAAI,CAAC;AAAA,AACb;AACC,aAAO,KAAK,CAAC;AAAA,KACd;IACD,CAAC;;;;;;;;;;;AAWF,QAAK,CAAC,qBAAqB,GAAG,UAAU,KAAK,EAAE;AAC9C,YAAQ,KAAK;AACZ,UAAK,CAAC,CAAC;AACP,UAAK,CAAC,CAAC;AACP,UAAK,EAAE,CAAC;AACR,UAAK,SAAS,CAAC;AACf,UAAK,EAAE,CAAC;AACR,UAAK,EAAE,CAAC;AACR,UAAK,EAAE,CAAC;AACR,UAAK,EAAE;;AACN,aAAO,IAAI,CAAC;AAAA,AACb;AACC,aAAO,KAAK,CAAC;AAAA,KACd;IACD,CAAC;;AAEF,QAAK,CAAC,GAAG,CAAC,UAAU,EAAE,YAAY;AACjC,gBAAY,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;IAC7C,CAAC,CAAC;;;AAGH,QAAK,CAAC,UAAU,CAAC,YAAY;AAC5B,QAAI,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;AACtD,QAAI,GAAG,EAAE;AACR,QAAG,CAAC,KAAK,EAAE,CAAC;KACZ;IACD,CAAC,CAAC;;;;;;;;;;;;AAYH,QAAK,CAAC,QAAQ,GAAG,UAAU,IAAI,EAAE,GAAG,EAAE;AACrC,cAAU,GAAG,IAAI,CAAC;AAClB,YAAQ,CAAC,YAAY;AACpB,SAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,EAAE,EAAE;AAC7C,UAAI,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;;;;AAIjF,SAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AACxB,SAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;MACrB;KACD,EAAE,IAAI,CAAC,CAAC;IACT,CAAC;;AAEF,QAAK,CAAC,SAAS,CAAC,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AAC/D,WAAQ,CAAC,YAAY;;;AAGpB,KAAC,CAAC,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,qBAAqB,CAAC,CAAC,QAAQ,CAAC;AAC7D,aAAQ,EAAE,kBAAU,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE;;AACzC,WAAK,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;AACnC,WAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;;MAEnC;KACD,CAAC,CAAC,QAAQ,CAAC,cAAc,EAAG,KAAK,CAAC,SAAS,CAAC,KAAK,GAAI,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,GAAI,SAAS,CAAE,CAAC;;;AAG7J,KAAC,CAAC,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,uBAAuB,CAAC,CAAC,QAAQ,CAAC;AAC/D,UAAK,EAAE,eAAU,UAAU,EAAE,SAAS,EAAE,YAAY,EAAE;;AACrD,UAAI,KAAK,GAAG,KAAK,CAAC;AAClB,OAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,EAAE,UAAU,GAAG,EAAE,GAAG,EAAE;AACjD,WAAI,GAAG,CAAC,IAAI,KAAK,UAAU,EAAE;AAC5B,aAAK,GAAG,IAAI,CAAC;QACb;OACD,CAAC,CAAC;AACH,UAAI,CAAC,KAAK,EAAE;AACX,YAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC;AAC1B,YAAI,EAAE,UAAU;AAChB,aAAK,EAAE,SAAS;QAChB,CAAC,CAAC;OACH;;MAED;AACD,aAAQ,EAAE,kBAAU,YAAY,EAAE,WAAW,EAAE,cAAc,EAAE;;AAC9D,OAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,EAAE,UAAU,GAAG,EAAE,GAAG,EAAE;AACjD,WAAI,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,YAAY,EAAE;AACrC,aAAK,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AACrC,eAAO;QACP;OACD,CAAC,CAAC;;MAEH;KACD,CAAC,CAAC;;AAEH,QAAI,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;AACrC,SAAI,IAAI,GAAG,EAAE,CAAC;AACd,MAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,EAAE,UAAU,KAAK,EAAE,GAAG,EAAE;AACnD,UAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;MACvB,CAAC,CAAC;AACH,MAAC,CAAC,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,uBAAuB,CAAC,CAAC,QAAQ,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;KACtF;;;AAGD,KAAC,CAAC,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,2BAA2B,CAAC,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,KAAK,EAAE;AAC1F,UAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,2BAA2B,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,cAAc,CAAC,CAAC,CAAC;KAChI,CAAC,CAAC;IACH,EAAE,CAAC,CAAC,CAAC;GACN;EACD,CAAC;CACF,CACD,CAAC,CAAC","file":"FieldEditDirective.js","sourcesContent":["/**\n * FIELDEDIT WILL BE DEPRECATED.\n * If you are modifying it, please do so in the new FieldSelector component.\n */\n'use strict';\n\n/**\n * @ngdoc directive\n * @name Directives.fieldEdit\n * @restrict A\n *\n * @description This directive is used anytime you have to display a item's field in the application, in VIEW (i.e., non-editable) mode, printing the value and necessary elements\n * ####- fieldData: {Object} contains the data, properly parsed by the WorkspaceItemDetailsService.getItemDetailsFields method\n * ####- onChange: {Function} call back to the method that's going to be called every time the form element is updated\n * ####- mode: {String} can be 'EDIT', when editing item details, or 'CREATE', when creating a new item\n * ####- waiting: {Boolean} two-way binded to a boolean var in the controller that controls when saving is underway, as to disable controls and block editing\n * ####- placeholder: {String} string used as placeholder text for inputs that support it (if not supplied, it will be ignored by the HTML binding)\n *\n * ##Dependencies\n *\n * @example\n * <doc:example>\n *   <doc:source>\n * \t\t<field-edit field-data=\"Object\" onChange=\"Function\" mode=\"String\" />\n *   </doc:source>\n * </doc:example>\n */\n\nangular.module('plm360.fieldTypes').directive('fieldEdit', [\n\t'$rootScope',\n\t'$compile',\n\t'$log',\n\t'$timeout',\n\t'$filter',\n\t'LocalizationService',\n\t'ModelsManager',\n\t'RESTWrapperService',\n\t'EventService',\n\t'_',\n\tfunction ($rootScope, $compile, $log, $timeout, $filter, LocalizationService, ModelsManager, RESTWrapperService, EventService, _) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: {\n\t\t\t\tfieldData: '=',\n\t\t\t\tonChange: '=',\n\t\t\t\tmode: '@',\n\t\t\t\twaiting: '=',\n\t\t\t\tplaceholder: '@'\n\t\t\t},\n\t\t\treplace: true,\n\t\t\ttemplateUrl: 'components/fieldTypes/fieldEdit.html',\n\t\t\tlink: function (scope, element, attrs) {\n\n\t\t\t\t/**\n\t\t\t\t* @ngdoc property\n\t\t\t\t* @name Directives.fieldEdit#bundle\n\t\t\t\t* @propertyOf Directives.fieldEdit\n\t\t\t\t* @description Localization bundle\n\t\t\t\t*\n\t\t\t\t*/\n\t\t\t\tscope.bundle = {};\n\n\t\t\t\t// listeners\n\t\t\t\tvar currentUserListenerId;\n\n\t\t\t\t// search text\n\t\t\t\tvar searchText;\n\n\t\t\t\t// Initializes LocalizationService\n\t\t\t\tLocalizationService.init().then(function () {\n\t\t\t\t\tscope.bundle = $rootScope.bundle;\n\t\t\t\t});\n\n\t\t\t\t// Converts a null value to empty string\n\t\t\t\tif (scope.fieldData.value === null) {\n\t\t\t\t\tscope.fieldData.value = '';\n\t\t\t\t}\n\n\t\t\t\t// If it's in CREATE ITEM mode, assign the defaultValue to value\n\t\t\t\tif ((scope.fieldData.defaultValue !== null) && (scope.mode === 'CREATE')) {\n\t\t\t\t\tscope.fieldData.value = scope.fieldData.defaultValue;\n\t\t\t\t}\n\n\t\t\t\t// If it's a PARAGRAPH or PARAGRAPH_NO_LINE_BREAK field type, ignore the fieldLength, and use the\n\t\t\t\t// MAX_LENGTH validation instead of fieldLength (per business requirements/changes for NextPLM - PLM-2343)\n\t\t\t\t// this is a (somewhat) temporary measure, until we get rid of the fieldLength for all field types\n\t\t\t\tif ((scope.fieldData.fieldTypeId === 'PARAGRAPH') || (scope.fieldData.fieldTypeId === 'PARAGRAPH_NO_LINE_BREAK')) {\n\t\t\t\t\tscope.maxFieldLength = _.chain(scope.fieldData.validations)\n\t\t\t\t\t\t.find(function (validation) {\n\t\t\t\t\t\t\treturn (validation.type === 'MAX_LENGTH');\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.pick('settings')\n\t\t\t\t\t\t.pluck('maxlength')\n\t\t\t\t\t\t.first()\n\t\t\t\t\t\t.value();\n\t\t\t\t} else { // all other field types - might be null for types which don't use it (such as picklists)\n\t\t\t\t\tscope.maxFieldLength = scope.fieldData.fieldLength;\n\t\t\t\t}\n\n\t\t\t\t// If it's a DATE, create the necessary scope vars for the widget\n\t\t\t\tif (scope.fieldData.fieldTypeId === 'DATE') {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @ngdoc property\n\t\t\t\t\t * @name Directives.fieldEdit#dateFormat\n\t\t\t\t\t * @propertyOf Directives.fieldEdit\n\t\t\t\t\t * @description The current user's selected date format\n\t\t\t\t\t *\n\t\t\t\t\t */\n\t\t\t\t\tscope.dateFormat = null;\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @ngdoc property\n\t\t\t\t\t * @name Directives.fieldEdit#parsedDateValue\n\t\t\t\t\t * @propertyOf Directives.fieldEdit\n\t\t\t\t\t * @description The \"ng-model\"-binded var for this directive, used so we can always pass a\n\t\t\t\t\t * ISO-8601-compliant string back to the Item model (if it was binded to fieldData.value, we\n\t\t\t\t\t * would have to inject date format data into the model, which is not a very good approach)\n\t\t\t\t\t *\n\t\t\t\t\t */\n\t\t\t\t\tscope.formattedDate = {\n\t\t\t\t\t\tvalue: null\n\t\t\t\t\t};\n\n\t\t\t\t\t// Retrieves the timezone data\n\t\t\t\t\t// ModelsManager.getCurrentUser().then(function (data) {\n\t\t\t\t\t// \treturn data.getTimeZone();\n\t\t\t\t\t// }).then(function (tzData) {\n\t\t\t\t\t// \tconsole.log(tzData);\n\t\t\t\t\t// });\n\n\t\t\t\t\t// Retrieves the date format for the current logged in user\n\t\t\t\t\tModelsManager.getCurrentUser();\n\t\t\t\t\tcurrentUserListenerId = EventService.listen('currentUser:currentUser:done', function (event, data) {\n\t\t\t\t\t\tscope.dateFormat = data.getDateFormat();\n\n\t\t\t\t\t\t// parses the existing date string to date object, so it's properly parsed by the datepicker\n\t\t\t\t\t\t// otherwise, when opening the datepicker, it's going to be one day behind\n\t\t\t\t\t\tif (angular.isDefined(scope.fieldData.value) && (scope.fieldData.value !== '') && (scope.fieldData.value !== null)) {\n\n\t\t\t\t\t\t\t// When creating a new item, strip out the zeroes\n\t\t\t\t\t\t\tif ((scope.fieldData.value.constructor !== Date) && (scope.fieldData.value.indexOf('00') !== -1)) {\n\t\t\t\t\t\t\t\tscope.fieldData.value = scope.fieldData.value.substr(0, scope.fieldData.value.indexOf('00') - 1);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tscope.formattedDate.value = $filter('date')(scope.fieldData.value, scope.dateFormat);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t// Watch for changes on the external, binded object (in case of revert buttons, and other actions that can change\n\t\t\t\t\t// the binded value for some reason, such as the \"revert\" button in Affected Items)\n\t\t\t\t\tscope.$watch('fieldData.value', function (newVal, oldVal) {\n\t\t\t\t\t\tscope.formattedDate.value = $filter('date')(newVal, scope.dateFormat);\n\t\t\t\t\t});\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @ngdoc property\n\t\t\t\t\t * @name Directives.fieldEdit#isDatePickerOpen\n\t\t\t\t\t * @propertyOf Directives.fieldEdit\n\t\t\t\t\t * @description Holds the current state (open/closed) of the datepicker using Angular's \"One Dot\"\n\t\t\t\t\t *\n\t\t\t\t\t */\n\t\t\t\t\tscope.datePickerStatus = {\n\t\t\t\t\t\topen: false\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @ngdoc property\n\t\t\t\t\t * @name Directives.fieldEdit#dateOptions\n\t\t\t\t\t * @propertyOf Directives.fieldEdit\n\t\t\t\t\t * @description Fixed PLM-specific customizations for the date picker widget\n\t\t\t\t\t */\n\t\t\t\t\tscope.dateOptions = {\n\t\t\t\t\t\tformatYear: 'yy',\n\t\t\t\t\t\tstartingDay: 0,\n\t\t\t\t\t\tshowWeeks: false,\n\t\t\t\t\t\tformatDayHeader: 'EEE'\n\t\t\t\t\t};\n\n\t\t\t\t\t// Disable weekend selection (left here as reference code for a while)\n\t\t\t\t\t// date-disabled=\"disableWeekends(date, mode)\" in the view\n\t\t\t\t\t// scope.disableWeekends = function (date, mode) {\n\t\t\t\t\t// \treturn (mode === 'day' && (date.getDay() === 0 || date.getDay() === 6));\n\t\t\t\t\t// };\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @ngdoc method\n\t\t\t\t\t * @name Directives.fieldEdit#handleDatePicker\n\t\t\t\t\t * @methodOf Directives.fieldEdit\n\t\t\t\t\t * @description Handles opening/closing the calendar for the datepicker\n\t\t\t\t\t */\n\t\t\t\t\tscope.handleDatePicker = function (event) {\n\t\t\t\t\t\t// Prevents the user from opening the datepicker in case it's saving the data\n\t\t\t\t\t\tif (!scope.waiting) {\n\t\t\t\t\t\t\t// Prevents the datepicker from closing if: it's already open, and the user is clicking the input field to type something\n\t\t\t\t\t\t\tif (((event.type === 'click') && !scope.datePickerStatus.open) || (event.srcElement.nodeName !== 'INPUT') || (event.type === 'focus')) {\n\t\t\t\t\t\t\t\t// Note: Relaying on event's 'preventDefault' and 'stopPropagation' will cause issues when we\n\t\t\t\t\t\t\t\t// have multiple date fields on the same view. This can lead to multiple calendar popups .\n\t\t\t\t\t\t\t\t// To avoid that, we need to let go of event suppression, so that bootstrap UI can detect click outside.\n\t\t\t\t\t\t\t\t$timeout(function () {\n\t\t\t\t\t\t\t\t\tscope.datePickerStatus.open = !scope.datePickerStatus.open;\n\t\t\t\t\t\t\t\t}, 100);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telement.addClass('datepicker-active');\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @ngdoc method\n\t\t\t\t\t * @name Directives.fieldEdit#parseToISODate\n\t\t\t\t\t * @methodOf Directives.fieldEdit\n\t\t\t\t\t * @description When user changes date, parses it back to an ISO-8601-compliant string that's going to be used by the Item model\n\t\t\t\t\t *\n\t\t\t\t\t */\n\t\t\t\t\tscope.parseToISODate = function (newVal) {\n\t\t\t\t\t\tif (angular.isDefined(newVal) && (newVal !== null)) {\n\t\t\t\t\t\t\t// Same string as before (or something else), so un-localize it to prepare for the endpoint\n\t\t\t\t\t\t\tif ((newVal.constructor !== Date) && (newVal.indexOf(',') === -1) && (newVal !== '')) { // The check for commas is for descriptive dates, such as Nov 21, 2014\n\t\t\t\t\t\t\t\tvar day = newVal.substr(scope.dateFormat.indexOf('dd'), 2);\n\t\t\t\t\t\t\t\tvar month = newVal.substr(scope.dateFormat.indexOf('MM'), 2);\n\t\t\t\t\t\t\t\tvar year = newVal.substr(scope.dateFormat.indexOf('yyyy'), 4);\n\n\t\t\t\t\t\t\t\tscope.fieldData.value = new Date(year, (Number(month) - 1), day);\n\t\t\t\t\t\t\t} else { // new string, Date Object\n\t\t\t\t\t\t\t\tscope.fieldData.value = newVal;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscope.fieldData.value = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\telement.removeClass('datepicker-active');\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc method\n\t\t\t\t * @name Directives.fieldEdit#isArray\n\t\t\t\t * @methodOf Directives.fieldEdit\n\t\t\t\t * @description Checks if a certain value is an array\n\t\t\t\t *\n\t\t\t\t * @param {Array/String} value \tThe value to check for\n\t\t\t\t *\n\t\t\t\t */\n\t\t\t\tscope.isArray = function (value) {\n\t\t\t\t\treturn angular.isArray(value);\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc method\n\t\t\t\t * @name Directives.fieldEdit#isEditable\n\t\t\t\t * @methodOf Directives.fieldEdit\n\t\t\t\t * @description Checks if a certain field is editable according to the current mode\n\t\t\t\t *\n\t\t\t\t */\n\t\t\t\tscope.isEditable = function () {\n\t\t\t\t\tif (scope.mode === 'EDIT') {\n\t\t\t\t\t\tswitch (scope.fieldData.editability) {\n\t\t\t\t\t\t\tcase 'NEVER':\n\t\t\t\t\t\t\tcase 'CREATE_ONLY':\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (scope.mode === 'CREATE') {\n\t\t\t\t\t\tswitch (scope.fieldData.editability) {\n\t\t\t\t\t\t\tcase 'ALWAYS':\n\t\t\t\t\t\t\tcase 'CREATE_ONLY':\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$log.error('Mode not supported - only EDIT or CREATE are supported!');\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc method\n\t\t\t\t * @name Directives.fieldEdit#isFieldNotImplementedYet\n\t\t\t\t * @methodOf Directives.fieldEdit\n\t\t\t\t * @description Checks for other field types that shouldn't have editing on in this current implementation\n\t\t\t\t * (this method will change as more field types become available, and eventually will be change name to just check for those types that are NEVER editable, such as AUTO_NUMBER)\n\t\t\t\t *\n\t\t\t\t * @param {String} value \tThe field type to check\n\t\t\t\t *\n\t\t\t\t */\n\t\t\t\tscope.isFieldNotImplementedYet = function (value) {\n\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\tcase 'AUTO_NUMBER':\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc method\n\t\t\t\t * @name Directives.fieldEdit#isSingleLineFieldEdit\n\t\t\t\t * @methodOf Directives.fieldEdit\n\t\t\t\t * @description Checks if the field editing is done in a single line\n\t\t\t\t *\n\t\t\t\t * @param {String} value \tThe field type to check\n\t\t\t\t *\n\t\t\t\t */\n\t\t\t\tscope.isSingleLineFieldEdit = function (value) {\n\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\tcase 4: // single line text\n\t\t\t\t\t\tcase 2: // float\n\t\t\t\t\t\tcase 30: // long\n\t\t\t\t\t\tcase 'DECIMAL':\n\t\t\t\t\t\tcase 31: // money extended\n\t\t\t\t\t\tcase 16: // url\n\t\t\t\t\t\tcase 18: // email\n\t\t\t\t\t\tcase 19: // csv\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tscope.$on('$destory', function () {\n\t\t\t\t\tEventService.unlisten(currentUserListenerId);\n\t\t\t\t});\n\n\t\t\t\t// let's focus on the element\n\t\t\t\tscope.$evalAsync(function () {\n\t\t\t\t\tvar ele = element[0].querySelector('input, textarea');\n\t\t\t\t\tif (ele) {\n\t\t\t\t\t\tele.focus();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc method\n\t\t\t\t * @name Directives.fieldEdit#doSearch\n\t\t\t\t * @methodOf Directives.fieldEdit\n\t\t\t\t * @description Performs a search with given text\n\t\t\t\t *\n\t\t\t\t * @param {String} text \tThe text to search for\n\t\t\t\t * @param {Object} ele \t\tThe dropdown element to update\n\t\t\t\t *\n\t\t\t\t */\n\t\t\t\tscope.doSearch = function (text, ele) {\n\t\t\t\t\tsearchText = text;\n\t\t\t\t\t$timeout(function () {\n\t\t\t\t\t\tif (searchText === text && searchText !== '') {\n\t\t\t\t\t\t\tvar url = scope.fieldData.fieldMetadata.picklist.replace('picklists', 'lookups');\n\n\t\t\t\t\t\t\t// do search\n\t\t\t\t\t\t\t// update the scope.fieldData.options.item array\n\t\t\t\t\t\t\tele.dropdown('refresh');\n\t\t\t\t\t\t\tele.dropdown('show');\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 1500);\n\t\t\t\t};\n\n\t\t\t\tscope.fieldData.uid = scope.fieldData.link.replace(/\\//g, '_');\n\t\t\t\t$timeout(function () {\n\n\t\t\t\t\t// for single select and set the default value\n\t\t\t\t\t$('#' + scope.fieldData.uid + '.ui.single.dropdown').dropdown({\n\t\t\t\t\t\tonChange: function (value, text, $choice) {  // data-value, text, html ele\n\t\t\t\t\t\t\tscope.fieldData.value.title = text;\n\t\t\t\t\t\t\tscope.fieldData.value.link = value;\n\t\t\t\t\t\t\t// console.log(value, text, $choice);\n\t\t\t\t\t\t}\n\t\t\t\t\t}).dropdown('set selected', (scope.fieldData.value ? (_.isString(scope.fieldData.value) ? scope.fieldData.value : scope.fieldData.value.title) : undefined));\n\n\t\t\t\t\t// for multiple select\n\t\t\t\t\t$('#' + scope.fieldData.uid + '.ui.multiple.dropdown').dropdown({\n\t\t\t\t\t\tonAdd: function (addedValue, addedText, $addedChoice) {  // data-value, text, html ele\n\t\t\t\t\t\t\tvar added = false;\n\t\t\t\t\t\t\t_.each(scope.fieldData.value, function (ele, key) {\n\t\t\t\t\t\t\t\tif (ele.link === addedValue) {\n\t\t\t\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (!added) {\n\t\t\t\t\t\t\t\tscope.fieldData.value.push({\n\t\t\t\t\t\t\t\t\tlink: addedValue,\n\t\t\t\t\t\t\t\t\ttitle: addedText\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// console.log(addedValue, addedText, $addedChoice);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonRemove: function (removedValue, removedText, $removedChoice) {  // data-value, text, html ele\n\t\t\t\t\t\t\t_.each(scope.fieldData.value, function (ele, key) {\n\t\t\t\t\t\t\t\tif (ele && ele.link === removedValue) {\n\t\t\t\t\t\t\t\t\tscope.fieldData.value.splice(key, 1);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t// console.log(removedValue, removedText, $removedChoice);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t// set the default values\n\t\t\t\t\tif (_.isArray(scope.fieldData.value)) {\n\t\t\t\t\t\tvar args = [];\n\t\t\t\t\t\t_.each(scope.fieldData.value, function (value, key) {\n\t\t\t\t\t\t\targs.push(value.title);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t$('#' + scope.fieldData.uid + '.ui.multiple.dropdown').dropdown('set selected', args);\n\t\t\t\t\t}\n\n\t\t\t\t\t// initialize key up event\n\t\t\t\t\t$('#' + scope.fieldData.uid + '.ui.dropdown input.search').keyup('input', function (event) {\n\t\t\t\t\t\tscope.doSearch($('#' + scope.fieldData.uid + '.ui.dropdown input.search').val(), $('#' + scope.fieldData.uid + '.ui.dropdown'));\n\t\t\t\t\t});\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t};\n\t}\n]);\n"]}