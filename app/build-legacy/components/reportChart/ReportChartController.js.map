{"version":3,"sources":["../../../components/reportChart/ReportChartController.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;AAYb,OAAO,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC,UAAU,CAAC,uBAAuB,EAAE,CACxE,QAAQ,EACR,YAAY,EACZ,IAAI,EACJ,SAAS,EACT,qBAAqB,EACrB,GAAG,EACH,QAAQ,EACR,sBAAsB,EACtB,UAAU,MAAM,EAAE,UAAU,EAAE,EAAE,EAAE,OAAO,EAAE,mBAAmB,EAAE,CAAC,EAAE,MAAM,EAAE,oBAAoB,EAAE;;;AAGhG,KAAI,IAAI,GAAG,IAAI,CAAC;;;;;;;;AAQhB,OAAM,CAAC,MAAM,GAAG,EAAE,CAAC;;;;;;;;;AASnB,OAAM,CAAC,WAAW,GAAG;AACpB,OAAK,EAAE;AACN,OAAI,EAAE,IAAI;GACV;AACD,SAAO,EAAE;AACR,YAAS,EAAE;AACV,WAAO,EAAE,KAAK;IACd;GACD;AACD,SAAO,EAAE,IAAI;EACb,CAAC;;;;;;;;AAQF,OAAM,CAAC,IAAI,GAAG,YAAY;AACzB,MAAI,CAAC,IAAI,EAAE,CAAC;EACZ,CAAC;;;;;;;;;;;;;;AAcF,KAAI,CAAC,kBAAkB,GAAG,UAAU,MAAM,EAAE,SAAS,EAAE;AACtD,MAAI,cAAc,GAAG,EAAE,CAAC;AACxB,GAAC,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,GAAG,EAAE;AAChC,OAAI,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,KAAK,EAAE;AACzD,WAAO,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,MAAM,CAAC;IACvC,CAAC,CAAC;;AAEH,OAAI,aAAa,GAAG,SAAS,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,oBAAoB,CAAC,QAAQ,CAAC;;AAEzH,OAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,cAAc,EAAE,aAAa,CAAC,EAAE;AAC/C,kBAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACnC;GACD,CAAC,CAAC;;AAEH,SAAO,cAAc,CAAC;EACtB,CAAC;;;;;;;;;;;;;;;AAeF,KAAI,CAAC,eAAe,GAAG,UAAU,QAAQ,EAAE,SAAS,EAAE;AACrD,SAAO,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,UAAU,GAAG,EAAE;AAC1C,OAAI,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,KAAK,EAAE;AACzD,WAAO,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,QAAQ,CAAC;IACzC,CAAC,CAAC;AACH,UAAO,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC;GAClD,CAAC,CAAC;EACH,CAAC;;;;;;;;;;;;;;AAcF,KAAI,CAAC,6BAA6B,GAAG,UAAU,YAAY,EAAE,MAAM,EAAE;AACpE,MAAI,IAAI,GAAG,EAAE,CAAC;;AAEd,GAAC,CAAC,KAAK,CAAC,MAAM,EAAE,UAAU,KAAK,EAAE;AAChC,OAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;GACxB,CAAC,CAAC;;AAEH,SAAO,IAAI,CAAC;EACZ,CAAC;;;;;;;;;;;;;;;;;;;AAmBF,KAAI,CAAC,YAAY,GAAG,UAAU,SAAS,EAAE,YAAY,EAAE,eAAe,EAAE,iBAAiB,EAAE,YAAY,EAAE;AACxG,MAAI,UAAU,GAAG,EAAE,CAAC;;AAEpB,MAAI,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;AAEnC,GAAC,CAAC,IAAI,CAAC,UAAU,EAAE,UAAU,GAAG,EAAE;AACjC,OAAI,aAAa,GAAG,IAAI,CAAC,6BAA6B,CAAC,YAAY,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;;AAE1F,IAAC,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,UAAU,GAAG,EAAE;;AAErC,QAAI,cAAc,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,KAAK,EAAE;AAC9D,YAAO,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,eAAe,CAAC;KAChD,CAAC,CAAC;;AAEH,QAAI,gBAAgB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,KAAK,EAAE;AAChE,YAAO,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,iBAAiB,CAAC;KAClD,CAAC,CAAC;;AAEH,QAAI,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,cAAc,GAAG,cAAc,CAAC,SAAS,CAAC,KAAK,GAAG,oBAAoB,CAAC,QAAQ,CAAC,CAAC;AACrH,iBAAa,CAAC,KAAK,CAAC,GAAG,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,YAAY,CAAC;IACpG,CAAC,CAAC;;AAEH,aAAU,CAAC,IAAI,CAAC;AACf,QAAI,EAAE,OAAO,CAAC,oBAAoB,CAAC,CAAC,GAAG,IAAI,oBAAoB,CAAC,QAAQ,CAAC;AACzE,QAAI,EAAE,aAAa;IACnB,CAAC,CAAC;GACH,CAAC,CAAC;AACH,SAAO,UAAU,CAAC;EAClB,CAAC;;;;;;;;;;;;;;;;;;AAkBF,KAAI,CAAC,yBAAyB,GAAG,UAAU,IAAI,EAAE,aAAa,EAAE,eAAe,EAAE,cAAc,EAAE,gBAAgB,EAAE;AAClH,MAAI,SAAS,GAAG,EAAE,CAAC;AACnB,WAAS,CAAC,IAAI,CAAC;AACd,OAAI,EAAE,OAAO,CAAC,oBAAoB,CAAC,CAAC,eAAe,CAAC;AACpD,OAAI,EAAE,EAAE;GACR,CAAC,CAAC;AACH,WAAS,CAAC,IAAI,CAAC;AACd,OAAI,EAAE,OAAO,CAAC,oBAAoB,CAAC,CAAC,gBAAgB,CAAC;AACrD,OAAI,EAAE,EAAE;GACR,CAAC,CAAC;;AAEH,GAAC,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,GAAG,EAAE;AAC3B,OAAI,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,KAAK,EAAE;AAC1D,WAAO,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,aAAa,CAAC;IAC9C,CAAC,CAAC;;AAEH,OAAI,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,KAAK,EAAE;AAC1D,WAAO,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,cAAc,CAAC;IAC/C,CAAC,CAAC;;AAEH,YAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;AACjF,YAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;GACjF,CAAC,CAAC;;AAEH,SAAO,SAAS,CAAC;EACjB,CAAC;;;;;;;;;;;;;;AAcF,KAAI,CAAC,QAAQ,GAAG,UAAU,KAAK,EAAE;AAChC,SAAO,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,SAAS,GAAG,IAAI,GAAG,KAAK,CAAC,SAAS,GAAG,EAAE,CAAA,AAAC,CAAC;EACvE,CAAC;;;;;;;;;;;;;;AAcF,KAAI,CAAC,qBAAqB,GAAG,UAAU,KAAK,EAAE;AAC7C,SAAO,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,SAAS,GAAG,IAAI,GAAG,KAAK,CAAC,SAAS,GAAG,GAAG,CAAA,AAAC,CAAC;EACxE,CAAC;;;;;;;;AAQF,KAAI,UAAU,GAAG,KAAK,CAAC;;AAEvB,OAAM,CAAC,MAAM,CAAC,WAAW,EAAE,UAAU,MAAM,EAAE,MAAM,EAAE;AACpD,MAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,UAAU,KAAK,IAAI,EAAE;AAC3D,OAAI,CAAC,IAAI,EAAE,CAAC;GACZ;EACD,CAAC,CAAC;;;;;;;;AAQH,KAAI,CAAC,IAAI,GAAG,YAAY;;AAEvB,YAAU,GAAG,IAAI,CAAC;;AAElB,MAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE;AACzC,UAAO;GACP;;;AAGD,qBAAmB,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,YAAY;AAC3C,SAAM,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;;AAElC,OAAI,MAAM,CAAC,SAAS,KAAK,IAAI,EAAE;;;AAG9B,UAAM,CAAC,SAAS,GAAG,EAAE,CAAC;AACtB,UAAM,CAAC,WAAW,GAAG,EAAE,CAAC;AACxB,UAAM,CAAC,WAAW,GAAG,EAAE,CAAC;AACxB,UAAM,CAAC,UAAU,GAAG,EAAE,CAAC;AACvB,UAAM,CAAC,UAAU,GAAG,EAAE,CAAC;AACvB,UAAM,CAAC,SAAS,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC9E,UAAM,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;;AAE9C,QAAI,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;;;;;;;;AAQ1C,QAAI,sBAAsB,GAAG,KAAK,CAAC;;AAEnC,QAAI,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE;AACrF,WAAM,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,eAAe,IAAI,EAAE,CAAC;AAC5E,WAAM,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,eAAe,IAAI,EAAE,CAAC;AAC5E,WAAM,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,gBAAgB,IAAI,EAAE,CAAC;;;AAG9E,aAAQ,MAAM,CAAC,SAAS;AACvB,WAAK,QAAQ,CAAC;AACd,WAAK,QAAQ,CAAC;AACd,WAAK,UAAU,CAAC;AAChB,WAAK,eAAe,CAAC;AACrB,WAAK,aAAa;AACjB,6BAAsB,GAAG,IAAI,CAAC;AAC9B,WAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;AAC1E,WAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;;AAE1E,WAAI,QAAQ,CAAC;AACb,WAAI,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,gBAAgB,EAAE;AACvD,gBAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;AAC7E,cAAM,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,IAAI,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,gBAAgB,CAAC,SAAS,IAAI,EAAE,CAAC;AAC9G,cAAM,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;AAC5E,cAAM,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CACnC,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EACrD,MAAM,CAAC,UAAU,EACjB,OAAO,EACP,OAAO,EACP,MAAM,CAAC,SAAS,KAAK,UAAU,IAAI,MAAM,CAAC,SAAS,KAAK,eAAe,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;QACrF,MAAM;AACN,gBAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;AAC7E,cAAM,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,IAAI,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,gBAAgB,CAAC,SAAS,IAAI,EAAE,CAAC;;AAE9G,cAAM,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;AAC5E,cAAM,CAAC,SAAS,GAAG,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EACtE,QAAQ,EACR,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,gBAAgB,CAAC,EAC9E,OAAO,EACP,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,UAAU,CAAC,CACxE,CAAC;QACF;AACD,aAAM;;AAAA,AAEP;;AAEC,QAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,UAAU,GAAG,EAAE,QAAQ,EAAE;AACtD,YAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AAClC,eAAM,CAAC,SAAS,CAAC,IAAI,CAAC;AACrB,cAAI,EAAE,oBAAoB,CAAC,QAAQ;AACnC,WAAC,EAAE,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC;UAChD,CAAC,CAAC;SACH,MAAM;AACN,eAAM,CAAC,SAAS,CAAC,IAAI,CAAC;AACrB,cAAI,EAAE,OAAO,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC;AACxE,WAAC,EAAE,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC;UAChD,CAAC,CAAC;SACH;QACD,CAAC,CAAC;;;AAGH,WAAI,MAAM,CAAC,SAAS,KAAK,KAAK,IAAI,MAAM,CAAC,SAAS,KAAK,UAAU,EAAE;;AAElE,YAAI,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,UAAU,IAAI,EAAE,GAAG,EAAE;AAC3D,gBAAO,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;SACpB,EAAE,CAAC,CAAC,CAAC;;;AAGN,YAAI,SAAS,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,EAAE,UAAU,GAAG,EAAE;AAC1D,gBAAO,GAAG,CAAC,IAAI,CAAC;SAChB,CAAC,CAAC;;;AAGH,YAAI,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;;AAG7B,YAAI,QAAQ,GAAG,EAAE,CAAC;;AAElB,SAAC,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,GAAG,EAAE,GAAG,EAAE;AAChC,aAAI,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,UAAU,IAAI,EAAE,GAAG,EAAE;AAC3D,iBAAO,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;UACpB,EAAE,CAAC,CAAC,CAAC;AACN,iBAAQ,CAAC,IAAI,CAAC;AACb,cAAI,EAAE,IAAI,CAAC,GAAG,CAAC;AACf,WAAC,EAAE,OAAO,GAAG,KAAK,GAAG,GAAG;UACxB,CAAC,CAAC;SACH,CAAC,CAAC;;AAEH,cAAM,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC5B,MAAM;AACN,cAAM,CAAC,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QACtD;;AAED,aAAM,CAAC,SAAS,GAAG,CAAC;AACnB,YAAI,EAAE,MAAM,CAAC,SAAS;QACtB,CAAC,CAAC;AACH,aAAM;AAAA,MACP;KACD;;;;;;;;;AASD,QAAI,QAAQ,GAAG,KAAK,CAAC;;AAErB,QAAI,MAAM,CAAC,SAAS,KAAK,MAAM,IAAI,MAAM,CAAC,SAAS,KAAK,QAAQ,IAAI,MAAM,CAAC,SAAS,KAAK,MAAM,IAC9F,MAAM,CAAC,SAAS,KAAK,QAAQ,IAAI,MAAM,CAAC,SAAS,KAAK,aAAa,EAAE;AACrE,aAAQ,GAAG,IAAI,CAAC;KAChB;;AAED,UAAM,CAAC,WAAW,GAAG;AACpB,YAAO,EAAE,KAAK;AACd,WAAM,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY;AACxC,YAAO,EAAE;AACR,WAAK,EAAE;AACN,WAAI,EAAE,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE;AACpC,iBAAU,EAAE,MAAM,CAAC,OAAO,KAAK,MAAM,GAAG,EAAE,GAAG,EAAE;OAC/C;AACD,YAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAChG,aAAO,EAAE;AACR,cAAO,EAAE,KAAK;OACd;AACD,eAAS,EAAE;AACV,cAAO,EAAE;AACR,qBAAa,EAAE;AACd,UAAC,EAAE,MAAM,CAAC,OAAO,KAAK,MAAM,GAAG,CAAC,EAAE,GAAG,CAAC;SACtC;QACD;OACD;AACD,aAAO,EAAE;AACR,kBAAW,EAAE,AAAC,MAAM,CAAC,SAAS,KAAK,KAAK,IAAI,MAAM,CAAC,SAAS,KAAK,UAAU,GAAI,mBAAmB,GAAG,kBAAkB;OACvH;AACD,iBAAW,EAAE;AACZ,UAAG,EAAE;AACJ,wBAAgB,EAAE,IAAI;AACtB,cAAM,EAAE,SAAS;AACjB,kBAAU,EAAE;AACX,gBAAO,EAAE,KAAK;SACd;AACD,oBAAY,EAAE,KAAK;QACnB;AACD,aAAM,EAAE;AACP,oBAAY,EAAE,GAAG;AACjB,kBAAU,EAAE;AACX,gBAAO,EAAE,KAAK;SACd;AACD,oBAAY,EAAE,MAAM,CAAC,OAAO,KAAK,MAAM,IAAI,sBAAsB,KAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACzF,oBAAY,EAAE,IAAI;AAClB,cAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;QAChG;AACD,WAAI,EAAE;AACL,kBAAU,EAAE;AACX,gBAAO,EAAE,KAAK;SACd;AACD,oBAAY,EAAE,MAAM,CAAC,OAAO,KAAK,MAAM,IAAI,sBAAsB,KAAK,IAAI,GAAG,IAAI,GAAG,KAAK;QACzF;AACD,WAAI,EAAE;AACL,kBAAU,EAAE;AACX,gBAAO,EAAE,KAAK;SACd;AACD,oBAAY,EAAE,MAAM,CAAC,OAAO,KAAK,MAAM,IAAI,sBAAsB,KAAK,IAAI,GAAG,IAAI,GAAG,KAAK;QACzF;OACD;AACD,WAAK,EAAE;AACN,YAAK,EAAE;AACN,YAAI,EAAE,MAAM,CAAC,OAAO,KAAK,MAAM,IAAI,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,GAAG,IAAI;AAC/E,aAAK,EAAE;AACN,mBAAU,EAAE,MAAM;SAClB;QACD;AACD,aAAM,EAAE;AACP,gBAAQ,EAAE,CAAC,EAAE;AACb,gBAAQ,EAAE,SAAS;;AAEnB,aAAK,EAAE;AACN,cAAK,EAAE,MAAM;AACb,iBAAQ,EAAE,QAAQ;AAClB,qBAAY,EAAE,UAAU;SACxB;;AAED,iBAAS,EAAE,qBAAY;AACtB,aAAI,KAAK,GAAG,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;AAClE,gBAAO,eAAe,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,SAAS,CAAC;SAC1D;AACD,eAAO,EAAE,IAAI;;AAEb,YAAI,EAAE,AAAC,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,GAAG,EAAE,GAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,IAAI;AAC5G,eAAO,EAAE,MAAM,CAAC,OAAO,KAAK,MAAM,GAAG,IAAI,GAAG,KAAK;QACjD;;AAED,mBAAY,EAAE,CAAC;AACf,iBAAU,EAAE,CAAC;AACb,iBAAU,EAAE,CAAC;AACb,kBAAW,EAAE,IAAI;AACjB,gBAAS,EAAE,IAAI;OACf;AACD,WAAK,EAAE;AACN,YAAK,EAAE;AACN,YAAI,EAAE,MAAM,CAAC,OAAO,KAAK,MAAM,IAAI,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,GAAG,IAAI;AAC/E,aAAK,EAAE;AACN,mBAAU,EAAE,MAAM;SAClB;QACD;AACD,eAAQ,EAAE,IAAI;AACd,UAAG,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,QAAQ;AAC/C,UAAG,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,QAAQ;OAC/C;AACD,YAAM,EAAE;AACP,cAAO,EAAE,MAAM,CAAC,OAAO,KAAK,MAAM,GAAG,IAAI,GAAG,KAAK;AACjD,YAAK,EAAE;AACN,YAAI,EAAE,MAAM,CAAC,WAAW;QACxB;AACD,kBAAW,EAAE,CAAC;AACd,aAAM,EAAE,IAAI;OACZ;MACD;AACD,UAAK,EAAE;;AAEN,UAAI,EAAE,MAAM,CAAC,OAAO,KAAK,MAAM,GAAG,IAAI,GAAI,eAAe,GAAG,MAAM,CAAC,SAAS,GAAG,IAAI,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,SAAS,AAAC;AAClJ,WAAK,EAAE;AACN,gBAAS,EAAE,QAAQ;AACnB,eAAQ,EAAE,QAAQ;AAClB,mBAAY,EAAE,UAAU;AACxB,mBAAY,EAAE,MAAM;OACpB;AACD,aAAO,EAAE,IAAI;MACb;AACD,WAAM,EAAE,MAAM,CAAC,SAAS;KACxB,CAAC;;;AAGF,YAAQ,MAAM,CAAC,SAAS;AACvB,UAAK,KAAK;AACT,YAAM;AAAA,AACP,UAAK,UAAU;AACd,YAAM,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;AAC9C,YAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC;AAC/C,YAAM;AAAA,AACP,UAAK,MAAM;AACV,YAAM;AAAA,AACP,UAAK,MAAM;AACV,YAAM;AAAA,AACP,UAAK,QAAQ;AACZ,aAAO,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,EAAE;AAChD,iBAAU,EAAE,MAAM,CAAC,UAAU;OAC7B,CAAC,CAAC;AACH,YAAM;AAAA,AACP,UAAK,QAAQ;AACZ,YAAM,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC;AAC/C,YAAM,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,GAAG,iCAAiC,CAAC;AACnF,YAAM;AAAA,AACP,UAAK,QAAQ;AACZ,YAAM,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC;AAC/C,YAAM,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,GAAG,iCAAiC,CAAC;AACnF,YAAM;AAAA,AACP,UAAK,UAAU;AACd,aAAO,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,EAAE;AAChD,iBAAU,EAAE,MAAM,CAAC,UAAU;OAC7B,CAAC,CAAC;AACH,YAAM,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,QAAQ,CAAC;AACjD,YAAM,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,GAAG,KAAK,CAAC;AACnE,YAAM,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,GAAG,iCAAiC,CAAC;AACnF,YAAM;AAAA,AACP,UAAK,eAAe;AACnB,aAAO,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,EAAE;AAChD,iBAAU,EAAE,MAAM,CAAC,UAAU;OAC7B,CAAC,CAAC;AACH,YAAM,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,QAAQ,CAAC;AACjD,YAAM,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAClE,YAAM,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,GAAG,KAAK,CAAC;AACnE,YAAM,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,GAAG,iCAAiC,CAAC;AACnF,YAAM;AAAA,AACP,UAAK,aAAa;AACjB,YAAM,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC;AAC/C,YAAM,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAChE,YAAM,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,GAAG,iCAAiC,CAAC;AACnF,YAAM;AAAA,AACP;AACC,YAAM;AAAA,KACP;;AAED,UAAM,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG;AAC5C,aAAQ,EAAE,IAAI;KACd,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiCF,MAAM;;AAEN,WAAM,CAAC,WAAW,GAAG;AACpB,aAAO,EAAE,KAAK;AACd,YAAM,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,gBAAgB;AAC5C,WAAK,EAAE,EAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,EAAC;AACjD,YAAM,EAAE,EAAE;AACV,aAAO,EAAE,EAAC,OAAO,EAAE,KAAK,EAAC;;;;;AAKzB,eAAS,EAAE;AACV,cAAO,EAAE,KAAK;AACd,cAAO,EAAE;AACR,oBAAY,EAAE;AACb,gBAAO,EAAE,KAAK;SACd;AACD,mBAAW,EAAE;AACZ,gBAAO,EAAE,KAAK;SACd;QACD;OACD;MACD,CAAC;KACF;GAED,CAAC,CAAC;EACH,CAAC;CACF,CACD,CAAC,CAAC,UAAU,CAAC,kBAAkB,EAAE,CACjC,QAAQ,EACR,gBAAgB,EAChB,UAAU,EACV,WAAW,EACX,OAAO,EACP,UAAU,MAAM,EAAE,cAAc,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE;;AAE7D,OAAM,CAAC,KAAK,GAAG,KAAK,CAAC;;;;;AAKrB,SAAQ,CAAC,YAAY;AACpB,UAAQ,CAAC,YAAY;AACpB,SAAM,CAAC,SAAS,GAAG,SAAS,CAAC;GAC7B,EAAE,CAAC,CAAC,CAAC;EACN,EAAE,CAAC,CAAC,CAAC;;;;;;;;;AASN,OAAM,CAAC,eAAe,GAAG,YAAY;AACpC,gBAAc,CAAC,KAAK,EAAE,CAAC;EACvB,CAAC;;;;;;AAMF,WAAU,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,EAAE,OAAO,EAAE,UAAU,OAAO,EAAE;AACvE,MAAI,IAAI,GAAG,IAAI,CAAC;AAChB,MAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;AACjC,MAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;;AAEnC,MAAI,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;AAC9B,SAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;;AAGnB,UAAQ,CAAC,YAAY;AACpB,OAAI,CAAC,OAAO,CAAC,UAAU,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;GAC7C,EAAE,CAAC,CAAC,CAAC;EACN,CAAC,CAAC;CACH,CACD,CAAC,CAAC","file":"ReportChartController.js","sourcesContent":["'use strict';\n\n/**\n * @ngdoc object\n * @name Controllers.ReportChartController\n *\n * @description This controller is responsible for logics of report chart directive\n *\n * ##Dependencies\n * - Requires {@link Services.LocalizationService}\n *\n */\nangular.module('plm360.reportChart').controller('ReportChartController', [\n\t'$scope',\n\t'$rootScope',\n\t'$q',\n\t'$filter',\n\t'LocalizationService',\n\t'_',\n\t'$modal',\n\t'ReportChartConstants',\n\tfunction ($scope, $rootScope, $q, $filter, LocalizationService, _, $modal, ReportChartConstants) {\n\n\t\t// Grab the scope of this to be called inside $scope.init\n\t\tvar that = this;\n\n\t\t/**\n\t\t * @ngdoc property\n\t\t * @name Controllers.ReportChartController#bundle\n\t\t * @propertyOf Controllers.ReportChartController\n\t\t * @description localization bundle\n\t\t */\n\t\t$scope.bundle = {};\n\n\t\t/**\n\t\t * @ngdoc property\n\t\t * @name Controllers.ReportChartController#chartConfig\n\t\t * @propertyOf Controllers.ReportChartController\n\t\t * @description The chart configuration option to be used with high charts directive. Note: Need to set some default\n\t\t * values to avoid showing default title and other options when chart config is being loaded.\n\t\t */\n\t\t$scope.chartConfig = {\n\t\t\ttitle: {\n\t\t\t\ttext: null\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\texporting: {\n\t\t\t\t\tenabled: false\n\t\t\t\t}\n\t\t\t},\n\t\t\tloading: true\n\t\t};\n\n\t\t/**\n\t\t * @ngdoc method\n\t\t * @name Controllers.ReportChartController#init\n\t\t * @methodOf Controllers.ReportChartController\n\t\t * @description Initialization function\n\t\t */\n\t\t$scope.init = function () {\n\t\t\tthat.init();\n\t\t};\n\n\t\t/**\n\t\t * @ngdoc method\n\t\t * @name Controllers.ReportChartController#createCategoryList\n\t\t * @methodOf Controllers.ReportChartController\n\t\t * @description create list of categories from the given chart data.\n\t\t *\n\t\t * @param {String} axisId : the id of the axis on which the category will be created. Note: Generally for reports it will be x-axis.\n\t\t * @param {Object} chartData : the chart data for the report.\n\t\t *\n\t\t * @return {Array} list of categories for the chart.\n\t\t * @private\n\t\t */\n\t\tthat.createCategoryList = function (axisId, chartData) {\n\t\t\tvar axisCategories = [];\n\t\t\t_.each(chartData, function (row) {\n\t\t\t\tvar dataPoint = _.find(row.fields.entry, function (entry) {\n\t\t\t\t\treturn entry.key.toString() === axisId;\n\t\t\t\t});\n\n\t\t\t\tvar categoryValue = dataPoint ? $filter('escapeHtmlEntities')(dataPoint.fieldData.value) : ReportChartConstants.NO_VALUE;\n\n\t\t\t\tif (!_.contains(axisCategories, categoryValue)) {\n\t\t\t\t\taxisCategories.push(categoryValue);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn axisCategories;\n\t\t};\n\n\t\t/**\n\t\t * @ngdoc method\n\t\t * @name Controllers.ReportChartController#createSeriesMap\n\t\t * @methodOf Controllers.ReportChartController\n\t\t * @description create a map of series from the chart data.\n\t\t *\n\t\t * @param {String} seriesId : the id of the series (this will be the key of the resultant map).\n\t\t * @param {Object} chartData : the chart data for the report.\n\t\t *\n\t\t * @return {Object} map of series keyyed by series id\n\t\t * NOTE: its valid to have an empty string as series id. What should we do if we have multiple series with empty string id??\n\t\t * @private\n\t\t */\n\t\tthat.createSeriesMap = function (seriesId, chartData) {\n\t\t\treturn _.groupBy(chartData, function (row) {\n\t\t\t\tvar dataPoint = _.find(row.fields.entry, function (entry) {\n\t\t\t\t\treturn entry.key.toString() === seriesId;\n\t\t\t\t});\n\t\t\t\treturn dataPoint ? dataPoint.fieldData.value : '';\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * @ngdoc method\n\t\t * @name Controllers.ReportChartController#createInitialDataSetForSeries\n\t\t * @methodOf Controllers.ReportChartController\n\t\t * @description create default data list for a series. This method will be used with {@link #createSeries}.\n\t\t *\n\t\t * @param {Number} initialValue : initial value to be set to the list.\n\t\t * @param {Number} length : the length of the list. Note: In the context of series, this should be the length of categories.\n\t\t *\n\t\t * @return {Array} list with default values.\n\t\t * @private\n\t\t */\n\t\tthat.createInitialDataSetForSeries = function (initialValue, length) {\n\t\t\tvar list = [];\n\n\t\t\t_.times(length, function (index) {\n\t\t\t\tlist.push(initialValue);\n\t\t\t});\n\n\t\t\treturn list;\n\t\t};\n\n\t\t/**\n\t\t * @ngdoc method\n\t\t * @name Controllers.ReportChartController#createSeries\n\t\t * @methodOf Controllers.ReportChartController\n\t\t * @description create list of series of the report.\n\t\t *\n\t\t * @param {Object} seriesMap : a map keyed by series name and value is the list of values for categories.\n\t\t *                              Note: list does not necessary contain value for each category, so this method will\n\t\t *                              fill the missing values with default values.\n\t\t * @param {Array} categoryList : list of strings representing the category for the report chart.\n\t\t * @param {String} dependentAxisId : the dependent axis id (it can be x-axis or y-axis depending on the chart data)\n\t\t * @param {String} independentAxisId : the independent axis id (it can be a-axis or y-axis depennding on the chart data).\n\t\t * @param {Number/String} defaultValue : the default value to set to the series data list.\n\t\t *\n\t\t * @return {Array} the list of series for the report chart.\n\t\t * @private\n\t\t */\n\t\tthat.createSeries = function (seriesMap, categoryList, dependentAxisId, independentAxisId, defaultValue) {\n\t\t\tvar seriesList = [];\n\n\t\t\tvar seriesKeys = _.keys(seriesMap);\n\n\t\t\t_.each(seriesKeys, function (key) {\n\t\t\t\tvar seriesDataSet = that.createInitialDataSetForSeries(defaultValue, categoryList.length);\n\n\t\t\t\t_.each(seriesMap[key], function (row) {\n\n\t\t\t\t\tvar dependentPoint = _.find(row.fields.entry, function (entry) {\n\t\t\t\t\t\treturn entry.key.toString() === dependentAxisId;\n\t\t\t\t\t});\n\n\t\t\t\t\tvar independentPoint = _.find(row.fields.entry, function (entry) {\n\t\t\t\t\t\treturn entry.key.toString() === independentAxisId;\n\t\t\t\t\t});\n\n\t\t\t\t\tvar index = _.indexOf(categoryList, dependentPoint ? dependentPoint.fieldData.value : ReportChartConstants.NO_VALUE);\n\t\t\t\t\tseriesDataSet[index] = independentPoint ? parseInt(independentPoint.fieldData.value) : defaultValue;\n\t\t\t\t});\n\n\t\t\t\tseriesList.push({\n\t\t\t\t\tname: $filter('escapeHtmlEntities')(key || ReportChartConstants.NO_VALUE),\n\t\t\t\t\tdata: seriesDataSet\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn seriesList;\n\t\t};\n\n\t\t/**\n\t\t * ngdoc method\n\t\t * @name Controllers.ReportChartController#createSeriesForAggregates\n\t\t * @methodOf Controllers.ReportChartController\n\t\t * @description create list of series for the report. This is a variant of {@link #createSeries} to deal with a scenario\n\t\t * where we have aggregates fields for both series and y-axis.\n\t\t *\n\t\t * @param {Object} data : the chart data for the report.\n\t\t * @param {String} firstSeriesId : the id of the field representing series.\n\t\t * @param {String} firstSeriesName : the name / label of the series\n\t\t * @param {String} secondSeriesId : the id of the field representing y-axis\n\t\t * @param {String} secondSeriesName : the name / label of y-axis.\n\t\t *\n\t\t * @return {Array} the list of series for the report chart.\n\t\t * @private\n\t\t */\n\t\tthat.createSeriesForAggregates = function (data, firstSeriesId, firstSeriesName, secondSeriesId, secondSeriesName) {\n\t\t\tvar chartData = [];\n\t\t\tchartData.push({\n\t\t\t\tname: $filter('escapeHtmlEntities')(firstSeriesName),\n\t\t\t\tdata: []\n\t\t\t});\n\t\t\tchartData.push({\n\t\t\t\tname: $filter('escapeHtmlEntities')(secondSeriesName),\n\t\t\t\tdata: []\n\t\t\t});\n\n\t\t\t_.each(data, function (row) {\n\t\t\t\tvar dataPoint1 = _.find(row.fields.entry, function (entry) {\n\t\t\t\t\treturn entry.key.toString() === firstSeriesId;\n\t\t\t\t});\n\n\t\t\t\tvar dataPoint2 = _.find(row.fields.entry, function (entry) {\n\t\t\t\t\treturn entry.key.toString() === secondSeriesId;\n\t\t\t\t});\n\n\t\t\t\tchartData[0].data.push(dataPoint1 ? parseInt(dataPoint1.fieldData.value) : null);\n\t\t\t\tchartData[1].data.push(dataPoint2 ? parseInt(dataPoint2.fieldData.value) : null);\n\t\t\t});\n\n\t\t\treturn chartData;\n\t\t};\n\n\t\t/**\n\t\t * @ngdoc method\n\t\t * @name Controllers.ReportChartController#createId\n\t\t * @methodOf Controllers.ReportChartController\n\t\t * @description create field id based on field object.\n\t\t *\n\t\t * @param {Object} field : field associated with the report.\n\t\t *\n\t\t * @return {String} the id of the field based on {@link #fieldID} and optionally {@link #aggregate} properties.\n\t\t * Note: we need to incorporate {@link #aggregate} as reportResult column id will have the aggregate property as part of field ID.\n\t\t * @private\n\t\t */\n\t\tthat.createId = function (field) {\n\t\t\treturn field.fieldID + (field.aggregate ? '__' + field.aggregate : '');\n\t\t};\n\n\t\t/**\n\t\t * @ngdoc method\n\t\t * @name Controllers.ReportChartController#createFieldDescriptor\n\t\t * @methodOf Controllers.ReportChartController\n\t\t * @description create field descriptor on field object.\n\t\t *\n\t\t * @param {Object} field : field associated with the report.\n\t\t *\n\t\t * @return {String} the descriptor of the field based on {@link #fieldID} and optionally {@link #aggregate} properties.\n\t\t * Note: we need to incorporate {@link #aggregate} as reportResult column id will have the aggregate property as part of field ID.\n\t\t * @private\n\t\t */\n\t\tthat.createFieldDescriptor = function (field) {\n\t\t\treturn field.fieldID + (field.aggregate ? ' (' + field.aggregate : ')');\n\t\t};\n\n\t\t/**\n\t\t * @ngdoc method\n\t\t * @name Controllers.ReportChartController#isRendered\n\t\t * @propertyOf Controllers.ReportChartController\n\t\t * @description true, when report chart directive is rendered.\n\t\t */\n\t\tvar isRendered = false;\n\n\t\t$scope.$watch('reportObj', function (newVal, oldVal) {\n\t\t\tif (!angular.equals(newVal, oldVal) && isRendered === true) {\n\t\t\t\tthat.init();\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * @ngdoc method\n\t\t * @name Controllers.ReportChartController#init\n\t\t * @methodOf Controllers.ReportChartController\n\t\t * @description Initialization function\n\t\t */\n\t\tthat.init = function () {\n\n\t\t\tisRendered = true;\n\n\t\t\tif (!angular.isDefined($scope.reportObj)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Initialize the localization bundle\n\t\t\tLocalizationService.init().then(function () {\n\t\t\t\t$scope.bundle = $rootScope.bundle;\n\n\t\t\t\tif ($scope.reportObj !== null) {\n\n\t\t\t\t\t// Load the chart data\n\t\t\t\t\t$scope.chartData = [];\n\t\t\t\t\t$scope.chartLabels = [];\n\t\t\t\t\t$scope.seriesLabel = '';\n\t\t\t\t\t$scope.yAxisLabel = '';\n\t\t\t\t\t$scope.xAxisLabel = '';\n\t\t\t\t\t$scope.chartName = $filter('escapeHtmlEntities')($scope.reportObj.getTitle());\n\t\t\t\t\t$scope.chartType = $scope.reportObj.getType();\n\n\t\t\t\t\tvar data = $scope.reportObj.getFullList();\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @ngdoc property\n\t\t\t\t\t * @name Controllers.ReportChartController#isMultiSeriesOrStacked\n\t\t\t\t\t * @methodOf Controllers.ReportChartController\n\t\t\t\t\t * @description true, if chart is either multiseries or stacked\n\t\t\t\t\t */\n\t\t\t\t\tvar isMultiSeriesOrStacked = false;\n\n\t\t\t\t\tif (angular.isDefined(data.reportResult) && angular.isDefined(data.reportResult.row)) {\n\t\t\t\t\t\t$scope.xAxisLabel = data.reportDefinition.reportChart.chartXaxisLabel || '';\n\t\t\t\t\t\t$scope.yAxisLabel = data.reportDefinition.reportChart.chartYaxisLabel || '';\n\t\t\t\t\t\t$scope.seriesLabel = data.reportDefinition.reportChart.chartSeriesLabel || '';\n\n\t\t\t\t\t\t// We need different data structure for different types of chart\n\t\t\t\t\t\tswitch ($scope.chartType) {\n\t\t\t\t\t\t\tcase 'MSLINE':\n\t\t\t\t\t\t\tcase 'MSAREA':\n\t\t\t\t\t\t\tcase 'MSCOLUMN':\n\t\t\t\t\t\t\tcase 'STACKEDCOLUMN':\n\t\t\t\t\t\t\tcase 'STACKEDAREA':\n\t\t\t\t\t\t\t\tisMultiSeriesOrStacked = true;\n\t\t\t\t\t\t\t\tvar xAxisId = that.createId(data.reportDefinition.reportChart.xAxisField);\n\t\t\t\t\t\t\t\tvar yAxisId = that.createId(data.reportDefinition.reportChart.yAxisField);\n\n\t\t\t\t\t\t\t\tvar seriesId;\n\t\t\t\t\t\t\t\tif (data.reportDefinition.reportChart.xAxisSeriesField) {\n\t\t\t\t\t\t\t\t\tseriesId = that.createId(data.reportDefinition.reportChart.xAxisSeriesField);\n\t\t\t\t\t\t\t\t\t$scope.seriesLabel = $scope.seriesLabel || data.reportDefinition.reportChart.xAxisSeriesField.fieldName || '';\n\t\t\t\t\t\t\t\t\t$scope.categories = that.createCategoryList(xAxisId, data.reportResult.row);\n\t\t\t\t\t\t\t\t\t$scope.chartData = that.createSeries(\n\t\t\t\t\t\t\t\t\t\tthat.createSeriesMap(seriesId, data.reportResult.row),\n\t\t\t\t\t\t\t\t\t\t$scope.categories,\n\t\t\t\t\t\t\t\t\t\txAxisId,\n\t\t\t\t\t\t\t\t\t\tyAxisId,\n\t\t\t\t\t\t\t\t\t\t$scope.chartType === 'MSCOLUMN' || $scope.chartType === 'STACKEDCOLUMN' ? null : 0);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tseriesId = that.createId(data.reportDefinition.reportChart.yAxisSeriesField);\n\t\t\t\t\t\t\t\t\t$scope.seriesLabel = $scope.seriesLabel || data.reportDefinition.reportChart.yAxisSeriesField.fieldName || '';\n\n\t\t\t\t\t\t\t\t\t$scope.categories = that.createCategoryList(xAxisId, data.reportResult.row);\n\t\t\t\t\t\t\t\t\t$scope.chartData = that.createSeriesForAggregates(data.reportResult.row,\n\t\t\t\t\t\t\t\t\t\tseriesId,\n\t\t\t\t\t\t\t\t\t\tthat.createFieldDescriptor(data.reportDefinition.reportChart.yAxisSeriesField),\n\t\t\t\t\t\t\t\t\t\tyAxisId,\n\t\t\t\t\t\t\t\t\t\tthat.createFieldDescriptor(data.reportDefinition.reportChart.yAxisField)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t// TODO: needs more refactoring for default supported charts.\n\t\t\t\t\t\t\t\t_.each(data.reportResult.row, function (row, rowIndex) {\n\t\t\t\t\t\t\t\t\tif (row.fields.entry.length === 1) {\n\t\t\t\t\t\t\t\t\t\t$scope.chartData.push({\n\t\t\t\t\t\t\t\t\t\t\tname: ReportChartConstants.NO_VALUE,\n\t\t\t\t\t\t\t\t\t\t\ty: parseInt(row.fields.entry[0].fieldData.value)\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t$scope.chartData.push({\n\t\t\t\t\t\t\t\t\t\t\tname: $filter('escapeHtmlEntities')(row.fields.entry[0].fieldData.value),\n\t\t\t\t\t\t\t\t\t\t\ty: parseInt(row.fields.entry[1].fieldData.value)\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t// Do extra massaging if it's pie/doughnut chart\n\t\t\t\t\t\t\t\tif ($scope.chartType === 'PIE' || $scope.chartType === 'DOUGHNUT') {\n\t\t\t\t\t\t\t\t\t// Get the total value\n\t\t\t\t\t\t\t\t\tvar total = _.reduce($scope.chartData, function (memo, ele) {\n\t\t\t\t\t\t\t\t\t\treturn memo + ele.y;\n\t\t\t\t\t\t\t\t\t}, 0);\n\n\t\t\t\t\t\t\t\t\t// Group the data according to name\n\t\t\t\t\t\t\t\t\tvar groupData = _.groupBy($scope.chartData, function (ele) {\n\t\t\t\t\t\t\t\t\t\treturn ele.name;\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t// Get all the key names\n\t\t\t\t\t\t\t\t\tvar keys = _.keys(groupData);\n\n\t\t\t\t\t\t\t\t\t// Empty array to store final chartData\n\t\t\t\t\t\t\t\t\tvar dataList = [];\n\n\t\t\t\t\t\t\t\t\t_.each(keys, function (key, ind) {\n\t\t\t\t\t\t\t\t\t\tvar reduceY = _.reduce(groupData[key], function (memo, ele) {\n\t\t\t\t\t\t\t\t\t\t\treturn memo + ele.y;\n\t\t\t\t\t\t\t\t\t\t}, 0);\n\t\t\t\t\t\t\t\t\t\tdataList.push({\n\t\t\t\t\t\t\t\t\t\t\tname: keys[ind],\n\t\t\t\t\t\t\t\t\t\t\ty: reduceY / total * 100 // Get the percentage\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t$scope.chartData = dataList;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$scope.categories = _.pluck($scope.chartData, 'name');\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$scope.chartData = [{\n\t\t\t\t\t\t\t\t\tdata: $scope.chartData\n\t\t\t\t\t\t\t\t}];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @ngdoc property\n\t\t\t\t\t * @name Controllers.ReportChartController#useTicks\n\t\t\t\t\t * @methodOf Controllers.ReportChartController\n\t\t\t\t\t * @description true, if ticks will be used on x-Axis (independent axis) instead of categories. For line and area\n\t\t\t\t\t * charts, ticks should be used.\n\t\t\t\t\t */\n\t\t\t\t\tvar useTicks = false;\n\n\t\t\t\t\tif ($scope.chartType === 'LINE' || $scope.chartType === 'MSLINE' || $scope.chartType === 'AREA' ||\n\t\t\t\t\t\t$scope.chartType === 'MSAREA' || $scope.chartType === 'STACKEDAREA') {\n\t\t\t\t\t\tuseTicks = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t$scope.chartConfig = {\n\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\tnoData: $scope.bundle.chart.noDataToShow,\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tchart: {\n\t\t\t\t\t\t\t\ttype: $scope.chartType.toLowerCase(),\n\t\t\t\t\t\t\t\tspacingTop: $scope.isModal === 'true' ? 50 : 10\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcolors: ['#40a9dd', '#fab11c', '#77bd0d', '#e2580b', '#727272', '#9c73dd', '#ce7057', '#ce7eb6'],\n\t\t\t\t\t\t\tcredits: {\n\t\t\t\t\t\t\t\tenabled: false\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\texporting: {\n\t\t\t\t\t\t\t\tbuttons: {\n\t\t\t\t\t\t\t\t\tcontextButton: {\n\t\t\t\t\t\t\t\t\t\ty: $scope.isModal === 'true' ? -50 : 0\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttooltip: {\n\t\t\t\t\t\t\t\tpointFormat: ($scope.chartType === 'PIE' || $scope.chartType === 'DOUGHNUT') ? '<b>{point.y}</b>%' : '<b>{point.y}</b>'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tplotOptions: {\n\t\t\t\t\t\t\t\tpie: {\n\t\t\t\t\t\t\t\t\tallowPointSelect: true,\n\t\t\t\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t\t\t\tdataLabels: {\n\t\t\t\t\t\t\t\t\t\tenabled: false\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tshowInLegend: false\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcolumn: {\n\t\t\t\t\t\t\t\t\tgroupPadding: 0.1,\n\t\t\t\t\t\t\t\t\tdataLabels: {\n\t\t\t\t\t\t\t\t\t\tenabled: false\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tshowInLegend: $scope.isModal === 'true' && isMultiSeriesOrStacked === true ? true : false,\n\t\t\t\t\t\t\t\t\tcolorByPoint: true,\n\t\t\t\t\t\t\t\t\tcolors: ['#40a9dd', '#fab11c', '#77bd0d', '#e2580b', '#727272', '#9c73dd', '#ce7057', '#ce7eb6']\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tline: {\n\t\t\t\t\t\t\t\t\tdataLabels: {\n\t\t\t\t\t\t\t\t\t\tenabled: false\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tshowInLegend: $scope.isModal === 'true' && isMultiSeriesOrStacked === true ? true : false\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tarea: {\n\t\t\t\t\t\t\t\t\tdataLabels: {\n\t\t\t\t\t\t\t\t\t\tenabled: false\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tshowInLegend: $scope.isModal === 'true' && isMultiSeriesOrStacked === true ? true : false\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\txAxis: {\n\t\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\t\ttext: $scope.isModal === 'true' && $scope.xAxisLabel ? $scope.xAxisLabel : null,\n\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\tfontWeight: 'bold'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tlabels: {\n\t\t\t\t\t\t\t\t\trotation: -30,\n\t\t\t\t\t\t\t\t\toverflow: 'justify',\n\t\t\t\t\t\t\t\t\t// Add truncation styles to long labels\n\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\twidth: '80px',\n\t\t\t\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\t\t\t\ttextOverflow: 'ellipsis'\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t// Include tooltip for labels (since labels can be truncated)\n\t\t\t\t\t\t\t\t\tformatter: function () {\n\t\t\t\t\t\t\t\t\t\tvar value = useTicks ? $scope.categories[this.value] : this.value;\n\t\t\t\t\t\t\t\t\t\treturn '<span title=\"' + value + '\">' + value + '</span>';\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tuseHTML: true,\n\t\t\t\t\t\t\t\t\t// Make sure step is large enough so labels will not overlap\n\t\t\t\t\t\t\t\t\tstep: ($scope.categories && $scope.categories.length > 20) ? Math.ceil($scope.categories.length / 20) : null,\n\t\t\t\t\t\t\t\t\tenabled: $scope.isModal === 'true' ? true : false\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t// These settings will impact only non category charts.\n\t\t\t\t\t\t\t\ttickInterval: 1,\n\t\t\t\t\t\t\t\tminPadding: 0,\n\t\t\t\t\t\t\t\tmaxPadding: 0,\n\t\t\t\t\t\t\t\tstartOnTick: true,\n\t\t\t\t\t\t\t\tendOnTick: true\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tyAxis: {\n\t\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\t\ttext: $scope.isModal === 'true' && $scope.yAxisLabel ? $scope.yAxisLabel : null,\n\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\tfontWeight: 'bold'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tminRange: 0.15,\n\t\t\t\t\t\t\t\tmin: data.reportDefinition.reportChart.yAxisMin,\n\t\t\t\t\t\t\t\tmax: data.reportDefinition.reportChart.yAxisMax\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tlegend: {\n\t\t\t\t\t\t\t\tenabled: $scope.isModal === 'true' ? true : false,\n\t\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\t\ttext: $scope.seriesLabel\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t\t\t\tshadow: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t// Remove the chartname (since name is already there on modal header)\n\t\t\t\t\t\t\ttext: $scope.isModal === 'true' ? null : ('<span title=\"' + $scope.chartName + '\">' + $filter('escapeHtmlEntities')($scope.chartName) + '</span>'),\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\t\ttextOverflow: 'ellipsis',\n\t\t\t\t\t\t\t\tpaddingRight: '20px'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tuseHTML: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\tseries: $scope.chartData\n\t\t\t\t\t};\n\n\t\t\t\t\t// We need different options in configuration for different types of charts\n\t\t\t\t\tswitch ($scope.chartType) {\n\t\t\t\t\t\tcase 'PIE':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'DOUGHNUT':\n\t\t\t\t\t\t\t$scope.chartConfig.options.chart.type = 'pie';\n\t\t\t\t\t\t\t$scope.chartConfig.series[0].innerSize = '40%';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'LINE':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'AREA':\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'COLUMN':\n\t\t\t\t\t\t\tangular.extend($scope.chartConfig.options.xAxis, {\n\t\t\t\t\t\t\t\tcategories: $scope.categories\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'MSLINE':\n\t\t\t\t\t\t\t$scope.chartConfig.options.chart.type = 'line';\n\t\t\t\t\t\t\t$scope.chartConfig.options.tooltip.pointFormat = '{series.name}: <b>{point.y}</b>';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'MSAREA':\n\t\t\t\t\t\t\t$scope.chartConfig.options.chart.type = 'area';\n\t\t\t\t\t\t\t$scope.chartConfig.options.tooltip.pointFormat = '{series.name}: <b>{point.y}</b>';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'MSCOLUMN':\n\t\t\t\t\t\t\tangular.extend($scope.chartConfig.options.xAxis, {\n\t\t\t\t\t\t\t\tcategories: $scope.categories\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t$scope.chartConfig.options.chart.type = 'column';\n\t\t\t\t\t\t\t$scope.chartConfig.options.plotOptions.column.colorByPoint = false;\n\t\t\t\t\t\t\t$scope.chartConfig.options.tooltip.pointFormat = '{series.name}: <b>{point.y}</b>';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'STACKEDCOLUMN':\n\t\t\t\t\t\t\tangular.extend($scope.chartConfig.options.xAxis, {\n\t\t\t\t\t\t\t\tcategories: $scope.categories\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t$scope.chartConfig.options.chart.type = 'column';\n\t\t\t\t\t\t\t$scope.chartConfig.options.plotOptions.column.stacking = 'normal';\n\t\t\t\t\t\t\t$scope.chartConfig.options.plotOptions.column.colorByPoint = false;\n\t\t\t\t\t\t\t$scope.chartConfig.options.tooltip.pointFormat = '{series.name}: <b>{point.y}</b>';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'STACKEDAREA':\n\t\t\t\t\t\t\t$scope.chartConfig.options.chart.type = 'area';\n\t\t\t\t\t\t\t$scope.chartConfig.options.plotOptions.area.stacking = 'normal';\n\t\t\t\t\t\t\t$scope.chartConfig.options.tooltip.pointFormat = '{series.name}: <b>{point.y}</b>';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t$scope.chartConfig.options.chart.animation = {\n\t\t\t\t\t\tduration: 1500\n\t\t\t\t\t};\n\n\t\t\t\t\t// If not in modal, add the enlargeButton\n\t\t\t\t\t// NOTE: temporarily commented-out because it was broken after Galileo-related changes\n\t\t\t\t\t// if ($scope.isModal !== 'true') {\n\t\t\t\t\t// \tangular.extend($scope.chartConfig.options.exporting, {\n\t\t\t\t\t// \t\tbuttons: {\n\t\t\t\t\t// \t\t\tenlargeButton: {\n\t\t\t\t\t// \t\t\t\tonclick: function () {\n\t\t\t\t\t// \t\t\t\t\tvar parentScope = $scope;\n\n\t\t\t\t\t// \t\t\t\t\t$modal.open({\n\t\t\t\t\t// \t\t\t\t\t\ttemplateUrl: 'components/reportChart/reportChartModal.html',\n\t\t\t\t\t// \t\t\t\t\t\tsize: 'lg',\n\t\t\t\t\t// \t\t\t\t\t\tcontroller: 'ReportChartModal',\n\t\t\t\t\t// \t\t\t\t\t\twindowClass: 'report-chart-modal',\n\t\t\t\t\t// \t\t\t\t\t\tbackdrop: 'static',\n\t\t\t\t\t// \t\t\t\t\t\tresolve: {\n\t\t\t\t\t// \t\t\t\t\t\t\treportObj: function () {\n\t\t\t\t\t// \t\t\t\t\t\t\t\treturn parentScope.reportObj;\n\t\t\t\t\t// \t\t\t\t\t\t\t},\n\t\t\t\t\t// \t\t\t\t\t\t\ttitle: function () {\n\t\t\t\t\t// \t\t\t\t\t\t\t\treturn parentScope.chartName;\n\t\t\t\t\t// \t\t\t\t\t\t\t}\n\t\t\t\t\t// \t\t\t\t\t\t}\n\t\t\t\t\t// \t\t\t\t\t});\n\t\t\t\t\t// \t\t\t\t},\n\t\t\t\t\t// \t\t\t\tsymbol: 'url(images/maximize_16.png)'\n\t\t\t\t\t// \t\t\t}\n\t\t\t\t\t// \t\t}\n\t\t\t\t\t// \t});\n\t\t\t\t\t// }\n\n\t\t\t\t} else {\n\t\t\t\t\t// The reportObj returned as null so we show a proper message instead of the chart\n\t\t\t\t\t$scope.chartConfig = {\n\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\tnoData: $scope.bundle.chart.dataErrorMessage,\n\t\t\t\t\t\ttitle: {text: $scope.bundle.chart.dataErrorTitle},\n\t\t\t\t\t\tseries: [],\n\t\t\t\t\t\tcredits: {enabled: false},\n\n\t\t\t\t\t\t// @TODO Revisit\n\t\t\t\t\t\t// Something like this should hide the top button from the chart, but in fact\n\t\t\t\t\t\t// it is not working for some reason.\n\t\t\t\t\t\texporting: {\n\t\t\t\t\t\t\tenabled: false,\n\t\t\t\t\t\t\tbuttons: {\n\t\t\t\t\t\t\t\texportButton: {\n\t\t\t\t\t\t\t\t\tenabled: false\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tprintButton: {\n\t\t\t\t\t\t\t\t\tenabled: false\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t});\n\t\t};\n\t}\n]).controller('ReportChartModal', [\n\t'$scope',\n\t'$modalInstance',\n\t'$timeout',\n\t'reportObj',\n\t'title',\n\tfunction ($scope, $modalInstance, $timeout, reportObj, title) {\n\n\t\t$scope.title = title;\n\n\t\t// TODO: need to re-evaluate that. Bootstrap's modal is not smart enough to tell us whether the modal is rendered or not.\n\t\t// This is causing problems with charts. Moving forward, we should create our won't modal (like we have created a flyout,\n\t\t// which have a better way of telling whether the flyout is rendered or not).\n\t\t$timeout(function () {\n\t\t\t$timeout(function () {\n\t\t\t\t$scope.reportObj = reportObj;\n\t\t\t}, 0);\n\t\t}, 0);\n\n\t\t/**\n\t\t * @ngdoc method\n\t\t * @name Controllers.ReportChartController#closeChartModal\n\t\t * @methodOf Controllers.ReportChartController\n\t\t * @description Closes the modal window when clicking the close button\n\t\t *\n\t\t */\n\t\t$scope.closeChartModal = function () {\n\t\t\t$modalInstance.close();\n\t\t};\n\n\t\t// Note this is a work around to ensure the chart fits the print page.\n\t\t// Based on {@link http://stackoverflow.com/questions/18500476/resize-a-chart-before-printing-with-highcharts}.\n\t\t// TODO: need to reevaluate this for a better solution.\n\t\t/* global Highcharts */\n\t\tHighcharts.wrap(Highcharts.Chart.prototype, 'print', function (proceed) {\n\t\t\tvar that = this;\n\t\t\tvar chartWidth = that.chartWidth;   // Save original chart width\n\t\t\tvar chartHeight = that.chartHeight; // Save original chart height\n\n\t\t\tthis.setSize(600, 400, false); // Set chart size for print\n\t\t\tproceed.call(this);\n\n\t\t\t// Set chart size back to modal size\n\t\t\t$timeout(function () {\n\t\t\t\tthat.setSize(chartWidth, chartHeight, false);\n\t\t\t}, 0);\n\t\t});\n\t}\n]);\n"]}