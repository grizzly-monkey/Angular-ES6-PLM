{"version":3,"sources":["../../../components/tabularDataWidget/TableColumnSort.js"],"names":[],"mappings":"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","file":"TableColumnSort.js","sourcesContent":["'use strict';\n\n/**\n * @ngdoc directive\n * @name Directives.tableColumnSort\n * @restrict A\n *\n * @description To get the default sort column of tabular data widget.<br>\n * This should be used with {@link Directives.tabularDataWidget}.\n *\n * ##Dependencies\n * - Requires {@link Controllers.TabularDataWidgetController}\n *\n */\nangular.module('plm360.tabularDataWidget').directive('tableColumnSort', [\n\t'$document',\n\t'$compile',\n\t'$timeout',\n\t'$log',\n\t'$q',\n\t'_',\n\tfunction ($document, $compile, $timeout, $log, $q, _) {\n\t\treturn {\n\t\t\tpriority: 3,\n\t\t\trestrict: 'A',\n\t\t\treplace: true,\n\t\t\trequire: '^tabularDataWidget',\n\t\t\tlink: function (scope, element, attrs, tabularDataWidgetCtrl) {\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc property\n\t\t\t\t * @name Directives.tableColumnSort#columnHeaders\n\t\t\t\t * @propertyOf Directives.tableColumnSort\n\t\t\t\t * @description `private` The list of table header, corresponds to <code>tableColumns</code> in TDWCtrl.\n\t\t\t\t */\n\t\t\t\tvar columnHeaders;\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc property\n\t\t\t\t * @name Directives.tableColumnSort#columnHeadersElements\n\t\t\t\t * @propertyOf Directives.tableColumnSort\n\t\t\t\t * @description `private` The list of actual table header elements.\n\t\t\t\t */\n\t\t\t\tvar columnHeadersElements;\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc property\n\t\t\t\t * @name Directives.tableColumnSort#columnScopeMap\n\t\t\t\t * @propertyOf Directives.tableColumnSort\n\t\t\t\t * @description The map to trace each column to its respective column scope.\n\t\t\t\t */\n\t\t\t\tscope.columnScopeMap = {};\n\n\t\t\t\t// Observe function will be called on next digest cycle after compilation,\n\t\t\t\t// ensuring that the DOM is ready. In order to use this way of finding whether\n\t\t\t\t// DOM is ready, we need to observe a scope property used by TDW in its template.\n\t\t\t\tattrs.$observe('tableRender', function (value) {\n\t\t\t\t\ttriggerInit();\n\t\t\t\t});\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc method\n\t\t\t\t * @name Directives.tableColumnSort#triggerInit\n\t\t\t\t * @methodOf Directives.tableColumnSort\n\t\t\t\t * @description Initialization function\n\t\t\t\t */\n\t\t\t\tvar triggerInit = function () {\n\n\t\t\t\t\t// Destroy all the previously stored column scopes\n\t\t\t\t\t// since the triggerInit function is called multiple times\n\t\t\t\t\t_.each(scope.columnScopeMap, function (childScope) {\n\t\t\t\t\t\tchildScope.$destroy();\n\t\t\t\t\t});\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @ngdoc property\n\t\t\t\t\t * @name Directives.tableColumnSort#currentSortColId\n\t\t\t\t\t * @propertyOf Directives.tableColumnSort\n\t\t\t\t\t * @description The current column that is being sorted.\n\t\t\t\t\t */\n\t\t\t\t\tscope.currentSortColId = null;\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @ngdoc property\n\t\t\t\t\t * @name Directives.tableColumnSort#sortConfig\n\t\t\t\t\t * @propertyOf Directives.tableColumnSort\n\t\t\t\t\t * @description The sort configuration from respective controllers.<br>\n\t\t\t\t\t * <code>disableInitialSort</code>: True, to disable the initial sorting and remove the sort carets.<br>\n\t\t\t\t\t * <code>applySort</code>: The actual sort function from the respective controllers.\n\t\t\t\t\t */\n\t\t\t\t\tscope.sortConfig = scope.$eval(attrs.tableColumnSort);\n\n\t\t\t\t\tif (!scope.sortConfig) {\n\t\t\t\t\t\t$log.error('TableColumnSort is missing attrs!');\n\t\t\t\t\t}\n\n\t\t\t\t\tcolumnHeaders = tabularDataWidgetCtrl.getColumnList();\n\t\t\t\t\tcolumnHeadersElements = element.find('th');\n\n\t\t\t\t\t// Check if there is a user-defined default sort column\n\t\t\t\t\tvar defaultColumn = _.find(columnHeaders, function (column) {\n\t\t\t\t\t\treturn column.defaultSortColumn === true;\n\t\t\t\t\t});\n\n\t\t\t\t\t// If user did not define a default sort column,\n\t\t\t\t\t// set default to first column with enableColumnSorting\n\t\t\t\t\tif (!defaultColumn) {\n\t\t\t\t\t\tdefaultColumn = _.find(columnHeaders, function (column) {\n\t\t\t\t\t\t\treturn column.enableColumnSorting === true;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// Find the sortable table columns\n\t\t\t\t\tif (defaultColumn && scope.sortConfig) {\n\t\t\t\t\t\t_.each(columnHeaders, function (column, index) {\n\t\t\t\t\t\t\tif (column.enableColumnSorting === true) {\n\t\t\t\t\t\t\t\t// Set the current column to be sorted as the default column\n\t\t\t\t\t\t\t\tscope.currentSortColId = defaultColumn.field;\n\n\t\t\t\t\t\t\t\t// Create a scope for each sortable column\n\t\t\t\t\t\t\t\tvar columnScope = scope.$new();\n\n\t\t\t\t\t\t\t\tcolumnScope.data = column;\n\t\t\t\t\t\t\t\t// There are three options for sortOrder: 'asc', 'desc', and '' (no sort).\n\t\t\t\t\t\t\t\t// The sort order for each column defaults to 'asc' unless specified.\n\t\t\t\t\t\t\t\t// If disableInitialSort is true, sort order should be '' for all columns.\n\t\t\t\t\t\t\t\tif (scope.sortConfig.initialSortOrder === 'desc') {\n\t\t\t\t\t\t\t\t\tvar descending = scope.sortConfig.disableInitialSort ? '' : 'desc';\n\t\t\t\t\t\t\t\t\tcolumnScope.sortOrder = column === defaultColumn ? descending : '';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tvar ascending = scope.sortConfig.disableInitialSort ? '' : 'asc';\n\t\t\t\t\t\t\t\t\tcolumnScope.sortOrder = column === defaultColumn ? ascending : '';\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// $compile cannot be performed on <th> as it affects ng-repeat,\n\t\t\t\t\t\t\t\t// therefore, perform $compile on the <span> child of <th>\n\t\t\t\t\t\t\t\tvar spanChild = columnHeadersElements.eq(index).children().eq(0);\n\n\t\t\t\t\t\t\t\tspanChild.attr('table-header-cell-sort', '');\n\t\t\t\t\t\t\t\tspanChild.attr('data', 'data');\n\t\t\t\t\t\t\t\tspanChild.attr('sort-order', 'sortOrder');\n\t\t\t\t\t\t\t\tspanChild.attr('do-sort', 'doSort(column, sortOrder)');\n\n\t\t\t\t\t\t\t\tvar el = $compile(spanChild)(columnScope);\n\n\t\t\t\t\t\t\t\t// Save the columnScope to the map\n\t\t\t\t\t\t\t\tscope.columnScopeMap[column.field] = columnScope;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$log.error('No column enabled for sorting!');\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc method\n\t\t\t\t * @name Directives.tableColumnSort#doSort\n\t\t\t\t * @methodOf Directives.tableColumnSort\n\t\t\t\t * @description Determines the current column to be sorted and\n\t\t\t\t * calls the sort function in the respective controllers.\n\t\t\t\t *\n\t\t\t\t * @params {Object} column\t\tThe object of the current column to be sorted.\n\t\t\t\t * @params {String} sortOrder\tThe sort order - can either 'asc' or 'desc'.\n\t\t\t\t */\n\t\t\t\tscope.doSort = function (column, sortOrder) {\n\t\t\t\t\t// If the column to be sorted is a new column,\n\t\t\t\t\t// reset the sort order of the previous column,\n\t\t\t\t\t// and the set new column to the current sort column.\n\t\t\t\t\tif (column.field !== scope.currentSortColId) {\n\t\t\t\t\t\tscope.columnScopeMap[scope.currentSortColId].sortOrder = '';\n\t\t\t\t\t\tscope.currentSortColId = column.field;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (scope.sortConfig.applySort) {\n\t\t\t\t\t\tscope.sortConfig.applySort(column.field, sortOrder, scope);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$log.error('Sort function is not defined in controller!');\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}\n]);\n"]}