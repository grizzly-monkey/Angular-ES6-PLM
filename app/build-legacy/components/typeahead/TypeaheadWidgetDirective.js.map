{"version":3,"sources":["../../../components/typeahead/TypeaheadWidgetDirective.js"],"names":[],"mappings":"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","file":"TypeaheadWidgetDirective.js","sourcesContent":["'use strict';\n\nangular.module('plm360.typeahead', [])\n/**\n * @ngdoc directive\n * @name Directives.typeaheadWidget\n * @restrict E\n *\n * @description A simple typeahead widget that receives data and returns a filtered array of that data\n * ####- data: The array with all the objects to filter on\n * ####- filter: The key to use for the search\n * ####- matched: The array containing the objects that matched the filtering\n * ####- caseSensitive: Boolean val to determine if the filter should take into account the case of the typed val\n * ####- typedVal: The string that was typed in the input box\n * ####- remote: The function to be called for remote filtering. This property will also be used to identify whether we want local or remote filtering.\n * ####- waitTime: The number of milliseconds to wait before filtering the data. This is an optional property.\n * ####- filterDropdownData: The data to populate dropdown. This is an optional property.\n *\n * ##Dependencies\n *\n * @example\n * <doc:example>\n *   <doc:source>\n *        <typeahead-widget data=\"Array\" matched=\"Array\" filter=\"String\" case-sensitive=\"String\" typed-val=\"Object\"></typeahead-widget>\n *   </doc:source>\n * </doc:example>\n */\n\n.directive('typeaheadWidget', [\n\t'$rootScope',\n\t'$compile',\n\t'$document',\n\t'$parse',\n\t'$log',\n\t'$timeout',\n\t'$window',\n\tfunction ($rootScope, $compile, $document, $parse, $log, $timeout, $window) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\treplace: true,\n\t\t\tscope: {\n\t\t\t\tdata: '=',\n\t\t\t\tfilter: '@',\n\t\t\t\tmatched: '=',\n\t\t\t\tcaseSensitive: '@',\n\t\t\t\ttypedVal: '=',\n\t\t\t\twaitTime: '@',\n\t\t\t\tremoteFilter: '&',\n\t\t\t\tisRemote: '@',\n\t\t\t\toptionChanged: '&',\n\t\t\t\tfilterDropdownData: '=',\n\t\t\t\tpercentage: '@'\n\t\t\t},\n\t\t\ttemplateUrl: 'components/typeahead/typeaheadWidget.html',\n\t\t\tlink: function (scope, element, attributes) {\n\t\t\t\t// Handles error\n\t\t\t\tif (angular.isUndefined(scope.typedVal)) {\n\t\t\t\t\t$log.error('You must supply a typedVal to begin with, even if empty, for the TypeaheadWidget!');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc property\n\t\t\t\t * @name Directives.typeaheadWidget#waitTime\n\t\t\t\t * @propertyOf Directives.typeaheadWidget\n\t\t\t\t * @description The wait time in milliseconds to be used.\n\t\t\t\t */\n\t\t\t\tvar waitTime = scope.$eval(attributes.waitTime) || 0;\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc property\n\t\t\t\t * @name Directives.typeaheadWidget#timeoutPromise\n\t\t\t\t * @propertyOf Directives.typeaheadWidget\n\t\t\t\t * @description The timeout promise to allow stacked calls to be cancelled later.\n\t\t\t\t */\n\t\t\t\tvar timeoutPromise;\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc property\n\t\t\t\t * @name Directives.typeaheadWidget#parentEl\n\t\t\t\t * @propertyOf Directives.typeaheadWidget\n\t\t\t\t * @description The parent element of the element used with adjustMaxHeight.\n\t\t\t\t */\n\t\t\t\tscope.parentEl = element;\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc method\n\t\t\t\t * @name Directives.typeaheadWidget#toggled\n\t\t\t\t * @propertyOf Directives.typeaheadWidget\n\t\t\t\t * @description The status of the filter dropdown.\n\t\t\t\t */\n\t\t\t\tscope.toggled = function (open) {\n\t\t\t\t\tscope.dropdownStatus = open;\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc method\n\t\t\t\t * @name Directives.typeaheadWidget#init\n\t\t\t\t * @propertyOf Directives.typeaheadWidget\n\t\t\t\t * @description Initialization function\n\t\t\t\t */\n\t\t\t\tvar init = function () {\n\t\t\t\t\tvar dropdownCaretEl;\n\t\t\t\t\tvar searchEl;\n\n\t\t\t\t\tif (angular.isDefined(scope.filterDropdownData) &&\n\t\t\t\t\t\tangular.isDefined(scope.filterDropdownData.selectedItemId)) {\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * @ngdoc property\n\t\t\t\t\t\t * @name Directives.typeaheadWidget#selectedOptionId\n\t\t\t\t\t\t * @propertyOf Directives.typeaheadWidget\n\t\t\t\t\t\t * @description The selected item id in the dropdown.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tscope.selectedOptionId = scope.filterDropdownData.selectedItemId;\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * @ngdoc method\n\t\t\t\t\t\t * @name Directives.typeaheadWidget#selectOption\n\t\t\t\t\t\t * @methodOf Directives.typeaheadWidget\n\t\t\t\t\t\t * @description Changes the selected option according to the index being passed.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tscope.onSelectionChange = function () {\n\t\t\t\t\t\t\tscope.selectedOptionId = scope.selectedOption.link;\n\t\t\t\t\t\t\tscope.placeholder = $rootScope.bundle.text.search + ' ' + scope.selectedOption.title;\n\t\t\t\t\t\t\tscope.optionChanged({selectedId: scope.selectedOption.link});\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * @ngdoc property\n\t\t\t\t\t\t * @name Directives.typeaheadWidget#placeholder\n\t\t\t\t\t\t * @propertyOf Directives.typeaheadWidget\n\t\t\t\t\t\t * @description Text for the placeholder in search bar.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tscope.placeholder = $rootScope.bundle.text.search + ' ' + scope.filterDropdownData.itemList[0].title;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscope.placeholder = $rootScope.bundle.text.search;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tinit();\n\n\t\t\t\tscope.$watch('filterDropdownData', function () {\n\t\t\t\t\tinit();\n\t\t\t\t});\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc method\n\t\t\t\t * @name Directives.typeaheadWidget#removeTypedVal\n\t\t\t\t * @methodOf Directives.typeaheadWidget\n\t\t\t\t * @description A method to clear the search input.\n\t\t\t\t */\n\t\t\t\tscope.removeTypedVal = function () {\n\t\t\t\t\tscope.typedVal = '';\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc method\n\t\t\t\t * @name Directives.typeaheadWidget#scheduleSearchWithTimeout\n\t\t\t\t * @methodOf Directives.typeaheadWidget\n\t\t\t\t * @description A private method to schedule filter with timeout.\n\t\t\t\t *\n\t\t\t\t * @param {String} inputValue Input value to be used for filtering.\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t\t\tvar scheduleFilterWithTimeout = function (inputValue) {\n\t\t\t\t\ttimeoutPromise = $timeout(function () {\n\t\t\t\t\t\tfilterValue(inputValue);\n\t\t\t\t\t}, waitTime);\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc method\n\t\t\t\t * @name Directives.typeaheadWidget#cancelPreviousTimeout\n\t\t\t\t * @methodOf Directives.typeaheadWidget\n\t\t\t\t * @description A private method to cancel a scheduled filter.\n\t\t\t\t *\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t\t\tvar cancelPreviousTimeout = function () {\n\t\t\t\t\tif (timeoutPromise) {\n\t\t\t\t\t\t$timeout.cancel(timeoutPromise);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc method\n\t\t\t\t * @name Directives.typeaheadWidget#localFilter\n\t\t\t\t * @methodOf Directives.typeaheadWidget\n\t\t\t\t * @description A private method to filter data locally.\n\t\t\t\t *\n\t\t\t\t * @param {String} inputValue Input value to be used for filtering.\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t\t\tvar localFilter = function (inputValue) {\n\t\t\t\t\tvar caseSensitiveness = (scope.caseSensitive === 'true');\n\n\t\t\t\t\tscope.matched = _.filter(scope.data, function (value) {\n\t\t\t\t\t\tvar stringToCheck = caseSensitiveness ? value[scope.filter] : String(value[scope.filter]).toLowerCase();\n\t\t\t\t\t\tvar typedVal = caseSensitiveness ? inputValue : String(inputValue).toLowerCase();\n\n\t\t\t\t\t\treturn (stringToCheck.indexOf(typedVal) !== -1);\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc method\n\t\t\t\t * @name Directives.typeaheadWidget#filterValue\n\t\t\t\t * @methodOf Directives.typeaheadWidget\n\t\t\t\t * @description A triage method for filter.\n\t\t\t\t *\n\t\t\t\t * @param {String} inputValue Input value to be used for filtering.\n\t\t\t\t * @private\n\t\t\t\t */\n\t\t\t\tvar filterValue = function (inputValue) {\n\t\t\t\t\tif (scope.isRemote === 'true') {\n\t\t\t\t\t\tscope.remoteFilter({searchValue: inputValue});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlocalFilter(inputValue);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Watches for changes in the input\n\t\t\t\tscope.$watch('typedVal', function (newVal, oldVal) {\n\t\t\t\t\tif (newVal !== oldVal) {\n\t\t\t\t\t\tif (waitTime > 0) {\n\t\t\t\t\t\t\tcancelPreviousTimeout();\n\t\t\t\t\t\t\tscheduleFilterWithTimeout(newVal);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfilterValue(newVal);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n]);\n"]}