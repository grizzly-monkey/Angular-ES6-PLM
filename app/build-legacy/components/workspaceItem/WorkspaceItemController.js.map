{"version":3,"sources":["../../../components/workspaceItem/WorkspaceItemController.js"],"names":[],"mappings":"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","file":"WorkspaceItemController.js","sourcesContent":["'use strict';\n\nangular.module('plm360.workspaceItem', [])\n\n/**\n * @ngdoc object\n * @name Controllers.WorkspaceItemController\n *\n * @description This controller corresponds to /workspaceItems/{workspaceId}. It represents an abstract state and contains nested views.\n *\n * ##Dependencies\n *\n */\n.controller('WorkspaceItemController', [\n\t'$q',\n\t'$scope',\n\t'$rootScope',\n\t'$state',\n\t'$stateParams',\n\t'$timeout',\n\t'ModelsManager',\n\t'EventService',\n\t'_',\n\tfunction ($q, $scope, $rootScope, $state, $stateParams, $timeout, ModelsManager, EventService, _) {\n\n\t\t/**\n\t\t * @ngdoc property\n\t\t * @name Controllers.WorkspaceItemController#tabMapping\n\t\t * @propertyOf Controllers.WorkspaceItemController\n\t\t * @description `private` The mapping of icons and ids for the tabs\n\t\t * The 'icon' is not being used in Galileo, but left here for legacy purposes in case we use them later\n\t\t *\n\t\t */\n\t\tvar tabMapping = {\n\t\t\titemDetails: { // Item Details\n\t\t\t\ticon: 'icon-Info',\n\t\t\t\tactive: 'details',\n\t\t\t\tlink: 'details'\n\t\t\t},\n\t\t\tlinkedItems: { // Managed Items\n\t\t\t\ticon: 'icon-Connect',\n\t\t\t\tactive: 'affected-items',\n\t\t\t\tlink: 'affected-items'\n\t\t\t},\n\t\t\tgridDetails: { // Grid\n\t\t\t\ticon: 'icon-Tabular',\n\t\t\t\tactive: 'item-grid',\n\t\t\t\tlink: 'grid'\n\t\t\t},\n\t\t\tprojectManagement: { // Project Management\n\t\t\t\ticon: 'icon-Sheets',\n\t\t\t\tactive: 'project-management',\n\t\t\t\tlink: 'project-management'\n\t\t\t},\n\t\t\tpartAttachment: { // Attachments from CPDM\n\t\t\t\ticon: 'icon-Attach',\n\t\t\t\tactive: 'attachments',\n\t\t\t\tlink: 'attachments'\n\t\t\t},\n\t\t\tworkflowActions: { // Workflow Actions\n\t\t\t\ticon: 'icon-a360-organization',\n\t\t\t\tactive: 'workflow-map',\n\t\t\t\tlink: 'workflow-map'\n\t\t\t},\n            bomViewNested: { // Bill of Materials\n                icon: 'icon-Heirarchy2',\n                active: 'bom',\n                link: 'bom'\n            },\n\t\t\t// bomViewWhereUsed: { // Where Used NOT AVAILABLE\n\t\t\t// \ticon: 'icon-Heirarchy1',\n\t\t\t// \tactive: 'where-used',\n\t\t\t// \tlink: 'where-used-view'\n\t\t\t// },\n\t\t\t// sourcing: {\n\t\t\t// \ticon: 'icon-Library',\n\t\t\t// \tactive: 'sourcing',\n\t\t\t// \tlink: 'sourcing-view'\n\t\t\t// },\n\t\t\t// 'sourcingSuppliedItems': { // Supplied Items NOT AVAILABLE\n\t\t\t// \ticon: 'icon-CubeSectioned',\n\t\t\t// \tactive: 'supplied-items',\n\t\t\t// \tlink: 'supplied-items-view'\n\t\t\t// },\n\t\t\trelationship: { // Relationships\n\t\t\t\ticon: 'icon-Transfer',\n\t\t\t\tactive: 'relationships',\n\t\t\t\tlink: 'relationships'\n\t\t\t},\n\t\t\tlinkedItemsReferences: { // Workflow\n\t\t\t\ticon: 'icon-History',\n\t\t\t\tactive: 'workflow',\n\t\t\t\tlink: 'workflow'\n\t\t\t},\n\t\t\tmilestonesDetails: { // Milestones NOT AVAILABLE\n\t\t\t\ticon: 'icon-Tasks',\n\t\t\t\tactive: 'milestones',\n\t\t\t\tlink: 'milestone'\n\t\t\t},\n\t\t\tpartHistory: { // Change Log\n\t\t\t\ticon: 'icon-TimeActivity',\n\t\t\t\tactive: 'change-log',\n\t\t\t\tlink: 'change-log'\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * @ngdoc property\n\t\t * @name Controllers.WorkspaceItemController#workspaceId\n\t\t * @propertyOf Controllers.WorkspaceItemController\n\t\t * @description The workspace id of the current selected item.\n\t\t *\n\t\t */\n\t\t$scope.workspaceId = $stateParams.workspaceId;\n\n\t\t/**\n\t\t * @ngdoc property\n\t\t * @name Controllers.WorkspaceItemController#itemId\n\t\t * @propertyOf Controllers.WorkspaceItemController\n\t\t * @description The item id of the current selected item.\n\t\t *\n\t\t */\n\t\t$scope.itemId = $stateParams.itemId;\n\n\t\t/**\n\t\t * @ngdoc property\n\t\t * @name Controllers.WorkspaceItemController#tabList\n\t\t * @propertyOf Controllers.WorkspaceItemController\n\t\t * @description Stores parsed list of tabs for the current item\n\t\t *\n\t\t */\n\t\t$scope.tabList = [];\n\n\t\t/**\n\t\t * @ngdoc method\n\t\t * @name Controllers.WorkspaceItemController#getStateName\n\t\t * @methodOf Controllers.WorkspaceItemController\n\t\t * @description Gets the state name for the tab, with its params\n\t\t *\n\t\t */\n\t\t$scope.getStateName = function (tabLinkId) {\n\t\t\tvar stateName;\n\n\t\t\tif ((tabLinkId === '') || angular.isUndefined(tabLinkId)) {\n\t\t\t\tstateName = 'dashboard';\n\t\t\t} else {\n\t\t\t\tstateName = tabLinkId + '({itemId: \"' + $scope.itemId + '\"})';\n\t\t\t}\n\n\t\t\treturn stateName;\n\t\t};\n\n\t\t/**\n\t\t * @ngdoc method\n\t\t * @name Controllers.WorkspaceItemController#isStateActive\n\t\t * @methodOf Controllers.WorkspaceItemController\n\t\t * @description Checks which is the current active state\n\t\t *\n\t\t * @param {String} activeStateId The name of the active state passed by the view\n\t\t * @param {String} stateViewId The name of the view state passed by the view\n\t\t * @param {String} stateEditId The name of the edit state passed by the view\n\t\t *\n\t\t * @returns {Boolean} true/false If it's the current state\n\t\t *\n\t\t */\n\t\t$scope.isStateActive = function (activeStateId, stateViewId, stateEditId) {\n\t\t\treturn ($state.includes(activeStateId) || $state.includes(stateViewId) || $state.includes(stateEditId)) ? true : false;\n\t\t};\n\n\t\tvar itemListenerId = EventService.listen('itemInstance:' + $scope.itemId + ':done', function (event, itemObj) {\n\t\t\tEventService.unlisten(itemListenerId);\n\t\t\t$scope.workspaceId = itemObj.workspaceObj.getId();\n\n\t\t\t/**\n\t\t\t * @ngdoc property\n\t\t\t * @name Controllers.WorkspaceItemController#tabsListenerId\n\t\t\t * @propertyOf Controllers.WorkspaceItemController\n\t\t\t * @description `private` The listener for the loading of the tabs\n\t\t\t *\n\t\t\t */\n\t\t\tvar tabsListenerId = EventService.listen('itemTabs:' + $scope.workspaceId + ':done', function (event, tabsObj) {\n\t\t\t\tEventService.unlisten(tabsListenerId);\n\t\t\t\t$scope.tabList = [];\n\t\t\t\t_.each(tabsObj.getFullList(), function (tab, tabIndex) {\n\t\t\t\t\tvar actionNameStripped = tab.actionName.substr(1); // Strips out the slash from the action name\n\n\t\t\t\t\t// Searches for the tab in the mapping\n\t\t\t\t\tvar foundTab = _.find(tabMapping, function (foundTab, foundTabEl) {\n\t\t\t\t\t\treturn foundTabEl === actionNameStripped;\n\t\t\t\t\t});\n\n\t\t\t\t\t// If undefined, tab should not be displayed\n\t\t\t\t\tif (angular.isDefined(foundTab)) {\n\t\t\t\t\t\t// If name is null, the tab has not been customized\n\t\t\t\t\t\tvar tabName = (tab.name === null) ? tab.key : tab.name;\n\n\t\t\t\t\t\t// Pushes the object that's a result of the content retrieved from the endpoint, and the local mapping\n\t\t\t\t\t\t$scope.tabList.push({\n\t\t\t\t\t\t\tname: tabName,\n\t\t\t\t\t\t\tid: actionNameStripped,\n\t\t\t\t\t\t\tactive: foundTab.active,\n\t\t\t\t\t\t\tviewLink: foundTab.active + '-view',\n\t\t\t\t\t\t\teditLink: foundTab.active + '-edit',\n\t\t\t\t\t\t\tlink: foundTab.link,\n\t\t\t\t\t\t\ticon: foundTab.icon\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\t// Gets tab list\n\t\t\tModelsManager.getTabs($scope.workspaceId);\n\t\t});\n\t\tModelsManager.getItem($scope.itemId);\n\n\t\t/**\n\t\t * @ngdoc method\n\t\t * @name Controllers.WorkspaceItemController#viewLoad\n\t\t * @methodOf Controllers.WorkspaceItemController\n\t\t * @description Called whenever a new view has been loaded (an item's \"tab\"), and broadcasts an event\n\t\t *\n\t\t */\n\t\t$scope.viewLoad = function () {\n\t\t\tEventService.send('viewLoad:done');\n\t\t};\n\t}\n]);\n"]}