{"version":3,"sources":["../../../components/permissions/isPermittedDirective.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCb,OAAO,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC,SAAS,CAAC,aAAa,EAAE,CAC7D,cAAc,EACd,QAAQ,EACR,mBAAmB,EACnB,WAAW,EACX,UAAU,YAAY,EAAE,MAAM,EAAE,iBAAiB,EAAE,SAAS,EAAE;AAC7D,QAAO;AACN,UAAQ,EAAE,GAAG;AACb,MAAI,EAAE,cAAU,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE;;;;;;;;;;;;;AAalC,OAAI,gBAAgB,GAAG,SAAnB,gBAAgB,CAAa,SAAS,EAAE;AAC3C,QAAI,CAAC,SAAS,EAAE;AACf,QAAG,CAAC,MAAM,EAAE,CAAC;KACb;IACD,CAAC;;;;;;;;;;AAUF,QAAK,CAAC,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC;;;;;;;;;;AAUjD,QAAK,CAAC,yBAAyB,GAAG,MAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC,KAAK,CAAC,CAAC;;AAEjF,OAAI,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC,IACvC,OAAO,CAAC,SAAS,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE;AAC7C,qBAAiB,CACf,cAAc,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,KAAK,CAAC,WAAW,IAAI,YAAY,CAAC,WAAW,CAAC,CAC5F,IAAI,CAAC,gBAAgB,CAAC,CAAC;;AAEzB,SAAK,CAAC,QAAQ,CAAC,aAAa,EAAE,UAAU,KAAK,EAAE;AAC9C,sBAAiB,CACf,cAAc,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,KAAK,CAAC,CACpD,IAAI,CAAC,gBAAgB,CAAC,CAAC;KACzB,CAAC,CAAC;IACH;;AAED,OAAI,GAAG,CAAC,MAAM,IAAI,OAAO,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE;AACzD,qBAAiB,CACf,uBAAuB,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,yBAAyB,CAAC,CAC7I,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACzB;GACD;EACD,CAAC;CACF,CACD,CAAC,CAAC","file":"isPermittedDirective.js","sourcesContent":["'use strict';\n\n/**\n * @ngdoc directive\n * @name Directives.isPermitted\n * @restrict A\n *\n * @description Hides the element if user does not have permission to see,\n * or if the permission hasn't been supplied.\n *\n * -workspaceId: This is an optional attribute that can be used with this\n * directive to apply permission for the workspace, the id of which is provided\n * as a value of this attribute. This is very useful to control visibility of\n * the element based on other workspaces. Possible usage in global quick create.\n *\n * -applyLock: This is an optional attribute that can be used with this\n * directive to take workspace locking in to consideration while evaluating the\n * visibility of the element. Possible usage for Add/Edit/Delete buttons on\n * Item Details / Managed View / Grid and Relationship view.\n *\n * -applyRevisionOverrideLock: This is an optional attribute that can be used\n * with this directive to take revision override locking in to consideration\n * while evaluating the visibility of the element. Note: This attribute is only\n * applicable for revision controlled workspace item, for the rest this will be\n * ignored. Possible usage for Add/Edit/Delete buttons on Item Details /\n * Managed View / Grid and Relationship view.\n *\n * ##Dependencies\n * - Requires {@link Services/PermissionService}\n *\n * @example\n * <doc:example>\n *   <doc:source>\n * \t\t<div is-permitted=\"{{PLMPermissions.VIEW_ITEM}}\"\n * \t\t\tworkspace-id=\"{{workspaceId}}\"\n * \t\t\tapply-lock=\"{{Boolean}}\">\n * \t\t</div>\n *   </doc:source>\n * </doc:example>\n */\nangular.module('plm360.permissions').directive('isPermitted', [\n\t'$stateParams',\n\t'$parse',\n\t'PermissionService',\n\t'UrnParser',\n\tfunction ($stateParams, $parse, PermissionService, UrnParser) {\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tlink: function (scope, ele, attrs) {\n\t\t\t\t/**\n\t\t\t\t * @ngdoc method\n\t\t\t\t * @name Directives.isPermitted#updateVisibility\n\t\t\t\t * @methodOf Directives.isPermitted\n\t\t\t\t * @description A helper method to remove the element based on\n\t\t\t\t * whether user has permissions. It is safe to remove since\n\t\t\t\t * permissions will not change mid-view. When the element is\n\t\t\t\t * removed, we can then use CSS selectors to style the primary\n\t\t\t\t * button on the command bar.\n\t\t\t\t *\n\t\t\t\t * @param {Boolean} isVisible True to display the element.\n\t\t\t\t */\n\t\t\t\tvar updateVisibility = function (isVisible) {\n\t\t\t\t\tif (!isVisible) {\n\t\t\t\t\t\tele.remove();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc property\n\t\t\t\t * @name Directives.isPermitted#applyLock\n\t\t\t\t * @propertyOf Directives.isPermitted\n\t\t\t\t * @description Reflects a value of an OPTIONAL attribute that\n\t\t\t\t * can be used with this directive to add workspace locking\n\t\t\t\t * check while evaluating workspace id.\n\t\t\t\t */\n\t\t\t\tscope.applyLock = $parse(attrs.applyLock)(scope);\n\n\t\t\t\t/**\n\t\t\t\t * @ngdoc property\n\t\t\t\t * @name Directives.isPermitted#applyRevisionOverrideLock\n\t\t\t\t * @propertyOf Directives.isPermitted\n\t\t\t\t * @description Reflects a value of an OPTIONAL attribute that\n\t\t\t\t * can be used with this directive to add workspace revision\n\t\t\t\t * control locking check while evaluating workspace id.\n\t\t\t\t */\n\t\t\t\tscope.applyRevisionOverrideLock = $parse(attrs.applyRevisionOverrideLock)(scope);\n\n\t\t\t\tif (angular.isDefined(attrs.workspaceId) ||\n\t\t\t\t\tangular.isDefined($stateParams.workspaceId)) {\n\t\t\t\t\tPermissionService\n\t\t\t\t\t\t.hasPermissions([parseInt(attrs.isPermitted)], attrs.workspaceId || $stateParams.workspaceId)\n\t\t\t\t\t\t.then(updateVisibility);\n\n\t\t\t\t\tattrs.$observe('workspaceId', function (value) {\n\t\t\t\t\t\tPermissionService\n\t\t\t\t\t\t\t.hasPermissions([parseInt(attrs.isPermitted)], value)\n\t\t\t\t\t\t\t.then(updateVisibility);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (ele.length && angular.isDefined($stateParams.itemId)) {\n\t\t\t\t\tPermissionService\n\t\t\t\t\t\t.checkPermissionByItemId(UrnParser.encode($stateParams.itemId), parseInt(attrs.isPermitted), scope.applyLock, scope.applyRevisionOverrideLock)\n\t\t\t\t\t\t.then(updateVisibility);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n]);\n"]}